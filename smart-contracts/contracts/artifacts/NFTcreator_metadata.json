{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "approved",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "ApprovalForAll",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					}
				],
				"name": "createNFT",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "_tokenURI",
						"type": "string"
					}
				],
				"name": "create",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "current",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "getApproved",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					}
				],
				"name": "isApprovedForAll",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "ownerOf",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "setApprovalForAll",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "tokenURI",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"approve(address,uint256)": {
					"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
				},
				"balanceOf(address)": {
					"details": "Returns the number of tokens in ``owner``'s account."
				},
				"getApproved(uint256)": {
					"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
				},
				"isApprovedForAll(address,address)": {
					"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
				},
				"name()": {
					"details": "Returns the token collection name."
				},
				"ownerOf(uint256)": {
					"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
				},
				"safeTransferFrom(address,address,uint256)": {
					"params": {
						"from": "토큰의 현재 소유자",
						"to": "주어진 토큰 ID의 소유권을 받을 주소",
						"tokenId": "전송할 토큰의 uint256 ID"
					}
				},
				"symbol()": {
					"details": "Returns the token collection symbol."
				},
				"tokenURI(uint256)": {
					"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
				},
				"transferFrom(address,address,uint256)": {
					"params": {
						"from": "토큰의 현재 소유자",
						"to": "주어진 토큰 ID의 소유권을 받을 주소",
						"tokenId": "전송할 토큰의 uint256 ID"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"safeTransferFrom(address,address,uint256)": {
					"notice": "주어진 토큰 ID의 소유권을 다른 주소로 안전하게 전송 만일 목표 주소가 컨트랙트라면, 컨트랙트는 `onERC721Received`를 구현했어야만 함 이는 안전한 전송으로부터 호출되며 마법의 값 `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`를 반환. 만일 다른 경우에는 전송이 되돌려짐. _msgSender()는 소유자, 승인된 주소, 운영자여야 함"
				},
				"transferFrom(address,address,uint256)": {
					"notice": "주어진 토큰 ID의 소유권을 다른 주소로 전송 이 메소드는 사용하지 않는 것이 좋다, 가능하다면 `safeTransferFrom`을 사용 권장 _msgSender()는 소유자, 승인된 주소, 또는 운영자여야 함."
				}
			},
			"notice": "PJT Ⅰ - 과제 2) NFT Creator 구현 상태 변수나 함수의 시그니처는 구현에 따라 변경할 수 있습니다.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/NFTcreator.sol": "NFTcreator"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/NFTcreator.sol": {
			"keccak256": "0x7e3a2e04905a3652342956c415e8d42e3723ba37a941d18897fd414ea4383258",
			"license": "MIT",
			"urls": [
				"bzz-raw://c339d0094dd214f1844688ac574f196392b3acf246a5f51ca792b6af041b0609",
				"dweb:/ipfs/QmNb3pyqbjZknvvf2y3HmwFvPUmNKw9YKpSHPDTcTJywcV"
			]
		},
		"contracts/token/ERC721/ERC721.sol": {
			"keccak256": "0xe50949f02820ddcfed5e4ae3ee000f3943d44d324351a94e66124cf2ad5032f4",
			"license": "MIT",
			"urls": [
				"bzz-raw://fad0a29968872f9fcea1a311b0a11dacbace83bc9393645c54344d81afbffdc1",
				"dweb:/ipfs/QmSMxKGGku2UumFTZnynrXDB1CrERiLWpGEgNY5HuGXRhV"
			]
		},
		"contracts/token/ERC721/IERC721.sol": {
			"keccak256": "0x7d46ae705c48880d435f3128a5f36e102452c1035a880eb314f9cab5cb3248b6",
			"license": "MIT",
			"urls": [
				"bzz-raw://114d79b2fba48981056703bd70200b528331f6e7b3c85f7fa0fcaed7d91f6025",
				"dweb:/ipfs/QmReeV1Z7UiW73Zr4iLbqvoRB9YiW9V68uEiNqXcjzi8xh"
			]
		},
		"contracts/token/ERC721/IERC721Receiver.sol": {
			"keccak256": "0x967c9153abb26ea570e631b52ad31801439177c056168ab670d0d20049c99149",
			"license": "MIT",
			"urls": [
				"bzz-raw://12f5fd78340cbbe489a535a141f00fd91ae92908d26b6e25b5359b95880cabd5",
				"dweb:/ipfs/QmVoGtz29ZqbjEhKjSLc3V6HTza6WCR4E6EZeaTcBnBeWe"
			]
		},
		"contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
			"keccak256": "0x18d948798178a07de23bb1c061dc69134e6532d99ddbe8451b9c313aa2012afb",
			"license": "MIT",
			"urls": [
				"bzz-raw://f362805e17232f764aa628f3889b41054640979eff1fc698c4685cb2ff3fc8b7",
				"dweb:/ipfs/QmbkgMwFMAbTbaDJzucrYWrKg3XbEizdWZtmuXAKZGvGhL"
			]
		},
		"contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
			"keccak256": "0x921634b2b0f35058d8b2fbefef4147fabb966e2a9688282452e291cb5e6972a7",
			"license": "MIT",
			"urls": [
				"bzz-raw://5ab75c38ea2d78b8f5b40f383b16e1f6311253410675f5b2f67636be30ad0b00",
				"dweb:/ipfs/QmaPijzBtBPX52xYT3pCLy1PFhTWLaFTwrAh2k2QaciawC"
			]
		},
		"contracts/token/ERC721/extensions/IERC721Metadata.sol": {
			"keccak256": "0xb61391c8adec70c983c47cff53d490d8ddc71bf37a12da18dc053b45b4d813ae",
			"license": "MIT",
			"urls": [
				"bzz-raw://5d08e865414ac6e52f1a61c93acc173079fb3471db5138e3a2c23db2550114cd",
				"dweb:/ipfs/QmUhQ71H29HyjX9GnSWXdZ1Lnh4EPWAbXPhMyuWgSrDxby"
			]
		},
		"contracts/utils/Address.sol": {
			"keccak256": "0x4cdad91fcb345358c77f4c752b2b3983f783fb6bcd4c6f7f42dba588612907be",
			"license": "MIT",
			"urls": [
				"bzz-raw://678c1bfbb9fc26b0aaa34d404adbe08aa36b88b51c9eba6eba13389dac8580b7",
				"dweb:/ipfs/QmZdv53JrE4MtTR915KRpDjao32uCg6TPAXs3p95HMFvw1"
			]
		},
		"contracts/utils/Context.sol": {
			"keccak256": "0xdb19f5cb22f6551fbb03ba38b8af9e543e26deb4d23788f2946f25c091256ca3",
			"license": "MIT",
			"urls": [
				"bzz-raw://9381d108c93f3fdd1e5a4580834362f20d0f5e919d97820afd55be553ef10c19",
				"dweb:/ipfs/QmWjioeW1kKfZHtmgrpxDYhwF2sVZ8gXoWTA9mKZvWvZot"
			]
		},
		"contracts/utils/Strings.sol": {
			"keccak256": "0x90bf9a67cda8539274966706149096a2c6df1c5504aa1a4c36e8be275db822e8",
			"license": "MIT",
			"urls": [
				"bzz-raw://29937e4bb514219e1873d0b765e9980c86d2815e521e2b8608c981e284e808cd",
				"dweb:/ipfs/QmeJTbsBXFsdkL1KQERnwr1GPqsqci2dB4jzzcVrgGtBHi"
			]
		},
		"contracts/utils/introspection/ERC165.sol": {
			"keccak256": "0x1ddc5fa72d956fb7cedf2b3bece580bef31a0e61762331556f6a7201d156c543",
			"license": "MIT",
			"urls": [
				"bzz-raw://2410a30c2105252b53212542653e01d5cd06bb6b0db981e91227ab7c47d3c6f8",
				"dweb:/ipfs/QmdHFN4WSeXWm1KVhhx1TDhTxkdoQLpLdo6YT1Uev7pVUR"
			]
		},
		"contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0xe09bdf91dde6872fa597c6554ced17e679727988578019bf8aa7954e4479ef76",
			"license": "MIT",
			"urls": [
				"bzz-raw://d262e8e7efe5037ade4db603f32b45e320609777241d01498b988acbad81c8e4",
				"dweb:/ipfs/Qme5ngXzkphT96C1qKWz7XP7yFhYboiP9tVt8AMQHBEkYZ"
			]
		}
	},
	"version": 1
}