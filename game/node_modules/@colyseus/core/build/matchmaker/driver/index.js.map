{"version":3,"file":"index.js","sources":["../../../src/matchmaker/driver/index.ts"],"sourcesContent":["import { IRoomListingData, SortOptions, RoomListingData, QueryHelpers, MatchMakerDriver } from \"./interfaces\";\n\n// re-export\nexport { IRoomListingData, SortOptions, RoomListingData, QueryHelpers, MatchMakerDriver };\n\nimport { Query } from './Query';\nimport { RoomCache } from './RoomData';\n\nexport class LocalDriver implements MatchMakerDriver {\n  public rooms: RoomCache[] = [];\n\n  public createInstance(initialValues: any = {}) {\n    return new RoomCache(initialValues, this.rooms);\n  }\n\n  public find(conditions: Partial<IRoomListingData>) {\n    return this.rooms.filter(((room) => {\n      for (const field in conditions) {\n        if (\n          conditions.hasOwnProperty(field) &&\n          room[field] !== conditions[field]\n        ) {\n          return false;\n        }\n      }\n      return true;\n    }));\n  }\n\n  public findOne(conditions: Partial<IRoomListingData>) {\n    return new Query<RoomListingData>(this.rooms, conditions) as any as QueryHelpers<RoomListingData>;\n  }\n\n  public clear() {\n    this.rooms = [];\n  }\n\n  public shutdown() {}\n}\n"],"names":["RoomCache","Query"],"mappings":";;;;;;;MAQa,WAAW;IACf,KAAK,GAAgB,EAAE,CAAC;IAExB,cAAc,CAAC,gBAAqB,EAAE;QAC3C,OAAO,IAAIA,kBAAS,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;KACjD;IAEM,IAAI,CAAC,UAAqC;QAC/C,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,IAAI;YAC7B,KAAK,MAAM,KAAK,IAAI,UAAU,EAAE;gBAC9B,IACE,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC;oBAChC,IAAI,CAAC,KAAK,CAAC,KAAK,UAAU,CAAC,KAAK,CAAC,EACjC;oBACA,OAAO,KAAK,CAAC;iBACd;aACF;YACD,OAAO,IAAI,CAAC;SACb,EAAE,CAAC;KACL;IAEM,OAAO,CAAC,UAAqC;QAClD,OAAO,IAAIC,WAAK,CAAkB,IAAI,CAAC,KAAK,EAAE,UAAU,CAAyC,CAAC;KACnG;IAEM,KAAK;QACV,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;KACjB;IAEM,QAAQ,MAAK;;;;;"}