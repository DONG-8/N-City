{"version":3,"file":"documentarray.mjs","sources":["../../../../../../../node_modules/mongoose/lib/schema/documentarray.js"],"sourcesContent":["'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst ArrayType = require('./array');\nconst CastError = require('../error/cast');\nconst EventEmitter = require('events').EventEmitter;\nconst SchemaDocumentArrayOptions =\n  require('../options/SchemaDocumentArrayOptions');\nconst SchemaType = require('../schematype');\nconst ValidationError = require('../error/validation');\nconst discriminator = require('../helpers/model/discriminator');\nconst get = require('../helpers/get');\nconst handleIdOption = require('../helpers/schema/handleIdOption');\nconst util = require('util');\nconst utils = require('../utils');\nconst getConstructor = require('../helpers/discriminator/getConstructor');\n\nconst arrayAtomicsSymbol = require('../helpers/symbols').arrayAtomicsSymbol;\nconst arrayPathSymbol = require('../helpers/symbols').arrayPathSymbol;\nconst documentArrayParent = require('../helpers/symbols').documentArrayParent;\n\nlet MongooseDocumentArray;\nlet Subdocument;\n\n/**\n * SubdocsArray SchemaType constructor\n *\n * @param {String} key\n * @param {Schema} schema\n * @param {Object} options\n * @inherits SchemaArray\n * @api public\n */\n\nfunction DocumentArrayPath(key, schema, options, schemaOptions) {\n  if (schemaOptions != null && schemaOptions._id != null) {\n    schema = handleIdOption(schema, schemaOptions);\n  } else if (options != null && options._id != null) {\n    schema = handleIdOption(schema, options);\n  }\n\n  const EmbeddedDocument = _createConstructor(schema, options);\n  EmbeddedDocument.prototype.$basePath = key;\n\n  ArrayType.call(this, key, EmbeddedDocument, options);\n\n  this.schema = schema;\n  this.schemaOptions = schemaOptions || {};\n  this.$isMongooseDocumentArray = true;\n  this.Constructor = EmbeddedDocument;\n\n  EmbeddedDocument.base = schema.base;\n\n  const fn = this.defaultValue;\n\n  if (!('defaultValue' in this) || fn !== void 0) {\n    this.default(function() {\n      let arr = fn.call(this);\n      if (!Array.isArray(arr)) {\n        arr = [arr];\n      }\n      // Leave it up to `cast()` to convert this to a documentarray\n      return arr;\n    });\n  }\n\n  const parentSchemaType = this;\n  this.$embeddedSchemaType = new SchemaType(key + '.$', {\n    required: get(this, 'schemaOptions.required', false)\n  });\n  this.$embeddedSchemaType.cast = function(value, doc, init) {\n    return parentSchemaType.cast(value, doc, init)[0];\n  };\n  this.$embeddedSchemaType.$isMongooseDocumentArrayElement = true;\n  this.$embeddedSchemaType.caster = this.Constructor;\n  this.$embeddedSchemaType.schema = this.schema;\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nDocumentArrayPath.schemaName = 'DocumentArray';\n\n/**\n * Options for all document arrays.\n *\n * - `castNonArrays`: `true` by default. If `false`, Mongoose will throw a CastError when a value isn't an array. If `true`, Mongoose will wrap the provided value in an array before casting.\n *\n * @api public\n */\n\nDocumentArrayPath.options = { castNonArrays: true };\n\n/*!\n * Inherits from ArrayType.\n */\nDocumentArrayPath.prototype = Object.create(ArrayType.prototype);\nDocumentArrayPath.prototype.constructor = DocumentArrayPath;\nDocumentArrayPath.prototype.OptionsConstructor = SchemaDocumentArrayOptions;\n\n/*!\n * Ignore\n */\n\nfunction _createConstructor(schema, options, baseClass) {\n  Subdocument || (Subdocument = require('../types/embedded'));\n\n  // compile an embedded document for this schema\n  function EmbeddedDocument() {\n    Subdocument.apply(this, arguments);\n\n    this.$session(this.ownerDocument().$session());\n  }\n\n  const proto = baseClass != null ? baseClass.prototype : Subdocument.prototype;\n  EmbeddedDocument.prototype = Object.create(proto);\n  EmbeddedDocument.prototype.$__setSchema(schema);\n  EmbeddedDocument.schema = schema;\n  EmbeddedDocument.prototype.constructor = EmbeddedDocument;\n  EmbeddedDocument.$isArraySubdocument = true;\n  EmbeddedDocument.events = new EventEmitter();\n\n  // apply methods\n  for (const i in schema.methods) {\n    EmbeddedDocument.prototype[i] = schema.methods[i];\n  }\n\n  // apply statics\n  for (const i in schema.statics) {\n    EmbeddedDocument[i] = schema.statics[i];\n  }\n\n  for (const i in EventEmitter.prototype) {\n    EmbeddedDocument[i] = EventEmitter.prototype[i];\n  }\n\n  EmbeddedDocument.options = options;\n\n  return EmbeddedDocument;\n}\n\n/**\n * Adds a discriminator to this document array.\n *\n * ####Example:\n *     const shapeSchema = Schema({ name: String }, { discriminatorKey: 'kind' });\n *     const schema = Schema({ shapes: [shapeSchema] });\n *\n *     const docArrayPath = parentSchema.path('shapes');\n *     docArrayPath.discriminator('Circle', Schema({ radius: Number }));\n *\n * @param {String} name\n * @param {Schema} schema fields to add to the schema for instances of this sub-class\n * @param {String} [value] the string stored in the `discriminatorKey` property. If not specified, Mongoose uses the `name` parameter.\n * @see discriminators /docs/discriminators.html\n * @return {Function} the constructor Mongoose will use for creating instances of this discriminator model\n * @api public\n */\n\nDocumentArrayPath.prototype.discriminator = function(name, schema, tiedValue) {\n  if (typeof name === 'function') {\n    name = utils.getFunctionName(name);\n  }\n\n  schema = discriminator(this.casterConstructor, name, schema, tiedValue);\n\n  const EmbeddedDocument = _createConstructor(schema, null, this.casterConstructor);\n  EmbeddedDocument.baseCasterConstructor = this.casterConstructor;\n\n  try {\n    Object.defineProperty(EmbeddedDocument, 'name', {\n      value: name\n    });\n  } catch (error) {\n    // Ignore error, only happens on old versions of node\n  }\n\n  this.casterConstructor.discriminators[name] = EmbeddedDocument;\n\n  return this.casterConstructor.discriminators[name];\n};\n\n/**\n * Performs local validations first, then validations on each embedded doc\n *\n * @api private\n */\n\nDocumentArrayPath.prototype.doValidate = function(array, fn, scope, options) {\n  // lazy load\n  MongooseDocumentArray || (MongooseDocumentArray = require('../types/documentarray'));\n\n  const _this = this;\n  try {\n    SchemaType.prototype.doValidate.call(this, array, cb, scope);\n  } catch (err) {\n    err.$isArrayValidatorError = true;\n    return fn(err);\n  }\n\n  function cb(err) {\n    if (err) {\n      err.$isArrayValidatorError = true;\n      return fn(err);\n    }\n\n    let count = array && array.length;\n    let error;\n\n    if (!count) {\n      return fn();\n    }\n    if (options && options.updateValidator) {\n      return fn();\n    }\n    if (!array.isMongooseDocumentArray) {\n      array = new MongooseDocumentArray(array, _this.path, scope);\n    }\n\n    // handle sparse arrays, do not use array.forEach which does not\n    // iterate over sparse elements yet reports array.length including\n    // them :(\n\n    function callback(err) {\n      if (err != null) {\n        error = err;\n        if (!(error instanceof ValidationError)) {\n          error.$isArrayValidatorError = true;\n        }\n      }\n      --count || fn(error);\n    }\n\n    for (let i = 0, len = count; i < len; ++i) {\n      // sidestep sparse entries\n      let doc = array[i];\n      if (doc == null) {\n        --count || fn(error);\n        continue;\n      }\n\n      // If you set the array index directly, the doc might not yet be\n      // a full fledged mongoose subdoc, so make it into one.\n      if (!(doc instanceof Subdocument)) {\n        const Constructor = getConstructor(_this.casterConstructor, array[i]);\n        doc = array[i] = new Constructor(doc, array, undefined, undefined, i);\n      }\n\n      if (options != null && options.validateModifiedOnly && !doc.isModified()) {\n        --count || fn(error);\n        continue;\n      }\n\n      doc.$__validate(callback);\n    }\n  }\n};\n\n/**\n * Performs local validations first, then validations on each embedded doc.\n *\n * ####Note:\n *\n * This method ignores the asynchronous validators.\n *\n * @return {MongooseError|undefined}\n * @api private\n */\n\nDocumentArrayPath.prototype.doValidateSync = function(array, scope, options) {\n  const schemaTypeError = SchemaType.prototype.doValidateSync.call(this, array, scope);\n  if (schemaTypeError != null) {\n    schemaTypeError.$isArrayValidatorError = true;\n    return schemaTypeError;\n  }\n\n  const count = array && array.length;\n  let resultError = null;\n\n  if (!count) {\n    return;\n  }\n\n  // handle sparse arrays, do not use array.forEach which does not\n  // iterate over sparse elements yet reports array.length including\n  // them :(\n\n  for (let i = 0, len = count; i < len; ++i) {\n    // sidestep sparse entries\n    let doc = array[i];\n    if (!doc) {\n      continue;\n    }\n\n    // If you set the array index directly, the doc might not yet be\n    // a full fledged mongoose subdoc, so make it into one.\n    if (!(doc instanceof Subdocument)) {\n      const Constructor = getConstructor(this.casterConstructor, array[i]);\n      doc = array[i] = new Constructor(doc, array, undefined, undefined, i);\n    }\n\n    if (options != null && options.validateModifiedOnly && !doc.isModified()) {\n      continue;\n    }\n\n    const subdocValidateError = doc.validateSync();\n\n    if (subdocValidateError && resultError == null) {\n      resultError = subdocValidateError;\n    }\n  }\n\n  return resultError;\n};\n\n/*!\n * ignore\n */\n\nDocumentArrayPath.prototype.getDefault = function(scope) {\n  let ret = typeof this.defaultValue === 'function'\n    ? this.defaultValue.call(scope)\n    : this.defaultValue;\n\n  if (ret == null) {\n    return ret;\n  }\n\n  // lazy load\n  MongooseDocumentArray || (MongooseDocumentArray = require('../types/documentarray'));\n\n  if (!Array.isArray(ret)) {\n    ret = [ret];\n  }\n\n  ret = new MongooseDocumentArray(ret, this.path, scope);\n\n  for (let i = 0; i < ret.length; ++i) {\n    const Constructor = getConstructor(this.casterConstructor, ret[i]);\n    const _subdoc = new Constructor({}, ret, undefined,\n      undefined, i);\n    _subdoc.init(ret[i]);\n    _subdoc.isNew = true;\n\n    // Make sure all paths in the subdoc are set to `default` instead\n    // of `init` since we used `init`.\n    Object.assign(_subdoc.$__.activePaths.default, _subdoc.$__.activePaths.init);\n    _subdoc.$__.activePaths.init = {};\n\n    ret[i] = _subdoc;\n  }\n\n  return ret;\n};\n\n/**\n * Casts contents\n *\n * @param {Object} value\n * @param {Document} document that triggers the casting\n * @api private\n */\n\nDocumentArrayPath.prototype.cast = function(value, doc, init, prev, options) {\n  // lazy load\n  MongooseDocumentArray || (MongooseDocumentArray = require('../types/documentarray'));\n\n  // Skip casting if `value` is the same as the previous value, no need to cast. See gh-9266\n  if (value != null && value[arrayPathSymbol] != null && value === prev) {\n    return value;\n  }\n\n  let selected;\n  let subdoc;\n  const _opts = { transform: false, virtuals: false };\n  options = options || {};\n\n  if (!Array.isArray(value)) {\n    if (!init && !DocumentArrayPath.options.castNonArrays) {\n      throw new CastError('DocumentArray', util.inspect(value), this.path, null, this);\n    }\n    // gh-2442 mark whole array as modified if we're initializing a doc from\n    // the db and the path isn't an array in the document\n    if (!!doc && init) {\n      doc.markModified(this.path);\n    }\n    return this.cast([value], doc, init, prev, options);\n  }\n\n  if (!(value && value.isMongooseDocumentArray) &&\n      !options.skipDocumentArrayCast) {\n    value = new MongooseDocumentArray(value, this.path, doc);\n  } else if (value && value.isMongooseDocumentArray) {\n    // We need to create a new array, otherwise change tracking will\n    // update the old doc (gh-4449)\n    value = new MongooseDocumentArray(value, this.path, doc);\n  }\n\n  if (prev != null) {\n    value[arrayAtomicsSymbol] = prev[arrayAtomicsSymbol] || {};\n  }\n\n  if (options.arrayPathIndex != null) {\n    value[arrayPathSymbol] = this.path + '.' + options.arrayPathIndex;\n  }\n\n  const len = value.length;\n  const initDocumentOptions = { skipId: true, willInit: true };\n\n  for (let i = 0; i < len; ++i) {\n    if (!value[i]) {\n      continue;\n    }\n\n    const Constructor = getConstructor(this.casterConstructor, value[i]);\n\n    // Check if the document has a different schema (re gh-3701)\n    if ((value[i].$__) &&\n        (!(value[i] instanceof Constructor) || value[i][documentArrayParent] !== doc)) {\n      value[i] = value[i].toObject({\n        transform: false,\n        // Special case: if different model, but same schema, apply virtuals\n        // re: gh-7898\n        virtuals: value[i].schema === Constructor.schema\n      });\n    }\n\n    if (value[i] instanceof Subdocument) {\n      // Might not have the correct index yet, so ensure it does.\n      if (value[i].__index == null) {\n        value[i].$setIndex(i);\n      }\n    } else if (value[i] != null) {\n      if (init) {\n        if (doc) {\n          selected || (selected = scopePaths(this, doc.$__.selected, init));\n        } else {\n          selected = true;\n        }\n\n        subdoc = new Constructor(null, value, initDocumentOptions, selected, i);\n        value[i] = subdoc.init(value[i]);\n      } else {\n        if (prev && typeof prev.id === 'function') {\n          subdoc = prev.id(value[i]._id);\n        }\n\n        if (prev && subdoc && utils.deepEqual(subdoc.toObject(_opts), value[i])) {\n          // handle resetting doc with existing id and same data\n          subdoc.set(value[i]);\n          // if set() is hooked it will have no return value\n          // see gh-746\n          value[i] = subdoc;\n        } else {\n          try {\n            subdoc = new Constructor(value[i], value, undefined,\n              undefined, i);\n            // if set() is hooked it will have no return value\n            // see gh-746\n            value[i] = subdoc;\n          } catch (error) {\n            const valueInErrorMessage = util.inspect(value[i]);\n            throw new CastError('embedded', valueInErrorMessage,\n              value[arrayPathSymbol], error, this);\n          }\n        }\n      }\n    }\n  }\n\n  return value;\n};\n\n/*!\n * ignore\n */\n\nDocumentArrayPath.prototype.clone = function() {\n  const options = Object.assign({}, this.options);\n  const schematype = new this.constructor(this.path, this.schema, options, this.schemaOptions);\n  schematype.validators = this.validators.slice();\n  if (this.requiredValidator !== undefined) {\n    schematype.requiredValidator = this.requiredValidator;\n  }\n  schematype.Constructor.discriminators = Object.assign({},\n    this.Constructor.discriminators);\n  return schematype;\n};\n\n/*!\n * ignore\n */\n\nDocumentArrayPath.prototype.applyGetters = function(value, scope) {\n  return SchemaType.prototype.applyGetters.call(this, value, scope);\n};\n\n/*!\n * Scopes paths selected in a query to this array.\n * Necessary for proper default application of subdocument values.\n *\n * @param {DocumentArrayPath} array - the array to scope `fields` paths\n * @param {Object|undefined} fields - the root fields selected in the query\n * @param {Boolean|undefined} init - if we are being created part of a query result\n */\n\nfunction scopePaths(array, fields, init) {\n  if (!(init && fields)) {\n    return undefined;\n  }\n\n  const path = array.path + '.';\n  const keys = Object.keys(fields);\n  let i = keys.length;\n  const selected = {};\n  let hasKeys;\n  let key;\n  let sub;\n\n  while (i--) {\n    key = keys[i];\n    if (key.startsWith(path)) {\n      sub = key.substring(path.length);\n      if (sub === '$') {\n        continue;\n      }\n      if (sub.startsWith('$.')) {\n        sub = sub.substr(2);\n      }\n      hasKeys || (hasKeys = true);\n      selected[sub] = fields[key];\n    }\n  }\n\n  return hasKeys && selected || undefined;\n}\n\n/**\n * Sets a default option for all DocumentArray instances.\n *\n * ####Example:\n *\n *     // Make all numbers have option `min` equal to 0.\n *     mongoose.Schema.DocumentArray.set('_id', false);\n *\n * @param {String} option - The option you'd like to set the value for\n * @param {*} value - value for option\n * @return {undefined}\n * @function set\n * @static\n * @api public\n */\n\nDocumentArrayPath.defaultOptions = {};\n\nDocumentArrayPath.set = SchemaType.set;\n\n/*!\n * Module exports.\n */\n\nmodule.exports = DocumentArrayPath;\n"],"names":["require$$1","ArrayType","SchemaType","SchemaDocumentArrayOptions","require$$2","require$$3","ValidationError","CastError"],"mappings":"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"}