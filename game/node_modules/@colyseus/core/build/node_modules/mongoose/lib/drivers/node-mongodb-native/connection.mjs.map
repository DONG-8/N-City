{"version":3,"file":"connection.mjs","sources":["../../../../../../../../node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js"],"sourcesContent":["/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseConnection = require('../../connection');\nconst STATES = require('../../connectionstate');\nconst immediate = require('../../helpers/immediate');\nconst setTimeout = require('../../helpers/timers').setTimeout;\n\n/**\n * A [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) connection implementation.\n *\n * @inherits Connection\n * @api private\n */\n\nfunction NativeConnection() {\n  MongooseConnection.apply(this, arguments);\n  this._listening = false;\n}\n\n/**\n * Expose the possible connection states.\n * @api public\n */\n\nNativeConnection.STATES = STATES;\n\n/*!\n * Inherits from Connection.\n */\n\nNativeConnection.prototype.__proto__ = MongooseConnection.prototype;\n\n/**\n * Switches to a different database using the same connection pool.\n *\n * Returns a new connection object, with the new db. If you set the `useCache`\n * option, `useDb()` will cache connections by `name`.\n *\n * **Note:** Calling `close()` on a `useDb()` connection will close the base connection as well.\n *\n * @param {String} name The database name\n * @param {Object} [options]\n * @param {Boolean} [options.useCache=false] If true, cache results so calling `useDb()` multiple times with the same name only creates 1 connection object.\n * @param {Boolean} [options.noListener=false] If true, the new connection object won't listen to any events on the base connection. This is better for memory usage in cases where you're calling `useDb()` for every request.\n * @return {Connection} New Connection Object\n * @api public\n */\n\nNativeConnection.prototype.useDb = function(name, options) {\n  // Return immediately if cached\n  options = options || {};\n  if (options.useCache && this.relatedDbs[name]) {\n    return this.relatedDbs[name];\n  }\n\n  // we have to manually copy all of the attributes...\n  const newConn = new this.constructor();\n  newConn.name = name;\n  newConn.base = this.base;\n  newConn.collections = {};\n  newConn.models = {};\n  newConn.replica = this.replica;\n  newConn.config = Object.assign({}, this.config, newConn.config);\n  newConn.name = this.name;\n  newConn.options = this.options;\n  newConn._readyState = this._readyState;\n  newConn._closeCalled = this._closeCalled;\n  newConn._hasOpened = this._hasOpened;\n  newConn._listening = false;\n\n  newConn.host = this.host;\n  newConn.port = this.port;\n  newConn.user = this.user;\n  newConn.pass = this.pass;\n\n  // First, when we create another db object, we are not guaranteed to have a\n  // db object to work with. So, in the case where we have a db object and it\n  // is connected, we can just proceed with setting everything up. However, if\n  // we do not have a db or the state is not connected, then we need to wait on\n  // the 'open' event of the connection before doing the rest of the setup\n  // the 'connected' event is the first time we'll have access to the db object\n\n  const _this = this;\n\n  newConn.client = _this.client;\n\n  if (this.db && this._readyState === STATES.connected) {\n    wireup();\n  } else {\n    this.once('connected', wireup);\n  }\n\n  function wireup() {\n    newConn.client = _this.client;\n    const _opts = {};\n    if (options.hasOwnProperty('noListener')) {\n      _opts.noListener = options.noListener;\n    }\n    newConn.db = _this.client.db(name, _opts);\n    newConn.onOpen();\n    // setup the events appropriately\n    if (options.noListener !== true) {\n      listen(newConn);\n    }\n  }\n\n  newConn.name = name;\n\n  // push onto the otherDbs stack, this is used when state changes\n  if (options.noListener !== true) {\n    this.otherDbs.push(newConn);\n  }\n  newConn.otherDbs.push(this);\n\n  // push onto the relatedDbs cache, this is used when state changes\n  if (options && options.useCache) {\n    this.relatedDbs[newConn.name] = newConn;\n    newConn.relatedDbs = this.relatedDbs;\n  }\n\n  return newConn;\n};\n\n/*!\n * Register listeners for important events and bubble appropriately.\n */\n\nfunction listen(conn) {\n  if (conn._listening) {\n    return;\n  }\n  conn._listening = true;\n\n  conn.client.on('close', function(force) {\n    if (conn._closeCalled) {\n      return;\n    }\n    conn._closeCalled = conn.client._closeCalled;\n\n    // the driver never emits an `open` event. auto_reconnect still\n    // emits a `close` event but since we never get another\n    // `open` we can't emit close\n    if (conn.db.serverConfig.autoReconnect) {\n      conn.readyState = STATES.disconnected;\n      conn.emit('close');\n      return;\n    }\n    conn.onClose(force);\n  });\n  conn.client.on('error', function(err) {\n    conn.emit('error', err);\n  });\n\n  if (!conn.client.s.options.useUnifiedTopology) {\n    conn.db.on('reconnect', function() {\n      conn.readyState = STATES.connected;\n      conn.emit('reconnect');\n      conn.emit('reconnected');\n      conn.onOpen();\n    });\n    conn.db.on('open', function(err, db) {\n      if (STATES.disconnected === conn.readyState && db && db.databaseName) {\n        conn.readyState = STATES.connected;\n        conn.emit('reconnect');\n        conn.emit('reconnected');\n      }\n    });\n  }\n\n  conn.client.on('timeout', function(err) {\n    conn.emit('timeout', err);\n  });\n  conn.client.on('parseError', function(err) {\n    conn.emit('parseError', err);\n  });\n}\n\n/**\n * Closes the connection\n *\n * @param {Boolean} [force]\n * @param {Function} [fn]\n * @return {Connection} this\n * @api private\n */\n\nNativeConnection.prototype.doClose = function(force, fn) {\n  if (this.client == null) {\n    immediate(() => fn());\n    return this;\n  }\n\n  this.client.close(force, (err, res) => {\n    // Defer because the driver will wait at least 1ms before finishing closing\n    // the pool, see https://github.com/mongodb-js/mongodb-core/blob/a8f8e4ce41936babc3b9112bf42d609779f03b39/lib/connection/pool.js#L1026-L1030.\n    // If there's queued operations, you may still get some background work\n    // after the callback is called.\n    setTimeout(() => fn(err, res), 1);\n  });\n  return this;\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = NativeConnection;\n"],"names":["require$$0","MongooseConnection","STATES"],"mappings":"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"}