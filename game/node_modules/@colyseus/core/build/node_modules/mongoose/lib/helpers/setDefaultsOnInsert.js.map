{"version":3,"file":"setDefaultsOnInsert.js","sources":["../../../../../../../node_modules/mongoose/lib/helpers/setDefaultsOnInsert.js"],"sourcesContent":["'use strict';\nconst modifiedPaths = require('./common').modifiedPaths;\nconst get = require('./get');\n\n/**\n * Applies defaults to update and findOneAndUpdate operations.\n *\n * @param {Object} filter\n * @param {Schema} schema\n * @param {Object} castedDoc\n * @param {Object} options\n * @method setDefaultsOnInsert\n * @api private\n */\n\nmodule.exports = function(filter, schema, castedDoc, options) {\n  options = options || {};\n\n  const shouldSetDefaultsOnInsert =\n    options.setDefaultsOnInsert != null ?\n      options.setDefaultsOnInsert :\n      schema.base.options.setDefaultsOnInsert;\n\n  if (!options.upsert || !shouldSetDefaultsOnInsert) {\n    return castedDoc;\n  }\n\n  const keys = Object.keys(castedDoc || {});\n  const updatedKeys = {};\n  const updatedValues = {};\n  const numKeys = keys.length;\n  const modified = {};\n\n  let hasDollarUpdate = false;\n\n  for (let i = 0; i < numKeys; ++i) {\n    if (keys[i].startsWith('$')) {\n      modifiedPaths(castedDoc[keys[i]], '', modified);\n      hasDollarUpdate = true;\n    }\n  }\n\n  if (!hasDollarUpdate) {\n    modifiedPaths(castedDoc, '', modified);\n  }\n\n  const paths = Object.keys(filter);\n  const numPaths = paths.length;\n  for (let i = 0; i < numPaths; ++i) {\n    const path = paths[i];\n    const condition = filter[path];\n    if (condition && typeof condition === 'object') {\n      const conditionKeys = Object.keys(condition);\n      const numConditionKeys = conditionKeys.length;\n      let hasDollarKey = false;\n      for (let j = 0; j < numConditionKeys; ++j) {\n        if (conditionKeys[j].startsWith('$')) {\n          hasDollarKey = true;\n          break;\n        }\n      }\n      if (hasDollarKey) {\n        continue;\n      }\n    }\n    updatedKeys[path] = true;\n    modified[path] = true;\n  }\n\n  if (options && options.overwrite && !hasDollarUpdate) {\n    // Defaults will be set later, since we're overwriting we'll cast\n    // the whole update to a document\n    return castedDoc;\n  }\n\n  schema.eachPath(function(path, schemaType) {\n    // Skip single nested paths if underneath a map\n    const isUnderneathMap = schemaType.path.endsWith('.$*') ||\n      schemaType.path.indexOf('.$*.') !== -1;\n    if (schemaType.$isSingleNested && !isUnderneathMap) {\n      // Only handle nested schemas 1-level deep to avoid infinite\n      // recursion re: https://github.com/mongodb-js/mongoose-autopopulate/issues/11\n      schemaType.schema.eachPath(function(_path, _schemaType) {\n        if (_path === '_id' && _schemaType.auto) {\n          // Ignore _id if auto id so we don't create subdocs\n          return;\n        }\n\n        const def = _schemaType.getDefault(null, true);\n        if (!isModified(modified, path + '.' + _path) &&\n            typeof def !== 'undefined') {\n          castedDoc = castedDoc || {};\n          castedDoc.$setOnInsert = castedDoc.$setOnInsert || {};\n          castedDoc.$setOnInsert[path + '.' + _path] = def;\n          updatedValues[path + '.' + _path] = def;\n        }\n      });\n    } else {\n      const def = schemaType.getDefault(null, true);\n      if (!isModified(modified, path) && typeof def !== 'undefined') {\n        castedDoc = castedDoc || {};\n        castedDoc.$setOnInsert = castedDoc.$setOnInsert || {};\n        if (get(castedDoc, path) == null) {\n          castedDoc.$setOnInsert[path] = def;\n        }\n        updatedValues[path] = def;\n      }\n    }\n  });\n\n  return castedDoc;\n};\n\nfunction isModified(modified, path) {\n  if (modified[path]) {\n    return true;\n  }\n  const sp = path.split('.');\n  let cur = sp[0];\n  for (let i = 1; i < sp.length; ++i) {\n    if (modified[cur]) {\n      return true;\n    }\n    cur += '.' + sp[i];\n  }\n  return false;\n}\n"],"names":["require$$0"],"mappings":"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"}