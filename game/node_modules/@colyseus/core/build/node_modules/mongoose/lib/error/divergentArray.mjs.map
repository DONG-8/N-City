{"version":3,"file":"divergentArray.mjs","sources":["../../../../../../../node_modules/mongoose/lib/error/divergentArray.js"],"sourcesContent":["\n/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseError = require('./');\n\nclass DivergentArrayError extends MongooseError {\n  /*!\n   * DivergentArrayError constructor.\n   * @param {Array<String>} paths\n   */\n  constructor(paths) {\n    const msg = 'For your own good, using `document.save()` to update an array '\n            + 'which was selected using an $elemMatch projection OR '\n            + 'populated using skip, limit, query conditions, or exclusion of '\n            + 'the _id field when the operation results in a $pop or $set of '\n            + 'the entire array is not supported. The following '\n            + 'path(s) would have been modified unsafely:\\n'\n            + '  ' + paths.join('\\n  ') + '\\n'\n            + 'Use Model.update() to update these arrays instead.';\n    // TODO write up a docs page (FAQ) and link to it\n    super(msg);\n  }\n}\n\nObject.defineProperty(DivergentArrayError.prototype, 'name', {\n  value: 'DivergentArrayError'\n});\n\n/*!\n * exports\n */\n\nmodule.exports = DivergentArrayError;\n"],"names":["MongooseError"],"mappings":";;AASA,MAAM,mBAAmB,SAASA,KAAa,CAAC;AAChD;AACA;AACA;AACA;AACA,EAAE,WAAW,CAAC,KAAK,EAAE;AACrB,IAAI,MAAM,GAAG,GAAG,gEAAgE;AAChF,cAAc,uDAAuD;AACrE,cAAc,iEAAiE;AAC/E,cAAc,gEAAgE;AAC9E,cAAc,mDAAmD;AACjE,cAAc,8CAA8C;AAC5D,cAAc,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI;AAC9C,cAAc,oDAAoD,CAAC;AACnE;AACA,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;AACf,GAAG;AACH,CAAC;AACD;AACA,MAAM,CAAC,cAAc,CAAC,mBAAmB,CAAC,SAAS,EAAE,MAAM,EAAE;AAC7D,EAAE,KAAK,EAAE,qBAAqB;AAC9B,CAAC,CAAC,CAAC;AACH;AACA;AACA;AACA;AACA;kBACc,GAAG;;;;"}