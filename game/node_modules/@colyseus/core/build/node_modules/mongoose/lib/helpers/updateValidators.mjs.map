{"version":3,"file":"updateValidators.mjs","sources":["../../../../../../../node_modules/mongoose/lib/helpers/updateValidators.js"],"sourcesContent":["'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst ValidationError = require('../error/validation');\nconst cleanPositionalOperators = require('./schema/cleanPositionalOperators');\nconst flatten = require('./common').flatten;\nconst modifiedPaths = require('./common').modifiedPaths;\n\n/**\n * Applies validators and defaults to update and findOneAndUpdate operations,\n * specifically passing a null doc as `this` to validators and defaults\n *\n * @param {Query} query\n * @param {Schema} schema\n * @param {Object} castedDoc\n * @param {Object} options\n * @method runValidatorsOnUpdate\n * @api private\n */\n\nmodule.exports = function(query, schema, castedDoc, options, callback) {\n  let _keys;\n  const keys = Object.keys(castedDoc || {});\n  let updatedKeys = {};\n  let updatedValues = {};\n  const isPull = {};\n  const arrayAtomicUpdates = {};\n  const numKeys = keys.length;\n  let hasDollarUpdate = false;\n  const modified = {};\n  let currentUpdate;\n  let key;\n  let i;\n\n  for (i = 0; i < numKeys; ++i) {\n    if (keys[i].startsWith('$')) {\n      hasDollarUpdate = true;\n      if (keys[i] === '$push' || keys[i] === '$addToSet') {\n        _keys = Object.keys(castedDoc[keys[i]]);\n        for (let ii = 0; ii < _keys.length; ++ii) {\n          currentUpdate = castedDoc[keys[i]][_keys[ii]];\n          if (currentUpdate && currentUpdate.$each) {\n            arrayAtomicUpdates[_keys[ii]] = (arrayAtomicUpdates[_keys[ii]] || []).\n              concat(currentUpdate.$each);\n          } else {\n            arrayAtomicUpdates[_keys[ii]] = (arrayAtomicUpdates[_keys[ii]] || []).\n              concat([currentUpdate]);\n          }\n        }\n        continue;\n      }\n      modifiedPaths(castedDoc[keys[i]], '', modified);\n      const flat = flatten(castedDoc[keys[i]], null, null, schema);\n      const paths = Object.keys(flat);\n      const numPaths = paths.length;\n      for (let j = 0; j < numPaths; ++j) {\n        const updatedPath = cleanPositionalOperators(paths[j]);\n        key = keys[i];\n        // With `$pull` we might flatten `$in`. Skip stuff nested under `$in`\n        // for the rest of the logic, it will get handled later.\n        if (updatedPath.includes('$')) {\n          continue;\n        }\n        if (key === '$set' || key === '$setOnInsert' ||\n            key === '$pull' || key === '$pullAll') {\n          updatedValues[updatedPath] = flat[paths[j]];\n          isPull[updatedPath] = key === '$pull' || key === '$pullAll';\n        } else if (key === '$unset') {\n          updatedValues[updatedPath] = undefined;\n        }\n        updatedKeys[updatedPath] = true;\n      }\n    }\n  }\n\n  if (!hasDollarUpdate) {\n    modifiedPaths(castedDoc, '', modified);\n    updatedValues = flatten(castedDoc, null, null, schema);\n    updatedKeys = Object.keys(updatedValues);\n  }\n\n  const updates = Object.keys(updatedValues);\n  const numUpdates = updates.length;\n  const validatorsToExecute = [];\n  const validationErrors = [];\n\n  const alreadyValidated = [];\n\n  const context = options && options.context === 'query' ? query : null;\n  function iter(i, v) {\n    const schemaPath = schema._getSchema(updates[i]);\n    if (schemaPath == null) {\n      return;\n    }\n    if (schemaPath.instance === 'Mixed' && schemaPath.path !== updates[i]) {\n      return;\n    }\n\n    if (v && Array.isArray(v.$in)) {\n      v.$in.forEach((v, i) => {\n        validatorsToExecute.push(function(callback) {\n          schemaPath.doValidate(\n            v,\n            function(err) {\n              if (err) {\n                err.path = updates[i] + '.$in.' + i;\n                validationErrors.push(err);\n              }\n              callback(null);\n            },\n            context,\n            { updateValidator: true });\n        });\n      });\n    } else {\n      if (isPull[updates[i]] &&\n          schemaPath.$isMongooseArray) {\n        return;\n      }\n\n      if (schemaPath.$isMongooseDocumentArrayElement && v != null && v.$__ != null) {\n        alreadyValidated.push(updates[i]);\n        validatorsToExecute.push(function(callback) {\n          schemaPath.doValidate(v, function(err) {\n            if (err) {\n              err.path = updates[i];\n              validationErrors.push(err);\n              return callback(null);\n            }\n\n            v.validate(function(err) {\n              if (err) {\n                if (err.errors) {\n                  for (const key of Object.keys(err.errors)) {\n                    const _err = err.errors[key];\n                    _err.path = updates[i] + '.' + key;\n                    validationErrors.push(_err);\n                  }\n                } else {\n                  err.path = updates[i];\n                  validationErrors.push(err);\n                }\n              }\n              callback(null);\n            });\n          }, context, { updateValidator: true });\n        });\n      } else {\n        validatorsToExecute.push(function(callback) {\n          for (const path of alreadyValidated) {\n            if (updates[i].startsWith(path + '.')) {\n              return callback(null);\n            }\n          }\n\n          schemaPath.doValidate(v, function(err) {\n            if (schemaPath.schema != null &&\n                schemaPath.schema.options.storeSubdocValidationError === false &&\n                err instanceof ValidationError) {\n              return callback(null);\n            }\n\n            if (err) {\n              err.path = updates[i];\n              validationErrors.push(err);\n            }\n            callback(null);\n          }, context, { updateValidator: true });\n        });\n      }\n    }\n  }\n  for (i = 0; i < numUpdates; ++i) {\n    iter(i, updatedValues[updates[i]]);\n  }\n\n  const arrayUpdates = Object.keys(arrayAtomicUpdates);\n  for (const arrayUpdate of arrayUpdates) {\n    let schemaPath = schema._getSchema(arrayUpdate);\n    if (schemaPath && schemaPath.$isMongooseDocumentArray) {\n      validatorsToExecute.push(function(callback) {\n        schemaPath.doValidate(\n          arrayAtomicUpdates[arrayUpdate],\n          getValidationCallback(arrayUpdate, validationErrors, callback),\n          options && options.context === 'query' ? query : null);\n      });\n    } else {\n      schemaPath = schema._getSchema(arrayUpdate + '.0');\n      for (const atomicUpdate of arrayAtomicUpdates[arrayUpdate]) {\n        validatorsToExecute.push(function(callback) {\n          schemaPath.doValidate(\n            atomicUpdate,\n            getValidationCallback(arrayUpdate, validationErrors, callback),\n            options && options.context === 'query' ? query : null,\n            { updateValidator: true });\n        });\n      }\n    }\n  }\n\n  if (callback != null) {\n    let numValidators = validatorsToExecute.length;\n    if (numValidators === 0) {\n      return _done(callback);\n    }\n    for (const validator of validatorsToExecute) {\n      validator(function() {\n        if (--numValidators <= 0) {\n          _done(callback);\n        }\n      });\n    }\n\n    return;\n  }\n\n  return function(callback) {\n    let numValidators = validatorsToExecute.length;\n    if (numValidators === 0) {\n      return _done(callback);\n    }\n    for (const validator of validatorsToExecute) {\n      validator(function() {\n        if (--numValidators <= 0) {\n          _done(callback);\n        }\n      });\n    }\n  };\n\n  function _done(callback) {\n    if (validationErrors.length) {\n      const err = new ValidationError(null);\n\n      for (const validationError of validationErrors) {\n        err.addError(validationError.path, validationError);\n      }\n\n      return callback(err);\n    }\n    callback(null);\n  }\n\n  function getValidationCallback(arrayUpdate, validationErrors, callback) {\n    return function(err) {\n      if (err) {\n        err.path = arrayUpdate;\n        validationErrors.push(err);\n      }\n      callback(null);\n    };\n  }\n};\n\n"],"names":["require$$0","ValidationError"],"mappings":"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"}