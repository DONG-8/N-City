{"version":3,"file":"modifiedPaths.mjs","sources":["../../../../../../../../node_modules/mongoose/lib/helpers/update/modifiedPaths.js"],"sourcesContent":["'use strict';\n\nconst _modifiedPaths = require('../common').modifiedPaths;\n\n/**\n * Given an update document with potential update operators (`$set`, etc.)\n * returns an object whose keys are the directly modified paths.\n *\n * If there are any top-level keys that don't start with `$`, we assume those\n * will get wrapped in a `$set`. The Mongoose Query is responsible for wrapping\n * top-level keys in `$set`.\n *\n * @param {Object} update\n * @return {Object} modified\n */\n\nmodule.exports = function modifiedPaths(update) {\n  const keys = Object.keys(update);\n  const res = {};\n\n  const withoutDollarKeys = {};\n  for (const key of keys) {\n    if (key.startsWith('$')) {\n      _modifiedPaths(update[key], '', res);\n      continue;\n    }\n    withoutDollarKeys[key] = update[key];\n  }\n\n  _modifiedPaths(withoutDollarKeys, '', res);\n\n  return res;\n};\n"],"names":["require$$0"],"mappings":";;AAEA,MAAM,cAAc,GAAGA,MAAoB,CAAC,aAAa,CAAC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;iBACc,GAAG,SAAS,aAAa,CAAC,MAAM,EAAE;AAChD,EAAE,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACnC,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC;AACjB;AACA,EAAE,MAAM,iBAAiB,GAAG,EAAE,CAAC;AAC/B,EAAE,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;AAC1B,IAAI,IAAI,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AAC7B,MAAM,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;AAC3C,MAAM,SAAS;AACf,KAAK;AACL,IAAI,iBAAiB,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AACzC,GAAG;AACH;AACA,EAAE,cAAc,CAAC,iBAAiB,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;AAC7C;AACA,EAAE,OAAO,GAAG,CAAC;AACb;;;;"}