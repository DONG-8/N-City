{"version":3,"file":"array.mjs","sources":["../../../../../../../node_modules/mongoose/lib/schema/array.js"],"sourcesContent":["'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst $exists = require('./operators/exists');\nconst $type = require('./operators/type');\nconst MongooseError = require('../error/mongooseError');\nconst SchemaArrayOptions = require('../options/SchemaArrayOptions');\nconst SchemaType = require('../schematype');\nconst CastError = SchemaType.CastError;\nconst Mixed = require('./mixed');\nconst arrayDepth = require('../helpers/arrayDepth');\nconst cast = require('../cast');\nconst get = require('../helpers/get');\nconst isOperator = require('../helpers/query/isOperator');\nconst util = require('util');\nconst utils = require('../utils');\nconst castToNumber = require('./operators/helpers').castToNumber;\nconst geospatial = require('./operators/geospatial');\nconst getDiscriminatorByValue = require('../helpers/discriminator/getDiscriminatorByValue');\n\nlet MongooseArray;\nlet EmbeddedDoc;\n\nconst isNestedArraySymbol = Symbol('mongoose#isNestedArray');\nconst emptyOpts = Object.freeze({});\n\n/**\n * Array SchemaType constructor\n *\n * @param {String} key\n * @param {SchemaType} cast\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction SchemaArray(key, cast, options, schemaOptions) {\n  // lazy load\n  EmbeddedDoc || (EmbeddedDoc = require('../types').Embedded);\n\n  let typeKey = 'type';\n  if (schemaOptions && schemaOptions.typeKey) {\n    typeKey = schemaOptions.typeKey;\n  }\n  this.schemaOptions = schemaOptions;\n\n  if (cast) {\n    let castOptions = {};\n\n    if (utils.isPOJO(cast)) {\n      if (cast[typeKey]) {\n        // support { type: Woot }\n        castOptions = utils.clone(cast); // do not alter user arguments\n        delete castOptions[typeKey];\n        cast = cast[typeKey];\n      } else {\n        cast = Mixed;\n      }\n    }\n\n    if (options != null && options.ref != null && castOptions.ref == null) {\n      castOptions.ref = options.ref;\n    }\n\n    if (cast === Object) {\n      cast = Mixed;\n    }\n\n    // support { type: 'String' }\n    const name = typeof cast === 'string'\n      ? cast\n      : utils.getFunctionName(cast);\n\n    const Types = require('./index.js');\n    const caster = Types.hasOwnProperty(name) ? Types[name] : cast;\n\n    this.casterConstructor = caster;\n\n    if (this.casterConstructor instanceof SchemaArray) {\n      this.casterConstructor[isNestedArraySymbol] = true;\n    }\n\n    if (typeof caster === 'function' &&\n        !caster.$isArraySubdocument &&\n        !caster.$isSchemaMap) {\n      const path = this.caster instanceof EmbeddedDoc ? null : key;\n      this.caster = new caster(path, castOptions);\n    } else {\n      this.caster = caster;\n      if (!(this.caster instanceof EmbeddedDoc)) {\n        this.caster.path = key;\n      }\n    }\n\n    this.$embeddedSchemaType = this.caster;\n  }\n\n  this.$isMongooseArray = true;\n\n  SchemaType.call(this, key, options, 'Array');\n\n  let defaultArr;\n  let fn;\n\n  if (this.defaultValue != null) {\n    defaultArr = this.defaultValue;\n    fn = typeof defaultArr === 'function';\n  }\n\n  if (!('defaultValue' in this) || this.defaultValue !== void 0) {\n    const defaultFn = function() {\n      let arr = [];\n      if (fn) {\n        arr = defaultArr.call(this);\n      } else if (defaultArr != null) {\n        arr = arr.concat(defaultArr);\n      }\n      // Leave it up to `cast()` to convert the array\n      return arr;\n    };\n    defaultFn.$runBeforeSetters = !fn;\n    this.default(defaultFn);\n  }\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nSchemaArray.schemaName = 'Array';\n\n\n/**\n * Options for all arrays.\n *\n * - `castNonArrays`: `true` by default. If `false`, Mongoose will throw a CastError when a value isn't an array. If `true`, Mongoose will wrap the provided value in an array before casting.\n *\n * @static options\n * @api public\n */\n\nSchemaArray.options = { castNonArrays: true };\n\n/*!\n * ignore\n */\n\nSchemaArray.defaultOptions = {};\n\n/**\n * Sets a default option for all Array instances.\n *\n * ####Example:\n *\n *     // Make all Array instances have `required` of true by default.\n *     mongoose.Schema.Array.set('required', true);\n *\n *     const User = mongoose.model('User', new Schema({ test: Array }));\n *     new User({ }).validateSync().errors.test.message; // Path `test` is required.\n *\n * @param {String} option - The option you'd like to set the value for\n * @param {*} value - value for option\n * @return {undefined}\n * @function set\n * @api public\n */\nSchemaArray.set = SchemaType.set;\n\n/*!\n * Inherits from SchemaType.\n */\nSchemaArray.prototype = Object.create(SchemaType.prototype);\nSchemaArray.prototype.constructor = SchemaArray;\nSchemaArray.prototype.OptionsConstructor = SchemaArrayOptions;\n\n/*!\n * ignore\n */\n\nSchemaArray._checkRequired = SchemaType.prototype.checkRequired;\n\n/**\n * Override the function the required validator uses to check whether an array\n * passes the `required` check.\n *\n * ####Example:\n *\n *     // Require non-empty array to pass `required` check\n *     mongoose.Schema.Types.Array.checkRequired(v => Array.isArray(v) && v.length);\n *\n *     const M = mongoose.model({ arr: { type: Array, required: true } });\n *     new M({ arr: [] }).validateSync(); // `null`, validation fails!\n *\n * @param {Function} fn\n * @return {Function}\n * @function checkRequired\n * @api public\n */\n\nSchemaArray.checkRequired = SchemaType.checkRequired;\n\n/**\n * Check if the given value satisfies the `required` validator.\n *\n * @param {Any} value\n * @param {Document} doc\n * @return {Boolean}\n * @api public\n */\n\nSchemaArray.prototype.checkRequired = function checkRequired(value, doc) {\n  if (SchemaType._isRef(this, value, doc, true)) {\n    return !!value;\n  }\n\n  // `require('util').inherits()` does **not** copy static properties, and\n  // plugins like mongoose-float use `inherits()` for pre-ES6.\n  const _checkRequired = typeof this.constructor.checkRequired == 'function' ?\n    this.constructor.checkRequired() :\n    SchemaArray.checkRequired();\n\n  return _checkRequired(value);\n};\n\n/**\n * Adds an enum validator if this is an array of strings or numbers. Equivalent to\n * `SchemaString.prototype.enum()` or `SchemaNumber.prototype.enum()`\n *\n * @param {String|Object} [args...] enumeration values\n * @return {SchemaArray} this\n */\n\nSchemaArray.prototype.enum = function() {\n  let arr = this;\n  while (true) {\n    const instance = get(arr, 'caster.instance');\n    if (instance === 'Array') {\n      arr = arr.caster;\n      continue;\n    }\n    if (instance !== 'String' && instance !== 'Number') {\n      throw new Error('`enum` can only be set on an array of strings or numbers ' +\n        ', not ' + instance);\n    }\n    break;\n  }\n\n  let enumArray = arguments;\n  if (!Array.isArray(arguments) && utils.isObject(arguments)) {\n    enumArray = utils.object.vals(enumArray);\n  }\n\n  arr.caster.enum.apply(arr.caster, enumArray);\n  return this;\n};\n\n/**\n * Overrides the getters application for the population special-case\n *\n * @param {Object} value\n * @param {Object} scope\n * @api private\n */\n\nSchemaArray.prototype.applyGetters = function(value, scope) {\n  if (scope != null && scope.$__ != null && scope.populated(this.path)) {\n    // means the object id was populated\n    return value;\n  }\n\n  const ret = SchemaType.prototype.applyGetters.call(this, value, scope);\n  if (Array.isArray(ret)) {\n    const len = ret.length;\n    for (let i = 0; i < len; ++i) {\n      ret[i] = this.caster.applyGetters(ret[i], scope);\n    }\n  }\n  return ret;\n};\n\nSchemaArray.prototype._applySetters = function(value, scope, init, priorVal) {\n  if (this.casterConstructor.$isMongooseArray &&\n      SchemaArray.options.castNonArrays &&\n      !this[isNestedArraySymbol]) {\n    // Check nesting levels and wrap in array if necessary\n    let depth = 0;\n    let arr = this;\n    while (arr != null &&\n      arr.$isMongooseArray &&\n      !arr.$isMongooseDocumentArray) {\n      ++depth;\n      arr = arr.casterConstructor;\n    }\n\n    // No need to wrap empty arrays\n    if (value != null && value.length > 0) {\n      const valueDepth = arrayDepth(value);\n      if (valueDepth.min === valueDepth.max && valueDepth.max < depth && valueDepth.containsNonArrayItem) {\n        for (let i = valueDepth.max; i < depth; ++i) {\n          value = [value];\n        }\n      }\n    }\n  }\n\n  return SchemaType.prototype._applySetters.call(this, value, scope, init, priorVal);\n};\n\n/**\n * Casts values for set().\n *\n * @param {Object} value\n * @param {Document} doc document that triggers the casting\n * @param {Boolean} init whether this is an initialization cast\n * @api private\n */\n\nSchemaArray.prototype.cast = function(value, doc, init, prev, options) {\n  // lazy load\n  MongooseArray || (MongooseArray = require('../types').Array);\n\n  let i;\n  let l;\n\n  if (Array.isArray(value)) {\n    const len = value.length;\n    if (!len && doc) {\n      const indexes = doc.schema.indexedPaths();\n\n      const arrayPath = this.path;\n      for (i = 0, l = indexes.length; i < l; ++i) {\n        const pathIndex = indexes[i][0][arrayPath];\n        if (pathIndex === '2dsphere' || pathIndex === '2d') {\n          return;\n        }\n      }\n\n      // Special case: if this index is on the parent of what looks like\n      // GeoJSON, skip setting the default to empty array re: #1668, #3233\n      const arrayGeojsonPath = this.path.endsWith('.coordinates') ?\n        this.path.substr(0, this.path.lastIndexOf('.')) : null;\n      if (arrayGeojsonPath != null) {\n        for (i = 0, l = indexes.length; i < l; ++i) {\n          const pathIndex = indexes[i][0][arrayGeojsonPath];\n          if (pathIndex === '2dsphere') {\n            return;\n          }\n        }\n      }\n    }\n\n    options = options || emptyOpts;\n\n    value = MongooseArray(value, options.path || this._arrayPath || this.path, doc, this);\n\n    if (init && doc != null && doc.$__ != null && doc.populated(this.path)) {\n      return value;\n    }\n\n    const caster = this.caster;\n    const isMongooseArray = caster.$isMongooseArray;\n    const isArrayOfNumbers = caster.instance === 'Number';\n    if (caster && this.casterConstructor !== Mixed) {\n      try {\n        for (i = 0; i < len; i++) {\n          // Special case: number arrays disallow undefined.\n          // Re: gh-840\n          // See commit 1298fe92d2c790a90594bd08199e45a4a09162a6\n          if (isArrayOfNumbers && value[i] === void 0) {\n            throw new MongooseError('Mongoose number arrays disallow storing undefined');\n          }\n          const opts = {};\n          // Perf: creating `arrayPath` is expensive for large arrays.\n          // We only need `arrayPath` if this is a nested array, so\n          // skip if possible.\n          if (isMongooseArray) {\n            if (options.arrayPath != null) {\n              opts.arrayPathIndex = i;\n            } else if (caster._arrayParentPath != null) {\n              opts.arrayPathIndex = i;\n            }\n          }\n          value[i] = caster.applySetters(value[i], doc, init, void 0, opts);\n        }\n      } catch (e) {\n        // rethrow\n        throw new CastError('[' + e.kind + ']', util.inspect(value), this.path + '.' + i, e, this);\n      }\n    }\n\n    return value;\n  }\n\n  if (init || SchemaArray.options.castNonArrays) {\n    // gh-2442: if we're loading this from the db and its not an array, mark\n    // the whole array as modified.\n    if (!!doc && !!init) {\n      doc.markModified(this.path);\n    }\n    return this.cast([value], doc, init);\n  }\n\n  throw new CastError('Array', util.inspect(value), this.path, null, this);\n};\n\n/*!\n * ignore\n */\n\nSchemaArray.prototype._castForPopulate = function _castForPopulate(value, doc) {\n  // lazy load\n  MongooseArray || (MongooseArray = require('../types').Array);\n\n  if (Array.isArray(value)) {\n    let i;\n    const len = value.length;\n\n    const caster = this.caster;\n    if (caster && this.casterConstructor !== Mixed) {\n      try {\n        for (i = 0; i < len; i++) {\n          const opts = {};\n          // Perf: creating `arrayPath` is expensive for large arrays.\n          // We only need `arrayPath` if this is a nested array, so\n          // skip if possible.\n          if (caster.$isMongooseArray && caster._arrayParentPath != null) {\n            opts.arrayPathIndex = i;\n          }\n\n          value[i] = caster.cast(value[i], doc, false, void 0, opts);\n        }\n      } catch (e) {\n        // rethrow\n        throw new CastError('[' + e.kind + ']', util.inspect(value), this.path + '.' + i, e, this);\n      }\n    }\n\n    return value;\n  }\n\n  throw new CastError('Array', util.inspect(value), this.path, null, this);\n};\n\n/*!\n * Ignore\n */\n\nSchemaArray.prototype.discriminator = function(name, schema) {\n  let arr = this; // eslint-disable-line consistent-this\n  while (arr.$isMongooseArray && !arr.$isMongooseDocumentArray) {\n    arr = arr.casterConstructor;\n    if (arr == null || typeof arr === 'function') {\n      throw new MongooseError('You can only add an embedded discriminator on ' +\n        'a document array, ' + this.path + ' is a plain array');\n    }\n  }\n  return arr.discriminator(name, schema);\n};\n\n/*!\n * ignore\n */\n\nSchemaArray.prototype.clone = function() {\n  const options = Object.assign({}, this.options);\n  const schematype = new this.constructor(this.path, this.caster, options, this.schemaOptions);\n  schematype.validators = this.validators.slice();\n  if (this.requiredValidator !== undefined) {\n    schematype.requiredValidator = this.requiredValidator;\n  }\n  return schematype;\n};\n\n/**\n * Casts values for queries.\n *\n * @param {String} $conditional\n * @param {any} [value]\n * @api private\n */\n\nSchemaArray.prototype.castForQuery = function($conditional, value) {\n  let handler;\n  let val;\n\n  if (arguments.length === 2) {\n    handler = this.$conditionalHandlers[$conditional];\n\n    if (!handler) {\n      throw new Error('Can\\'t use ' + $conditional + ' with Array.');\n    }\n\n    val = handler.call(this, value);\n  } else {\n    val = $conditional;\n    let Constructor = this.casterConstructor;\n\n    if (val &&\n        Constructor.discriminators &&\n        Constructor.schema &&\n        Constructor.schema.options &&\n        Constructor.schema.options.discriminatorKey) {\n      if (typeof val[Constructor.schema.options.discriminatorKey] === 'string' &&\n          Constructor.discriminators[val[Constructor.schema.options.discriminatorKey]]) {\n        Constructor = Constructor.discriminators[val[Constructor.schema.options.discriminatorKey]];\n      } else {\n        const constructorByValue = getDiscriminatorByValue(Constructor.discriminators, val[Constructor.schema.options.discriminatorKey]);\n        if (constructorByValue) {\n          Constructor = constructorByValue;\n        }\n      }\n    }\n\n    const proto = this.casterConstructor.prototype;\n    let method = proto && (proto.castForQuery || proto.cast);\n    if (!method && Constructor.castForQuery) {\n      method = Constructor.castForQuery;\n    }\n    const caster = this.caster;\n\n    if (Array.isArray(val)) {\n      this.setters.reverse().forEach(setter => {\n        val = setter.call(this, val, this);\n      });\n      val = val.map(function(v) {\n        if (utils.isObject(v) && v.$elemMatch) {\n          return v;\n        }\n        if (method) {\n          v = method.call(caster, v);\n          return v;\n        }\n        if (v != null) {\n          v = new Constructor(v);\n          return v;\n        }\n        return v;\n      });\n    } else if (method) {\n      val = method.call(caster, val);\n    } else if (val != null) {\n      val = new Constructor(val);\n    }\n  }\n\n  return val;\n};\n\nfunction cast$all(val) {\n  if (!Array.isArray(val)) {\n    val = [val];\n  }\n\n  val = val.map(function(v) {\n    if (utils.isObject(v)) {\n      const o = {};\n      o[this.path] = v;\n      return cast(this.casterConstructor.schema, o)[this.path];\n    }\n    return v;\n  }, this);\n\n  return this.castForQuery(val);\n}\n\nfunction cast$elemMatch(val) {\n  const keys = Object.keys(val);\n  const numKeys = keys.length;\n  for (let i = 0; i < numKeys; ++i) {\n    const key = keys[i];\n    const value = val[key];\n    if (isOperator(key) && value != null) {\n      val[key] = this.castForQuery(key, value);\n    }\n  }\n\n  // Is this an embedded discriminator and is the discriminator key set?\n  // If so, use the discriminator schema. See gh-7449\n  const discriminatorKey = get(this,\n    'casterConstructor.schema.options.discriminatorKey');\n  const discriminators = get(this, 'casterConstructor.schema.discriminators', {});\n  if (discriminatorKey != null &&\n      val[discriminatorKey] != null &&\n      discriminators[val[discriminatorKey]] != null) {\n    return cast(discriminators[val[discriminatorKey]], val);\n  }\n\n  return cast(this.casterConstructor.schema, val);\n}\n\nconst handle = SchemaArray.prototype.$conditionalHandlers = {};\n\nhandle.$all = cast$all;\nhandle.$options = String;\nhandle.$elemMatch = cast$elemMatch;\nhandle.$geoIntersects = geospatial.cast$geoIntersects;\nhandle.$or = createLogicalQueryOperatorHandler('$or');\nhandle.$and = createLogicalQueryOperatorHandler('$and');\nhandle.$nor = createLogicalQueryOperatorHandler('$nor');\n\nfunction createLogicalQueryOperatorHandler(op) {\n  return function logicalQueryOperatorHandler(val) {\n    if (!Array.isArray(val)) {\n      throw new TypeError('conditional ' + op + ' requires an array');\n    }\n\n    const ret = [];\n    for (const obj of val) {\n      ret.push(cast(this.casterConstructor.schema, obj));\n    }\n\n    return ret;\n  };\n}\n\nhandle.$near =\nhandle.$nearSphere = geospatial.cast$near;\n\nhandle.$within =\nhandle.$geoWithin = geospatial.cast$within;\n\nhandle.$size =\nhandle.$minDistance =\nhandle.$maxDistance = castToNumber;\n\nhandle.$exists = $exists;\nhandle.$type = $type;\n\nhandle.$eq =\nhandle.$gt =\nhandle.$gte =\nhandle.$lt =\nhandle.$lte =\nhandle.$ne =\nhandle.$regex = SchemaArray.prototype.castForQuery;\n\n// `$in` is special because you can also include an empty array in the query\n// like `$in: [1, []]`, see gh-5913\nhandle.$nin = SchemaType.prototype.$conditionalHandlers.$nin;\nhandle.$in = SchemaType.prototype.$conditionalHandlers.$in;\n\n/*!\n * Module exports.\n */\n\nmodule.exports = SchemaArray;\n"],"names":["SchemaType","require$$0","require$$1","require$$2","Mixed","require$$3","SchemaArrayOptions","arrayDepth","MongooseError","$exists","$type"],"mappings":"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"}