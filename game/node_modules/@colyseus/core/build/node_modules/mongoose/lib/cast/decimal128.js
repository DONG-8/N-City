'use strict';

var decimal128$1 = require('../types/decimal128.js');
var assert = require('assert');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var assert__default = /*#__PURE__*/_interopDefaultLegacy(assert);

var decimal128 = function castDecimal128(value) {
  if (value == null) {
    return value;
  }

  if (typeof value === 'object' && typeof value.$numberDecimal === 'string') {
    return decimal128$1.fromString(value.$numberDecimal);
  }

  if (value instanceof decimal128$1) {
    return value;
  }

  if (typeof value === 'string') {
    return decimal128$1.fromString(value);
  }

  if (Buffer.isBuffer(value)) {
    return new decimal128$1(value);
  }

  if (typeof value === 'number') {
    return decimal128$1.fromString(String(value));
  }

  if (typeof value.valueOf === 'function' && typeof value.valueOf() === 'string') {
    return decimal128$1.fromString(value.valueOf());
  }

  assert__default['default'].ok(false);
};

module.exports = decimal128;
//# sourceMappingURL=decimal128.js.map
