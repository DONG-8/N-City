{"version":3,"file":"queryhelpers.js","sources":["../../../../../../node_modules/mongoose/lib/queryhelpers.js"],"sourcesContent":["'use strict';\n\n/*!\n * Module dependencies\n */\n\nconst checkEmbeddedDiscriminatorKeyProjection =\n  require('./helpers/discriminator/checkEmbeddedDiscriminatorKeyProjection');\nconst get = require('./helpers/get');\nconst getDiscriminatorByValue =\n  require('./helpers/discriminator/getDiscriminatorByValue');\nconst isDefiningProjection = require('./helpers/projection/isDefiningProjection');\nconst clone = require('./helpers/clone');\n\n/*!\n * Prepare a set of path options for query population.\n *\n * @param {Query} query\n * @param {Object} options\n * @return {Array}\n */\n\nexports.preparePopulationOptions = function preparePopulationOptions(query, options) {\n  const _populate = query.options.populate;\n  const pop = Object.keys(_populate).reduce((vals, key) => vals.concat([_populate[key]]), []);\n\n  // lean options should trickle through all queries\n  if (options.lean != null) {\n    pop.\n      filter(p => get(p, 'options.lean') == null).\n      forEach(makeLean(options.lean));\n  }\n\n  pop.forEach(opts => {\n    opts._localModel = query.model;\n  });\n\n  return pop;\n};\n\n/*!\n * Prepare a set of path options for query population. This is the MongooseQuery\n * version\n *\n * @param {Query} query\n * @param {Object} options\n * @return {Array}\n */\n\nexports.preparePopulationOptionsMQ = function preparePopulationOptionsMQ(query, options) {\n  const _populate = query._mongooseOptions.populate;\n  const pop = Object.keys(_populate).reduce((vals, key) => vals.concat([_populate[key]]), []);\n\n  // lean options should trickle through all queries\n  if (options.lean != null) {\n    pop.\n      filter(p => get(p, 'options.lean') == null).\n      forEach(makeLean(options.lean));\n  }\n\n  const session = get(query, 'options.session', null);\n  if (session != null) {\n    pop.forEach(path => {\n      if (path.options == null) {\n        path.options = { session: session };\n        return;\n      }\n      if (!('session' in path.options)) {\n        path.options.session = session;\n      }\n    });\n  }\n\n  const projection = query._fieldsForExec();\n  pop.forEach(p => {\n    p._queryProjection = projection;\n  });\n  pop.forEach(opts => {\n    opts._localModel = query.model;\n  });\n\n  return pop;\n};\n\n/*!\n * If the document is a mapped discriminator type, it returns a model instance for that type, otherwise,\n * it returns an instance of the given model.\n *\n * @param {Model}  model\n * @param {Object} doc\n * @param {Object} fields\n *\n * @return {Document}\n */\nexports.createModel = function createModel(model, doc, fields, userProvidedFields, options) {\n  model.hooks.execPreSync('createModel', doc);\n  const discriminatorMapping = model.schema ?\n    model.schema.discriminatorMapping :\n    null;\n\n  const key = discriminatorMapping && discriminatorMapping.isRoot ?\n    discriminatorMapping.key :\n    null;\n\n  const value = doc[key];\n  if (key && value && model.discriminators) {\n    const discriminator = model.discriminators[value] || getDiscriminatorByValue(model.discriminators, value);\n    if (discriminator) {\n      const _fields = clone(userProvidedFields);\n      exports.applyPaths(_fields, discriminator.schema);\n      return new discriminator(undefined, _fields, true);\n    }\n  }\n  if (typeof options === 'undefined') {\n    options = {};\n    options.defaults = true;\n  }\n  return new model(undefined, fields, {\n    skipId: true,\n    isNew: false,\n    willInit: true,\n    defaults: options.defaults\n  });\n};\n\n/*!\n * ignore\n */\n\nexports.applyPaths = function applyPaths(fields, schema) {\n  // determine if query is selecting or excluding fields\n  let exclude;\n  let keys;\n  let keyIndex;\n\n  if (fields) {\n    keys = Object.keys(fields);\n    keyIndex = keys.length;\n\n    while (keyIndex--) {\n      if (keys[keyIndex][0] === '+') {\n        continue;\n      }\n      const field = fields[keys[keyIndex]];\n      // Skip `$meta` and `$slice`\n      if (!isDefiningProjection(field)) {\n        continue;\n      }\n      exclude = !field;\n      break;\n    }\n  }\n\n  // if selecting, apply default schematype select:true fields\n  // if excluding, apply schematype select:false fields\n\n  const selected = [];\n  const excluded = [];\n  const stack = [];\n\n  analyzeSchema(schema);\n\n  switch (exclude) {\n    case true:\n      for (const fieldName of excluded) {\n        fields[fieldName] = 0;\n      }\n      break;\n    case false:\n      if (schema &&\n          schema.paths['_id'] &&\n          schema.paths['_id'].options &&\n          schema.paths['_id'].options.select === false) {\n        fields._id = 0;\n      }\n\n      for (const fieldName of selected) {\n        fields[fieldName] = fields[fieldName] || 1;\n      }\n      break;\n    case undefined:\n      if (fields == null) {\n        break;\n      }\n      // Any leftover plus paths must in the schema, so delete them (gh-7017)\n      for (const key of Object.keys(fields || {})) {\n        if (key.startsWith('+')) {\n          delete fields[key];\n        }\n      }\n\n      // user didn't specify fields, implies returning all fields.\n      // only need to apply excluded fields and delete any plus paths\n      for (const fieldName of excluded) {\n        fields[fieldName] = 0;\n      }\n      break;\n  }\n\n  function analyzeSchema(schema, prefix) {\n    prefix || (prefix = '');\n\n    // avoid recursion\n    if (stack.indexOf(schema) !== -1) {\n      return [];\n    }\n    stack.push(schema);\n\n    const addedPaths = [];\n    schema.eachPath(function(path, type) {\n      if (prefix) path = prefix + '.' + path;\n\n      let addedPath = analyzePath(path, type);\n      // arrays\n      if (addedPath == null && type.$isMongooseArray && !type.$isMongooseDocumentArray) {\n        addedPath = analyzePath(path, type.caster);\n      }\n      if (addedPath != null) {\n        addedPaths.push(addedPath);\n      }\n\n      // nested schemas\n      if (type.schema) {\n        const _addedPaths = analyzeSchema(type.schema, path);\n\n        // Special case: if discriminator key is the only field that would\n        // be projected in, remove it.\n        if (exclude === false) {\n          checkEmbeddedDiscriminatorKeyProjection(fields, path, type.schema,\n            selected, _addedPaths);\n        }\n      }\n    });\n\n    stack.pop();\n    return addedPaths;\n  }\n\n  function analyzePath(path, type) {\n    const plusPath = '+' + path;\n    const hasPlusPath = fields && plusPath in fields;\n    if (hasPlusPath) {\n      // forced inclusion\n      delete fields[plusPath];\n    }\n\n    if (typeof type.selected !== 'boolean') return;\n\n    if (hasPlusPath) {\n      // forced inclusion\n      delete fields[plusPath];\n\n      // if there are other fields being included, add this one\n      // if no other included fields, leave this out (implied inclusion)\n      if (exclude === false && keys.length > 1 && !~keys.indexOf(path)) {\n        fields[path] = 1;\n      }\n\n      return;\n    }\n\n    // check for parent exclusions\n    const pieces = path.split('.');\n    let cur = '';\n    for (let i = 0; i < pieces.length; ++i) {\n      cur += cur.length ? '.' + pieces[i] : pieces[i];\n      if (excluded.indexOf(cur) !== -1) {\n        return;\n      }\n    }\n\n    // Special case: if user has included a parent path of a discriminator key,\n    // don't explicitly project in the discriminator key because that will\n    // project out everything else under the parent path\n    if (!exclude && get(type, 'options.$skipDiscriminatorCheck', false)) {\n      let cur = '';\n      for (let i = 0; i < pieces.length; ++i) {\n        cur += (cur.length === 0 ? '' : '.') + pieces[i];\n        const projection = get(fields, cur, false) || get(fields, cur + '.$', false);\n        if (projection && typeof projection !== 'object') {\n          return;\n        }\n      }\n    }\n\n    (type.selected ? selected : excluded).push(path);\n    return path;\n  }\n};\n\n/*!\n * Set each path query option to lean\n *\n * @param {Object} option\n */\n\nfunction makeLean(val) {\n  return function(option) {\n    option.options || (option.options = {});\n\n    if (val != null && Array.isArray(val.virtuals)) {\n      val = Object.assign({}, val);\n      val.virtuals = val.virtuals.\n        filter(path => typeof path === 'string' && path.startsWith(option.path + '.')).\n        map(path => path.slice(option.path.length + 1));\n    }\n\n    option.options.lean = val;\n  };\n}\n\n/*!\n * Handle the `WriteOpResult` from the server\n */\n\nexports.handleDeleteWriteOpResult = function handleDeleteWriteOpResult(callback) {\n  return function _handleDeleteWriteOpResult(error, res) {\n    if (error) {\n      return callback(error);\n    }\n    const mongooseResult = Object.assign({}, res.result);\n    if (get(res, 'result.n', null) != null) {\n      mongooseResult.deletedCount = res.result.n;\n    }\n    if (res.deletedCount != null) {\n      mongooseResult.deletedCount = res.deletedCount;\n    }\n    return callback(null, mongooseResult);\n  };\n};\n"],"names":[],"mappings":"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"}