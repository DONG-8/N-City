{"version":3,"file":"applyTimestampsToChildren.js","sources":["../../../../../../../../node_modules/mongoose/lib/helpers/update/applyTimestampsToChildren.js"],"sourcesContent":["'use strict';\n\nconst cleanPositionalOperators = require('../schema/cleanPositionalOperators');\nconst handleTimestampOption = require('../schema/handleTimestampOption');\n\nmodule.exports = applyTimestampsToChildren;\n\n/*!\n * ignore\n */\n\nfunction applyTimestampsToChildren(now, update, schema) {\n  if (update == null) {\n    return;\n  }\n\n  const keys = Object.keys(update);\n  const hasDollarKey = keys.some(key => key.startsWith('$'));\n\n  if (hasDollarKey) {\n    if (update.$push) {\n      for (const key of Object.keys(update.$push)) {\n        const $path = schema.path(key);\n        if (update.$push[key] &&\n            $path &&\n            $path.$isMongooseDocumentArray &&\n            $path.schema.options.timestamps) {\n          const timestamps = $path.schema.options.timestamps;\n          const createdAt = handleTimestampOption(timestamps, 'createdAt');\n          const updatedAt = handleTimestampOption(timestamps, 'updatedAt');\n          if (update.$push[key].$each) {\n            update.$push[key].$each.forEach(function(subdoc) {\n              if (updatedAt != null) {\n                subdoc[updatedAt] = now;\n              }\n              if (createdAt != null) {\n                subdoc[createdAt] = now;\n              }\n            });\n          } else {\n            if (updatedAt != null) {\n              update.$push[key][updatedAt] = now;\n            }\n            if (createdAt != null) {\n              update.$push[key][createdAt] = now;\n            }\n          }\n        }\n      }\n    }\n    if (update.$set != null) {\n      const keys = Object.keys(update.$set);\n      for (const key of keys) {\n        applyTimestampsToUpdateKey(schema, key, update.$set, now);\n      }\n    }\n  }\n\n  const updateKeys = Object.keys(update).filter(key => !key.startsWith('$'));\n  for (const key of updateKeys) {\n    applyTimestampsToUpdateKey(schema, key, update, now);\n  }\n}\n\nfunction applyTimestampsToDocumentArray(arr, schematype, now) {\n  const timestamps = schematype.schema.options.timestamps;\n\n  if (!timestamps) {\n    return;\n  }\n\n  const len = arr.length;\n\n  const createdAt = handleTimestampOption(timestamps, 'createdAt');\n  const updatedAt = handleTimestampOption(timestamps, 'updatedAt');\n  for (let i = 0; i < len; ++i) {\n    if (updatedAt != null) {\n      arr[i][updatedAt] = now;\n    }\n    if (createdAt != null) {\n      arr[i][createdAt] = now;\n    }\n\n    applyTimestampsToChildren(now, arr[i], schematype.schema);\n  }\n}\n\nfunction applyTimestampsToSingleNested(subdoc, schematype, now) {\n  const timestamps = schematype.schema.options.timestamps;\n  if (!timestamps) {\n    return;\n  }\n\n  const createdAt = handleTimestampOption(timestamps, 'createdAt');\n  const updatedAt = handleTimestampOption(timestamps, 'updatedAt');\n  if (updatedAt != null) {\n    subdoc[updatedAt] = now;\n  }\n  if (createdAt != null) {\n    subdoc[createdAt] = now;\n  }\n\n  applyTimestampsToChildren(now, subdoc, schematype.schema);\n}\n\nfunction applyTimestampsToUpdateKey(schema, key, update, now) {\n  // Replace positional operator `$` and array filters `$[]` and `$[.*]`\n  const keyToSearch = cleanPositionalOperators(key);\n  const path = schema.path(keyToSearch);\n  if (!path) {\n    return;\n  }\n\n  const parentSchemaTypes = [];\n  const pieces = keyToSearch.split('.');\n  for (let i = pieces.length - 1; i > 0; --i) {\n    const s = schema.path(pieces.slice(0, i).join('.'));\n    if (s != null &&\n      (s.$isMongooseDocumentArray || s.$isSingleNested)) {\n      parentSchemaTypes.push({ parentPath: key.split('.').slice(0, i).join('.'), parentSchemaType: s });\n    }\n  }\n\n  if (Array.isArray(update[key]) && path.$isMongooseDocumentArray) {\n    applyTimestampsToDocumentArray(update[key], path, now);\n  } else if (update[key] && path.$isSingleNested) {\n    applyTimestampsToSingleNested(update[key], path, now);\n  } else if (parentSchemaTypes.length > 0) {\n    for (const item of parentSchemaTypes) {\n      const parentPath = item.parentPath;\n      const parentSchemaType = item.parentSchemaType;\n      const timestamps = parentSchemaType.schema.options.timestamps;\n      const updatedAt = handleTimestampOption(timestamps, 'updatedAt');\n\n      if (!timestamps || updatedAt == null) {\n        continue;\n      }\n\n      if (parentSchemaType.$isSingleNested) {\n        // Single nested is easy\n        update[parentPath + '.' + updatedAt] = now;\n      } else if (parentSchemaType.$isMongooseDocumentArray) {\n        let childPath = key.substr(parentPath.length + 1);\n\n        if (/^\\d+$/.test(childPath)) {\n          update[parentPath + '.' + childPath][updatedAt] = now;\n          continue;\n        }\n\n        const firstDot = childPath.indexOf('.');\n        childPath = firstDot !== -1 ? childPath.substr(0, firstDot) : childPath;\n\n        update[parentPath + '.' + childPath + '.' + updatedAt] = now;\n      }\n    }\n  } else if (path.schema != null && path.schema != schema && update[key]) {\n    const timestamps = path.schema.options.timestamps;\n    const createdAt = handleTimestampOption(timestamps, 'createdAt');\n    const updatedAt = handleTimestampOption(timestamps, 'updatedAt');\n\n    if (!timestamps) {\n      return;\n    }\n\n    if (updatedAt != null) {\n      update[key][updatedAt] = now;\n    }\n    if (createdAt != null) {\n      update[key][createdAt] = now;\n    }\n  }\n}"],"names":[],"mappings":"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"}