{"version":3,"file":"objectid.mjs","sources":["../../../../../../../node_modules/mongoose/lib/schema/objectid.js"],"sourcesContent":["/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst SchemaObjectIdOptions = require('../options/SchemaObjectIdOptions');\nconst SchemaType = require('../schematype');\nconst castObjectId = require('../cast/objectid');\nconst oid = require('../types/objectid');\nconst utils = require('../utils');\n\nconst CastError = SchemaType.CastError;\nlet Document;\n\n/**\n * ObjectId SchemaType constructor.\n *\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction ObjectId(key, options) {\n  const isKeyHexStr = typeof key === 'string' && key.length === 24 && /^[a-f0-9]+$/i.test(key);\n  const suppressWarning = options && options.suppressWarning;\n  if ((isKeyHexStr || typeof key === 'undefined') && !suppressWarning) {\n    console.warn('mongoose: To create a new ObjectId please try ' +\n      '`Mongoose.Types.ObjectId` instead of using ' +\n      '`Mongoose.Schema.ObjectId`. Set the `suppressWarning` option if ' +\n      'you\\'re trying to create a hex char path in your schema.');\n    console.trace();\n  }\n  SchemaType.call(this, key, options, 'ObjectID');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nObjectId.schemaName = 'ObjectId';\n\nObjectId.defaultOptions = {};\n\n/*!\n * Inherits from SchemaType.\n */\nObjectId.prototype = Object.create(SchemaType.prototype);\nObjectId.prototype.constructor = ObjectId;\nObjectId.prototype.OptionsConstructor = SchemaObjectIdOptions;\n\n/**\n * Attaches a getter for all ObjectId instances\n *\n * ####Example:\n *\n *     // Always convert to string when getting an ObjectId\n *     mongoose.ObjectId.get(v => v.toString());\n *\n *     const Model = mongoose.model('Test', new Schema({}));\n *     typeof (new Model({})._id); // 'string'\n *\n * @param {Function} getter\n * @return {this}\n * @function get\n * @static\n * @api public\n */\n\nObjectId.get = SchemaType.get;\n\n/**\n * Sets a default option for all ObjectId instances.\n *\n * ####Example:\n *\n *     // Make all object ids have option `required` equal to true.\n *     mongoose.Schema.ObjectId.set('required', true);\n *\n *     const Order = mongoose.model('Order', new Schema({ userId: ObjectId }));\n *     new Order({ }).validateSync().errors.userId.message; // Path `userId` is required.\n *\n * @param {String} option - The option you'd like to set the value for\n * @param {*} value - value for option\n * @return {undefined}\n * @function set\n * @static\n * @api public\n */\n\nObjectId.set = SchemaType.set;\n\n/**\n * Adds an auto-generated ObjectId default if turnOn is true.\n * @param {Boolean} turnOn auto generated ObjectId defaults\n * @api public\n * @return {SchemaType} this\n */\n\nObjectId.prototype.auto = function(turnOn) {\n  if (turnOn) {\n    this.default(defaultId);\n    this.set(resetId);\n  }\n\n  return this;\n};\n\n/*!\n * ignore\n */\n\nObjectId._checkRequired = v => v instanceof oid;\n\n/*!\n * ignore\n */\n\nObjectId._cast = castObjectId;\n\n/**\n * Get/set the function used to cast arbitrary values to objectids.\n *\n * ####Example:\n *\n *     // Make Mongoose only try to cast length 24 strings. By default, any 12\n *     // char string is a valid ObjectId.\n *     const original = mongoose.ObjectId.cast();\n *     mongoose.ObjectId.cast(v => {\n *       assert.ok(typeof v !== 'string' || v.length === 24);\n *       return original(v);\n *     });\n *\n *     // Or disable casting entirely\n *     mongoose.ObjectId.cast(false);\n *\n * @param {Function} caster\n * @return {Function}\n * @function get\n * @static\n * @api public\n */\n\nObjectId.cast = function cast(caster) {\n  if (arguments.length === 0) {\n    return this._cast;\n  }\n  if (caster === false) {\n    caster = this._defaultCaster;\n  }\n  this._cast = caster;\n\n  return this._cast;\n};\n\n/*!\n * ignore\n */\n\nObjectId._defaultCaster = v => {\n  if (!(v instanceof oid)) {\n    throw new Error(v + ' is not an instance of ObjectId');\n  }\n  return v;\n};\n\n/**\n * Override the function the required validator uses to check whether a string\n * passes the `required` check.\n *\n * ####Example:\n *\n *     // Allow empty strings to pass `required` check\n *     mongoose.Schema.Types.String.checkRequired(v => v != null);\n *\n *     const M = mongoose.model({ str: { type: String, required: true } });\n *     new M({ str: '' }).validateSync(); // `null`, validation passes!\n *\n * @param {Function} fn\n * @return {Function}\n * @function checkRequired\n * @static\n * @api public\n */\n\nObjectId.checkRequired = SchemaType.checkRequired;\n\n/**\n * Check if the given value satisfies a required validator.\n *\n * @param {Any} value\n * @param {Document} doc\n * @return {Boolean}\n * @api public\n */\n\nObjectId.prototype.checkRequired = function checkRequired(value, doc) {\n  if (SchemaType._isRef(this, value, doc, true)) {\n    return !!value;\n  }\n\n  // `require('util').inherits()` does **not** copy static properties, and\n  // plugins like mongoose-float use `inherits()` for pre-ES6.\n  const _checkRequired = typeof this.constructor.checkRequired == 'function' ?\n    this.constructor.checkRequired() :\n    ObjectId.checkRequired();\n\n  return _checkRequired(value);\n};\n\n/**\n * Casts to ObjectId\n *\n * @param {Object} value\n * @param {Object} doc\n * @param {Boolean} init whether this is an initialization cast\n * @api private\n */\n\nObjectId.prototype.cast = function(value, doc, init) {\n  if (SchemaType._isRef(this, value, doc, init)) {\n    // wait! we may need to cast this to a document\n    if (value instanceof oid) {\n      return value;\n    } else if (value != null && (value.constructor.name || '').toLowerCase() === 'objectid') {\n      return new oid(value.toHexString());\n    }\n\n    return this._castRef(value, doc, init);\n  }\n\n  let castObjectId;\n  if (typeof this._castFunction === 'function') {\n    castObjectId = this._castFunction;\n  } else if (typeof this.constructor.cast === 'function') {\n    castObjectId = this.constructor.cast();\n  } else {\n    castObjectId = ObjectId.cast();\n  }\n\n  try {\n    return castObjectId(value);\n  } catch (error) {\n    throw new CastError('ObjectId', value, this.path, error, this);\n  }\n};\n\n/*!\n * ignore\n */\n\nfunction handleSingle(val) {\n  return this.cast(val);\n}\n\nObjectId.prototype.$conditionalHandlers =\n    utils.options(SchemaType.prototype.$conditionalHandlers, {\n      $gt: handleSingle,\n      $gte: handleSingle,\n      $lt: handleSingle,\n      $lte: handleSingle\n    });\n\n/*!\n * ignore\n */\n\nfunction defaultId() {\n  return new oid();\n}\n\ndefaultId.$runBeforeSetters = true;\n\nfunction resetId(v) {\n  Document || (Document = require('./../document'));\n\n  if (this instanceof Document) {\n    if (v === void 0) {\n      const _v = new oid;\n      this.$__._id = _v;\n      return _v;\n    }\n\n    this.$__._id = v;\n  }\n\n  return v;\n}\n\n/*!\n * Module exports.\n */\n\nmodule.exports = ObjectId;\n"],"names":["require$$0","SchemaType","SchemaObjectIdOptions","oid","require$$1"],"mappings":"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"}