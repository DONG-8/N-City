{"version":3,"file":"geospatial.js","sources":["../../../../../../../../node_modules/mongoose/lib/schema/operators/geospatial.js"],"sourcesContent":["/*!\n * Module requirements.\n */\n\n'use strict';\n\nconst castArraysOfNumbers = require('./helpers').castArraysOfNumbers;\nconst castToNumber = require('./helpers').castToNumber;\n\n/*!\n * ignore\n */\n\nexports.cast$geoIntersects = cast$geoIntersects;\nexports.cast$near = cast$near;\nexports.cast$within = cast$within;\n\nfunction cast$near(val) {\n  const SchemaArray = require('../array');\n\n  if (Array.isArray(val)) {\n    castArraysOfNumbers(val, this);\n    return val;\n  }\n\n  _castMinMaxDistance(this, val);\n\n  if (val && val.$geometry) {\n    return cast$geometry(val, this);\n  }\n\n  if (!Array.isArray(val)) {\n    throw new TypeError('$near must be either an array or an object ' +\n      'with a $geometry property');\n  }\n\n  return SchemaArray.prototype.castForQuery.call(this, val);\n}\n\nfunction cast$geometry(val, self) {\n  switch (val.$geometry.type) {\n    case 'Polygon':\n    case 'LineString':\n    case 'Point':\n      castArraysOfNumbers(val.$geometry.coordinates, self);\n      break;\n    default:\n      // ignore unknowns\n      break;\n  }\n\n  _castMinMaxDistance(self, val);\n\n  return val;\n}\n\nfunction cast$within(val) {\n  _castMinMaxDistance(this, val);\n\n  if (val.$box || val.$polygon) {\n    const type = val.$box ? '$box' : '$polygon';\n    val[type].forEach(arr => {\n      if (!Array.isArray(arr)) {\n        const msg = 'Invalid $within $box argument. '\n            + 'Expected an array, received ' + arr;\n        throw new TypeError(msg);\n      }\n      arr.forEach((v, i) => {\n        arr[i] = castToNumber.call(this, v);\n      });\n    });\n  } else if (val.$center || val.$centerSphere) {\n    const type = val.$center ? '$center' : '$centerSphere';\n    val[type].forEach((item, i) => {\n      if (Array.isArray(item)) {\n        item.forEach((v, j) => {\n          item[j] = castToNumber.call(this, v);\n        });\n      } else {\n        val[type][i] = castToNumber.call(this, item);\n      }\n    });\n  } else if (val.$geometry) {\n    cast$geometry(val, this);\n  }\n\n  return val;\n}\n\nfunction cast$geoIntersects(val) {\n  const geo = val.$geometry;\n  if (!geo) {\n    return;\n  }\n\n  cast$geometry(val, this);\n  return val;\n}\n\nfunction _castMinMaxDistance(self, val) {\n  if (val.$maxDistance) {\n    val.$maxDistance = castToNumber.call(self, val.$maxDistance);\n  }\n  if (val.$minDistance) {\n    val.$minDistance = castToNumber.call(self, val.$minDistance);\n  }\n}\n"],"names":["require$$0","require$$1"],"mappings":"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"}