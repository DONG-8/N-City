{"version":3,"file":"serverSelection.js","sources":["../../../../../../../node_modules/mongoose/lib/error/serverSelection.js"],"sourcesContent":["/*!\n * Module dependencies.\n */\n\n'use strict';\n\nconst MongooseError = require('./mongooseError');\nconst allServersUnknown = require('../helpers/topology/allServersUnknown');\nconst isAtlas = require('../helpers/topology/isAtlas');\nconst isSSLError = require('../helpers/topology/isSSLError');\n\n/*!\n * ignore\n */\n\nconst atlasMessage = 'Could not connect to any servers in your MongoDB Atlas cluster. ' +\n  'One common reason is that you\\'re trying to access the database from ' +\n  'an IP that isn\\'t whitelisted. Make sure your current IP address is on your Atlas ' +\n  'cluster\\'s IP whitelist: https://docs.atlas.mongodb.com/security-whitelist/';\n\nconst sslMessage = 'Mongoose is connecting with SSL enabled, but the server is ' +\n  'not accepting SSL connections. Please ensure that the MongoDB server you are ' +\n  'connecting to is configured to accept SSL connections. Learn more: ' +\n  'https://mongoosejs.com/docs/tutorials/ssl.html';\n\nclass MongooseServerSelectionError extends MongooseError {\n  /**\n   * MongooseServerSelectionError constructor\n   *\n   * @api private\n   */\n  assimilateError(err) {\n    const reason = err.reason;\n    // Special message for a case that is likely due to IP whitelisting issues.\n    const isAtlasWhitelistError = isAtlas(reason) &&\n      allServersUnknown(reason) &&\n      err.message.indexOf('bad auth') === -1 &&\n      err.message.indexOf('Authentication failed') === -1;\n\n    if (isAtlasWhitelistError) {\n      this.message = atlasMessage;\n    } else if (isSSLError(reason)) {\n      this.message = sslMessage;\n    } else {\n      this.message = err.message;\n    }\n    for (const key in err) {\n      if (key !== 'name') {\n        this[key] = err[key];\n      }\n    }\n\n    return this;\n  }\n}\n\nObject.defineProperty(MongooseServerSelectionError.prototype, 'name', {\n  value: 'MongooseServerSelectionError'\n});\n\nmodule.exports = MongooseServerSelectionError;\n"],"names":["MongooseError"],"mappings":";;;;;;;;;;AAKA;AACiD;AAC0B;AACpB;AACM;AAC7D;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY,GAAG,kEAAkE;AACvF,EAAE,uEAAuE;AACzE,EAAE,oFAAoF;AACtF,EAAE,6EAA6E,CAAC;AAChF;AACA,MAAM,UAAU,GAAG,6DAA6D;AAChF,EAAE,+EAA+E;AACjF,EAAE,qEAAqE;AACvE,EAAE,gDAAgD,CAAC;AACnD;AACA,MAAM,4BAA4B,SAASA,aAAa,CAAC;AACzD;AACA;AACA;AACA;AACA;AACA,EAAE,eAAe,CAAC,GAAG,EAAE;AACvB,IAAI,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AAC9B;AACA,IAAI,MAAM,qBAAqB,GAAG,OAAO,CAAC,MAAM,CAAC;AACjD,MAAM,iBAAiB,CAAC,MAAM,CAAC;AAC/B,MAAM,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AAC5C,MAAM,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC,CAAC;AAC1D;AACA,IAAI,IAAI,qBAAqB,EAAE;AAC/B,MAAM,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC;AAClC,KAAK,MAAM,IAAI,UAAU,CAAC,MAAM,CAAC,EAAE;AACnC,MAAM,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;AAChC,KAAK,MAAM;AACX,MAAM,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;AACjC,KAAK;AACL,IAAI,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;AAC3B,MAAM,IAAI,GAAG,KAAK,MAAM,EAAE;AAC1B,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;AAC7B,OAAO;AACP,KAAK;AACL;AACA,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,CAAC;AACD;AACA,MAAM,CAAC,cAAc,CAAC,4BAA4B,CAAC,SAAS,EAAE,MAAM,EAAE;AACtE,EAAE,KAAK,EAAE,8BAA8B;AACvC,CAAC,CAAC,CAAC;AACH;mBACc,GAAG;;;;"}