{"version":3,"file":"removeUnusedArrayFilters.mjs","sources":["../../../../../../../../node_modules/mongoose/lib/helpers/update/removeUnusedArrayFilters.js"],"sourcesContent":["'use strict';\n\n/**\n * MongoDB throws an error if there's unused array filters. That is, if `options.arrayFilters` defines\n * a filter, but none of the `update` keys use it. This should be enough to filter out all unused array\n * filters.\n */\n\nmodule.exports = function removeUnusedArrayFilters(update, arrayFilters) {\n  const updateKeys = Object.keys(update).map(key => Object.keys(update[key])).reduce((cur, arr) => cur.concat(arr), []);\n  return arrayFilters.filter(obj => {\n    const firstKey = Object.keys(obj)[0];\n    const firstDot = firstKey.indexOf('.');\n    const arrayFilterKey = firstDot === -1 ? firstKey : firstKey.slice(0, firstDot);\n\n    return updateKeys.find(key => key.includes('$[' + arrayFilterKey + ']')) != null;\n  });\n};"],"names":[],"mappings":"AAEA;AACA;AACA;AACA;AACA;AACA;4BACc,GAAG,SAAS,wBAAwB,CAAC,MAAM,EAAE,YAAY,EAAE;AACzE,EAAE,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;AACxH,EAAE,OAAO,YAAY,CAAC,MAAM,CAAC,GAAG,IAAI;AACpC,IAAI,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,IAAI,MAAM,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAC3C,IAAI,MAAM,cAAc,GAAG,QAAQ,KAAK,CAAC,CAAC,GAAG,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;AACpF;AACA,IAAI,OAAO,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,GAAG,cAAc,GAAG,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC;AACrF,GAAG,CAAC,CAAC;AACL;;;;"}