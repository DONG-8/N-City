{"version":3,"file":"getIndexes.mjs","sources":["../../../../../../../../node_modules/mongoose/lib/helpers/schema/getIndexes.js"],"sourcesContent":["'use strict';\n\nconst get = require('../get');\nconst helperIsObject = require('../isObject');\n\n/*!\n * Gather all indexes defined in the schema, including single nested,\n * document arrays, and embedded discriminators.\n */\n\nmodule.exports = function getIndexes(schema) {\n  let indexes = [];\n  const schemaStack = new WeakMap();\n  const indexTypes = schema.constructor.indexTypes;\n  const indexByName = new Map();\n\n  collectIndexes(schema);\n  return indexes;\n\n  function collectIndexes(schema, prefix, baseSchema) {\n    // Ignore infinitely nested schemas, if we've already seen this schema\n    // along this path there must be a cycle\n    if (schemaStack.has(schema)) {\n      return;\n    }\n    schemaStack.set(schema, true);\n\n    prefix = prefix || '';\n    const keys = Object.keys(schema.paths);\n\n    for (const key of keys) {\n      const path = schema.paths[key];\n      if (baseSchema != null && baseSchema.paths[key]) {\n        // If looking at an embedded discriminator schema, don't look at paths\n        // that the\n        continue;\n      }\n\n      if (path.$isMongooseDocumentArray || path.$isSingleNested) {\n        if (get(path, 'options.excludeIndexes') !== true &&\n            get(path, 'schemaOptions.excludeIndexes') !== true &&\n            get(path, 'schema.options.excludeIndexes') !== true) {\n          collectIndexes(path.schema, prefix + key + '.');\n        }\n\n        if (path.schema.discriminators != null) {\n          const discriminators = path.schema.discriminators;\n          const discriminatorKeys = Object.keys(discriminators);\n          for (const discriminatorKey of discriminatorKeys) {\n            collectIndexes(discriminators[discriminatorKey],\n              prefix + key + '.', path.schema);\n          }\n        }\n\n        // Retained to minimize risk of backwards breaking changes due to\n        // gh-6113\n        if (path.$isMongooseDocumentArray) {\n          continue;\n        }\n      }\n\n      const index = path._index || (path.caster && path.caster._index);\n\n      if (index !== false && index !== null && index !== undefined) {\n        const field = {};\n        const isObject = helperIsObject(index);\n        const options = isObject ? index : {};\n        const type = typeof index === 'string' ? index :\n          isObject ? index.type :\n            false;\n\n        if (type && indexTypes.indexOf(type) !== -1) {\n          field[prefix + key] = type;\n        } else if (options.text) {\n          field[prefix + key] = 'text';\n          delete options.text;\n        } else {\n          const isDescendingIndex = Number(index) === -1;\n          field[prefix + key] = isDescendingIndex ? -1 : 1;\n        }\n\n        delete options.type;\n        if (!('background' in options)) {\n          options.background = true;\n        }\n        if (schema.options.autoIndex != null) {\n          options._autoIndex = schema.options.autoIndex;\n        }\n\n        const indexName = options && options.name;\n        if (typeof indexName === 'string') {\n          if (indexByName.has(indexName)) {\n            Object.assign(indexByName.get(indexName), field);\n          } else {\n            indexes.push([field, options]);\n            indexByName.set(indexName, field);\n          }\n        } else {\n          indexes.push([field, options]);\n          indexByName.set(indexName, field);\n        }\n      }\n    }\n\n    schemaStack.delete(schema);\n\n    if (prefix) {\n      fixSubIndexPaths(schema, prefix);\n    } else {\n      schema._indexes.forEach(function(index) {\n        if (!('background' in index[1])) {\n          index[1].background = true;\n        }\n      });\n      indexes = indexes.concat(schema._indexes);\n    }\n  }\n\n  /*!\n   * Checks for indexes added to subdocs using Schema.index().\n   * These indexes need their paths prefixed properly.\n   *\n   * schema._indexes = [ [indexObj, options], [indexObj, options] ..]\n   */\n\n  function fixSubIndexPaths(schema, prefix) {\n    const subindexes = schema._indexes;\n    const len = subindexes.length;\n    for (let i = 0; i < len; ++i) {\n      const indexObj = subindexes[i][0];\n      const indexOptions = subindexes[i][1];\n      const keys = Object.keys(indexObj);\n      const klen = keys.length;\n      const newindex = {};\n\n      // use forward iteration, order matters\n      for (let j = 0; j < klen; ++j) {\n        const key = keys[j];\n        newindex[prefix + key] = indexObj[key];\n      }\n\n      const newIndexOptions = Object.assign({}, indexOptions);\n      if (indexOptions != null && indexOptions.partialFilterExpression != null) {\n        newIndexOptions.partialFilterExpression = {};\n        const partialFilterExpression = indexOptions.partialFilterExpression;\n        for (const key of Object.keys(partialFilterExpression)) {\n          newIndexOptions.partialFilterExpression[prefix + key] =\n            partialFilterExpression[key];\n        }\n      }\n\n      indexes.push([newindex, newIndexOptions]);\n    }\n  }\n};\n"],"names":["isObject","helperIsObject"],"mappings":"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"}