{"version":3,"file":"SchemaSingleNestedOptions.mjs","sources":["../../../../../../../node_modules/mongoose/lib/options/SchemaSingleNestedOptions.js"],"sourcesContent":["'use strict';\n\nconst SchemaTypeOptions = require('./SchemaTypeOptions');\n\n/**\n * The options defined on a single nested schematype.\n *\n * ####Example:\n *\n *     const schema = Schema({ child: Schema({ name: String }) });\n *     schema.path('child').options; // SchemaSingleNestedOptions instance\n *\n * @api public\n * @inherits SchemaTypeOptions\n * @constructor SchemaSingleNestedOptions\n */\n\nclass SchemaSingleNestedOptions extends SchemaTypeOptions {}\n\nconst opts = require('./propertyOptions');\n\n/**\n * If set, overwrites the child schema's `_id` option.\n *\n * ####Example:\n *\n *     const childSchema = Schema({ name: String });\n *     const parentSchema = Schema({\n *       child: { type: childSchema, _id: false }\n *     });\n *     parentSchema.path('child').schema.options._id; // false\n *\n * @api public\n * @property of\n * @memberOf SchemaSingleNestedOptions\n * @type Function|string\n * @instance\n */\n\nObject.defineProperty(SchemaSingleNestedOptions.prototype, '_id', opts);\n\nmodule.exports = SchemaSingleNestedOptions;"],"names":["SchemaTypeOptions","opts"],"mappings":";;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,yBAAyB,SAASA,mBAAiB,CAAC,EAAE;AAC5D;AAC0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,CAAC,cAAc,CAAC,yBAAyB,CAAC,SAAS,EAAE,KAAK,EAAEC,eAAI,CAAC,CAAC;AACxE;+BACc,GAAG;;;;"}