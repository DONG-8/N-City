{"version":3,"file":"index.mjs","sources":["../../../../../node_modules/saslprep/index.js"],"sourcesContent":["'use strict';\n\nconst {\n  unassigned_code_points,\n  commonly_mapped_to_nothing,\n  non_ASCII_space_characters,\n  prohibited_characters,\n  bidirectional_r_al,\n  bidirectional_l,\n} = require('./lib/memory-code-points');\n\nmodule.exports = saslprep;\n\n// 2.1.  Mapping\n\n/**\n * non-ASCII space characters [StringPrep, C.1.2] that can be\n * mapped to SPACE (U+0020)\n */\nconst mapping2space = non_ASCII_space_characters;\n\n/**\n * the \"commonly mapped to nothing\" characters [StringPrep, B.1]\n * that can be mapped to nothing.\n */\nconst mapping2nothing = commonly_mapped_to_nothing;\n\n// utils\nconst getCodePoint = character => character.codePointAt(0);\nconst first = x => x[0];\nconst last = x => x[x.length - 1];\n\n/**\n * Convert provided string into an array of Unicode Code Points.\n * Based on https://stackoverflow.com/a/21409165/1556249\n * and https://www.npmjs.com/package/code-point-at.\n * @param {string} input\n * @returns {number[]}\n */\nfunction toCodePoints(input) {\n  const codepoints = [];\n  const size = input.length;\n\n  for (let i = 0; i < size; i += 1) {\n    const before = input.charCodeAt(i);\n\n    if (before >= 0xd800 && before <= 0xdbff && size > i + 1) {\n      const next = input.charCodeAt(i + 1);\n\n      if (next >= 0xdc00 && next <= 0xdfff) {\n        codepoints.push((before - 0xd800) * 0x400 + next - 0xdc00 + 0x10000);\n        i += 1;\n        continue;\n      }\n    }\n\n    codepoints.push(before);\n  }\n\n  return codepoints;\n}\n\n/**\n * SASLprep.\n * @param {string} input\n * @param {Object} opts\n * @param {boolean} opts.allowUnassigned\n * @returns {string}\n */\nfunction saslprep(input, opts = {}) {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected string.');\n  }\n\n  if (input.length === 0) {\n    return '';\n  }\n\n  // 1. Map\n  const mapped_input = toCodePoints(input)\n    // 1.1 mapping to space\n    .map(character => (mapping2space.get(character) ? 0x20 : character))\n    // 1.2 mapping to nothing\n    .filter(character => !mapping2nothing.get(character));\n\n  // 2. Normalize\n  const normalized_input = String.fromCodePoint\n    .apply(null, mapped_input)\n    .normalize('NFKC');\n\n  const normalized_map = toCodePoints(normalized_input);\n\n  // 3. Prohibit\n  const hasProhibited = normalized_map.some(character =>\n    prohibited_characters.get(character)\n  );\n\n  if (hasProhibited) {\n    throw new Error(\n      'Prohibited character, see https://tools.ietf.org/html/rfc4013#section-2.3'\n    );\n  }\n\n  // Unassigned Code Points\n  if (opts.allowUnassigned !== true) {\n    const hasUnassigned = normalized_map.some(character =>\n      unassigned_code_points.get(character)\n    );\n\n    if (hasUnassigned) {\n      throw new Error(\n        'Unassigned code point, see https://tools.ietf.org/html/rfc4013#section-2.5'\n      );\n    }\n  }\n\n  // 4. check bidi\n\n  const hasBidiRAL = normalized_map.some(character =>\n    bidirectional_r_al.get(character)\n  );\n\n  const hasBidiL = normalized_map.some(character =>\n    bidirectional_l.get(character)\n  );\n\n  // 4.1 If a string contains any RandALCat character, the string MUST NOT\n  // contain any LCat character.\n  if (hasBidiRAL && hasBidiL) {\n    throw new Error(\n      'String must not contain RandALCat and LCat at the same time,' +\n        ' see https://tools.ietf.org/html/rfc3454#section-6'\n    );\n  }\n\n  /**\n   * 4.2 If a string contains any RandALCat character, a RandALCat\n   * character MUST be the first character of the string, and a\n   * RandALCat character MUST be the last character of the string.\n   */\n\n  const isFirstBidiRAL = bidirectional_r_al.get(\n    getCodePoint(first(normalized_input))\n  );\n  const isLastBidiRAL = bidirectional_r_al.get(\n    getCodePoint(last(normalized_input))\n  );\n\n  if (hasBidiRAL && !(isFirstBidiRAL && isLastBidiRAL)) {\n    throw new Error(\n      'Bidirectional RandALCat character must be the first and the last' +\n        ' character of the string, see https://tools.ietf.org/html/rfc3454#section-6'\n    );\n  }\n\n  return normalized_input;\n}\n"],"names":["require$$0"],"mappings":"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"}