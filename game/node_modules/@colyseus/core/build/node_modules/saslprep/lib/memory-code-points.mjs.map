{"version":3,"file":"memory-code-points.mjs","sources":["../../../../../../node_modules/saslprep/lib/memory-code-points.js"],"sourcesContent":["'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst bitfield = require('sparse-bitfield');\n\n/* eslint-disable-next-line security/detect-non-literal-fs-filename */\nconst memory = fs.readFileSync(path.resolve(__dirname, '../code-points.mem'));\nlet offset = 0;\n\n/**\n * Loads each code points sequence from buffer.\n * @returns {bitfield}\n */\nfunction read() {\n  const size = memory.readUInt32BE(offset);\n  offset += 4;\n\n  const codepoints = memory.slice(offset, offset + size);\n  offset += size;\n\n  return bitfield({ buffer: codepoints });\n}\n\nconst unassigned_code_points = read();\nconst commonly_mapped_to_nothing = read();\nconst non_ASCII_space_characters = read();\nconst prohibited_characters = read();\nconst bidirectional_r_al = read();\nconst bidirectional_l = read();\n\nmodule.exports = {\n  unassigned_code_points,\n  commonly_mapped_to_nothing,\n  non_ASCII_space_characters,\n  prohibited_characters,\n  bidirectional_r_al,\n  bidirectional_l,\n};\n"],"names":["bitfield"],"mappings":";;;;AAMA;AACA,MAAM,MAAM,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,oBAAoB,CAAC,CAAC,CAAC;AAC9E,IAAI,MAAM,GAAG,CAAC,CAAC;AACf;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,GAAG;AAChB,EAAE,MAAM,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AAC3C,EAAE,MAAM,IAAI,CAAC,CAAC;AACd;AACA,EAAE,MAAM,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,GAAG,IAAI,CAAC,CAAC;AACzD,EAAE,MAAM,IAAI,IAAI,CAAC;AACjB;AACA,EAAE,OAAOA,cAAQ,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;AAC1C,CAAC;AACD;AACA,MAAM,sBAAsB,GAAG,IAAI,EAAE,CAAC;AACtC,MAAM,0BAA0B,GAAG,IAAI,EAAE,CAAC;AAC1C,MAAM,0BAA0B,GAAG,IAAI,EAAE,CAAC;AAC1C,MAAM,qBAAqB,GAAG,IAAI,EAAE,CAAC;AACrC,MAAM,kBAAkB,GAAG,IAAI,EAAE,CAAC;AAClC,MAAM,eAAe,GAAG,IAAI,EAAE,CAAC;AAC/B;oBACc,GAAG;AACjB,EAAE,sBAAsB;AACxB,EAAE,0BAA0B;AAC5B,EAAE,0BAA0B;AAC5B,EAAE,qBAAqB;AACvB,EAAE,kBAAkB;AACpB,EAAE,eAAe;AACjB;;;;"}