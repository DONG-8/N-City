{"version":3,"file":"index.js","sources":["../../../../../node_modules/bson/index.js"],"sourcesContent":["var BSON = require('./lib/bson/bson'),\n  Binary = require('./lib/bson/binary'),\n  Code = require('./lib/bson/code'),\n  DBRef = require('./lib/bson/db_ref'),\n  Decimal128 = require('./lib/bson/decimal128'),\n  Double = require('./lib/bson/double'),\n  Int32 = require('./lib/bson/int_32'),\n  Long = require('./lib/bson/long'),\n  Map = require('./lib/bson/map'),\n  MaxKey = require('./lib/bson/max_key'),\n  MinKey = require('./lib/bson/min_key'),\n  ObjectId = require('./lib/bson/objectid'),\n  BSONRegExp = require('./lib/bson/regexp'),\n  Symbol = require('./lib/bson/symbol'),\n  Timestamp = require('./lib/bson/timestamp');\n\n// BSON MAX VALUES\nBSON.BSON_INT32_MAX = 0x7fffffff;\nBSON.BSON_INT32_MIN = -0x80000000;\n\nBSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;\nBSON.BSON_INT64_MIN = -Math.pow(2, 63);\n\n// JS MAX PRECISE VALUES\nBSON.JS_INT_MAX = 0x20000000000000; // Any integer up to 2^53 can be precisely represented by a double.\nBSON.JS_INT_MIN = -0x20000000000000; // Any integer down to -2^53 can be precisely represented by a double.\n\n// Add BSON types to function creation\nBSON.Binary = Binary;\nBSON.Code = Code;\nBSON.DBRef = DBRef;\nBSON.Decimal128 = Decimal128;\nBSON.Double = Double;\nBSON.Int32 = Int32;\nBSON.Long = Long;\nBSON.Map = Map;\nBSON.MaxKey = MaxKey;\nBSON.MinKey = MinKey;\nBSON.ObjectId = ObjectId;\nBSON.ObjectID = ObjectId;\nBSON.BSONRegExp = BSONRegExp;\nBSON.Symbol = Symbol;\nBSON.Timestamp = Timestamp;\n\n// Return the BSON\nmodule.exports = BSON;\n"],"names":["BSON","Binary","Code","DBRef","Decimal128","Double","Int32","Long","Map","MaxKey","MinKey","ObjectId","BSONRegExp","Symbol","Timestamp"],"mappings":";;;;;;;;;;;;;;;;;;AAgBA;AACAA,iBAAI,CAAC,cAAc,GAAG,UAAU,CAAC;AACjCA,iBAAI,CAAC,cAAc,GAAG,CAAC,UAAU,CAAC;AAClC;AACAA,iBAAI,CAAC,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;AAC1CA,iBAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACvC;AACA;AACAA,iBAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC;AACnCA,iBAAI,CAAC,UAAU,GAAG,CAAC,gBAAgB,CAAC;AACpC;AACA;AACAA,iBAAI,CAAC,MAAM,GAAGC,iBAAM,CAAC;AACrBD,iBAAI,CAAC,IAAI,GAAGE,eAAI,CAAC;AACjBF,iBAAI,CAAC,KAAK,GAAGG,iBAAK,CAAC;AACnBH,iBAAI,CAAC,UAAU,GAAGI,qBAAU,CAAC;AAC7BJ,iBAAI,CAAC,MAAM,GAAGK,iBAAM,CAAC;AACrBL,iBAAI,CAAC,KAAK,GAAGM,iBAAK,CAAC;AACnBN,iBAAI,CAAC,IAAI,GAAGO,eAAI,CAAC;AACjBP,iBAAI,CAAC,GAAG,GAAGQ,GAAG,CAAC;AACfR,iBAAI,CAAC,MAAM,GAAGS,kBAAM,CAAC;AACrBT,iBAAI,CAAC,MAAM,GAAGU,kBAAM,CAAC;AACrBV,iBAAI,CAAC,QAAQ,GAAGW,mBAAQ,CAAC;AACzBX,iBAAI,CAAC,QAAQ,GAAGW,mBAAQ,CAAC;AACzBX,iBAAI,CAAC,UAAU,GAAGY,iBAAU,CAAC;AAC7BZ,iBAAI,CAAC,MAAM,GAAGa,iBAAM,CAAC;AACrBb,iBAAI,CAAC,SAAS,GAAGc,oBAAS,CAAC;AAC3B;AACA;QACc,GAAGd;;;;"}