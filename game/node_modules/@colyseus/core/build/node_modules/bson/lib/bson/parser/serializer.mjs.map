{"version":3,"file":"serializer.mjs","sources":["../../../../../../../../node_modules/bson/lib/bson/parser/serializer.js"],"sourcesContent":["'use strict';\n\nvar writeIEEE754 = require('../float_parser').writeIEEE754,\n  Long = require('../long').Long,\n  Map = require('../map'),\n  Binary = require('../binary').Binary;\n\nvar normalizedFunctionString = require('./utils').normalizedFunctionString;\n\n// try {\n//   var _Buffer = Uint8Array;\n// } catch (e) {\n//   _Buffer = Buffer;\n// }\n\nvar regexp = /\\x00/; // eslint-disable-line no-control-regex\nvar ignoreKeys = ['$db', '$ref', '$id', '$clusterTime'];\n\n// To ensure that 0.4 of node works correctly\nvar isDate = function isDate(d) {\n  return typeof d === 'object' && Object.prototype.toString.call(d) === '[object Date]';\n};\n\nvar isRegExp = function isRegExp(d) {\n  return Object.prototype.toString.call(d) === '[object RegExp]';\n};\n\nvar serializeString = function(buffer, key, value, index, isArray) {\n  // Encode String type\n  buffer[index++] = BSON.BSON_DATA_STRING;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes + 1;\n  buffer[index - 1] = 0;\n  // Write the string\n  var size = buffer.write(value, index + 4, 'utf8');\n  // Write the size of the string to buffer\n  buffer[index + 3] = ((size + 1) >> 24) & 0xff;\n  buffer[index + 2] = ((size + 1) >> 16) & 0xff;\n  buffer[index + 1] = ((size + 1) >> 8) & 0xff;\n  buffer[index] = (size + 1) & 0xff;\n  // Update index\n  index = index + 4 + size;\n  // Write zero\n  buffer[index++] = 0;\n  return index;\n};\n\nvar serializeNumber = function(buffer, key, value, index, isArray) {\n  // We have an integer value\n  if (Math.floor(value) === value && value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {\n    // If the value fits in 32 bits encode as int, if it fits in a double\n    // encode it as a double, otherwise long\n    if (value >= BSON.BSON_INT32_MIN && value <= BSON.BSON_INT32_MAX) {\n      // Set int type 32 bits or less\n      buffer[index++] = BSON.BSON_DATA_INT;\n      // Number of written bytes\n      var numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, 'utf8')\n        : buffer.write(key, index, 'ascii');\n      // Encode the name\n      index = index + numberOfWrittenBytes;\n      buffer[index++] = 0;\n      // Write the int value\n      buffer[index++] = value & 0xff;\n      buffer[index++] = (value >> 8) & 0xff;\n      buffer[index++] = (value >> 16) & 0xff;\n      buffer[index++] = (value >> 24) & 0xff;\n    } else if (value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {\n      // Encode as double\n      buffer[index++] = BSON.BSON_DATA_NUMBER;\n      // Number of written bytes\n      numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, 'utf8')\n        : buffer.write(key, index, 'ascii');\n      // Encode the name\n      index = index + numberOfWrittenBytes;\n      buffer[index++] = 0;\n      // Write float\n      writeIEEE754(buffer, value, index, 'little', 52, 8);\n      // Ajust index\n      index = index + 8;\n    } else {\n      // Set long type\n      buffer[index++] = BSON.BSON_DATA_LONG;\n      // Number of written bytes\n      numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, 'utf8')\n        : buffer.write(key, index, 'ascii');\n      // Encode the name\n      index = index + numberOfWrittenBytes;\n      buffer[index++] = 0;\n      var longVal = Long.fromNumber(value);\n      var lowBits = longVal.getLowBits();\n      var highBits = longVal.getHighBits();\n      // Encode low bits\n      buffer[index++] = lowBits & 0xff;\n      buffer[index++] = (lowBits >> 8) & 0xff;\n      buffer[index++] = (lowBits >> 16) & 0xff;\n      buffer[index++] = (lowBits >> 24) & 0xff;\n      // Encode high bits\n      buffer[index++] = highBits & 0xff;\n      buffer[index++] = (highBits >> 8) & 0xff;\n      buffer[index++] = (highBits >> 16) & 0xff;\n      buffer[index++] = (highBits >> 24) & 0xff;\n    }\n  } else {\n    // Encode as double\n    buffer[index++] = BSON.BSON_DATA_NUMBER;\n    // Number of written bytes\n    numberOfWrittenBytes = !isArray\n      ? buffer.write(key, index, 'utf8')\n      : buffer.write(key, index, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write float\n    writeIEEE754(buffer, value, index, 'little', 52, 8);\n    // Ajust index\n    index = index + 8;\n  }\n\n  return index;\n};\n\nvar serializeNull = function(buffer, key, value, index, isArray) {\n  // Set long type\n  buffer[index++] = BSON.BSON_DATA_NULL;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  return index;\n};\n\nvar serializeBoolean = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_BOOLEAN;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Encode the boolean value\n  buffer[index++] = value ? 1 : 0;\n  return index;\n};\n\nvar serializeDate = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_DATE;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  // Write the date\n  var dateInMilis = Long.fromNumber(value.getTime());\n  var lowBits = dateInMilis.getLowBits();\n  var highBits = dateInMilis.getHighBits();\n  // Encode low bits\n  buffer[index++] = lowBits & 0xff;\n  buffer[index++] = (lowBits >> 8) & 0xff;\n  buffer[index++] = (lowBits >> 16) & 0xff;\n  buffer[index++] = (lowBits >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = highBits & 0xff;\n  buffer[index++] = (highBits >> 8) & 0xff;\n  buffer[index++] = (highBits >> 16) & 0xff;\n  buffer[index++] = (highBits >> 24) & 0xff;\n  return index;\n};\n\nvar serializeRegExp = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_REGEXP;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  if (value.source && value.source.match(regexp) != null) {\n    throw Error('value ' + value.source + ' must not contain null bytes');\n  }\n  // Adjust the index\n  index = index + buffer.write(value.source, index, 'utf8');\n  // Write zero\n  buffer[index++] = 0x00;\n  // Write the parameters\n  if (value.global) buffer[index++] = 0x73; // s\n  if (value.ignoreCase) buffer[index++] = 0x69; // i\n  if (value.multiline) buffer[index++] = 0x6d; // m\n  // Add ending zero\n  buffer[index++] = 0x00;\n  return index;\n};\n\nvar serializeBSONRegExp = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_REGEXP;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  // Check the pattern for 0 bytes\n  if (value.pattern.match(regexp) != null) {\n    // The BSON spec doesn't allow keys with null bytes because keys are\n    // null-terminated.\n    throw Error('pattern ' + value.pattern + ' must not contain null bytes');\n  }\n\n  // Adjust the index\n  index = index + buffer.write(value.pattern, index, 'utf8');\n  // Write zero\n  buffer[index++] = 0x00;\n  // Write the options\n  index =\n    index +\n    buffer.write(\n      value.options\n        .split('')\n        .sort()\n        .join(''),\n      index,\n      'utf8'\n    );\n  // Add ending zero\n  buffer[index++] = 0x00;\n  return index;\n};\n\nvar serializeMinMax = function(buffer, key, value, index, isArray) {\n  // Write the type of either min or max key\n  if (value === null) {\n    buffer[index++] = BSON.BSON_DATA_NULL;\n  } else if (value._bsontype === 'MinKey') {\n    buffer[index++] = BSON.BSON_DATA_MIN_KEY;\n  } else {\n    buffer[index++] = BSON.BSON_DATA_MAX_KEY;\n  }\n\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  return index;\n};\n\nvar serializeObjectId = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_OID;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  // Write the objectId into the shared buffer\n  if (typeof value.id === 'string') {\n    buffer.write(value.id, index, 'binary');\n  } else if (value.id && value.id.copy) {\n    value.id.copy(buffer, index, 0, 12);\n  } else {\n    throw new Error('object [' + JSON.stringify(value) + '] is not a valid ObjectId');\n  }\n\n  // Ajust index\n  return index + 12;\n};\n\nvar serializeBuffer = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_BINARY;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Get size of the buffer (current write point)\n  var size = value.length;\n  // Write the size of the string to buffer\n  buffer[index++] = size & 0xff;\n  buffer[index++] = (size >> 8) & 0xff;\n  buffer[index++] = (size >> 16) & 0xff;\n  buffer[index++] = (size >> 24) & 0xff;\n  // Write the default subtype\n  buffer[index++] = BSON.BSON_BINARY_SUBTYPE_DEFAULT;\n  // Copy the content form the binary field to the buffer\n  value.copy(buffer, index, 0, size);\n  // Adjust the index\n  index = index + size;\n  return index;\n};\n\nvar serializeObject = function(\n  buffer,\n  key,\n  value,\n  index,\n  checkKeys,\n  depth,\n  serializeFunctions,\n  ignoreUndefined,\n  isArray,\n  path\n) {\n  for (var i = 0; i < path.length; i++) {\n    if (path[i] === value) throw new Error('cyclic dependency detected');\n  }\n\n  // Push value to stack\n  path.push(value);\n  // Write the type\n  buffer[index++] = Array.isArray(value) ? BSON.BSON_DATA_ARRAY : BSON.BSON_DATA_OBJECT;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  var endIndex = serializeInto(\n    buffer,\n    value,\n    checkKeys,\n    index,\n    depth + 1,\n    serializeFunctions,\n    ignoreUndefined,\n    path\n  );\n  // Pop stack\n  path.pop();\n  // Write size\n  return endIndex;\n};\n\nvar serializeDecimal128 = function(buffer, key, value, index, isArray) {\n  buffer[index++] = BSON.BSON_DATA_DECIMAL128;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the data from the value\n  value.bytes.copy(buffer, index, 0, 16);\n  return index + 16;\n};\n\nvar serializeLong = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = value._bsontype === 'Long' ? BSON.BSON_DATA_LONG : BSON.BSON_DATA_TIMESTAMP;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the date\n  var lowBits = value.getLowBits();\n  var highBits = value.getHighBits();\n  // Encode low bits\n  buffer[index++] = lowBits & 0xff;\n  buffer[index++] = (lowBits >> 8) & 0xff;\n  buffer[index++] = (lowBits >> 16) & 0xff;\n  buffer[index++] = (lowBits >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = highBits & 0xff;\n  buffer[index++] = (highBits >> 8) & 0xff;\n  buffer[index++] = (highBits >> 16) & 0xff;\n  buffer[index++] = (highBits >> 24) & 0xff;\n  return index;\n};\n\nvar serializeInt32 = function(buffer, key, value, index, isArray) {\n  // Set int type 32 bits or less\n  buffer[index++] = BSON.BSON_DATA_INT;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the int value\n  buffer[index++] = value & 0xff;\n  buffer[index++] = (value >> 8) & 0xff;\n  buffer[index++] = (value >> 16) & 0xff;\n  buffer[index++] = (value >> 24) & 0xff;\n  return index;\n};\n\nvar serializeDouble = function(buffer, key, value, index, isArray) {\n  // Encode as double\n  buffer[index++] = BSON.BSON_DATA_NUMBER;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write float\n  writeIEEE754(buffer, value, index, 'little', 52, 8);\n  // Ajust index\n  index = index + 8;\n  return index;\n};\n\nvar serializeFunction = function(buffer, key, value, index, checkKeys, depth, isArray) {\n  buffer[index++] = BSON.BSON_DATA_CODE;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Function string\n  var functionString = normalizedFunctionString(value);\n\n  // Write the string\n  var size = buffer.write(functionString, index + 4, 'utf8') + 1;\n  // Write the size of the string to buffer\n  buffer[index] = size & 0xff;\n  buffer[index + 1] = (size >> 8) & 0xff;\n  buffer[index + 2] = (size >> 16) & 0xff;\n  buffer[index + 3] = (size >> 24) & 0xff;\n  // Update index\n  index = index + 4 + size - 1;\n  // Write zero\n  buffer[index++] = 0;\n  return index;\n};\n\nvar serializeCode = function(\n  buffer,\n  key,\n  value,\n  index,\n  checkKeys,\n  depth,\n  serializeFunctions,\n  ignoreUndefined,\n  isArray\n) {\n  if (value.scope && typeof value.scope === 'object') {\n    // Write the type\n    buffer[index++] = BSON.BSON_DATA_CODE_W_SCOPE;\n    // Number of written bytes\n    var numberOfWrittenBytes = !isArray\n      ? buffer.write(key, index, 'utf8')\n      : buffer.write(key, index, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n\n    // Starting index\n    var startIndex = index;\n\n    // Serialize the function\n    // Get the function string\n    var functionString = typeof value.code === 'string' ? value.code : value.code.toString();\n    // Index adjustment\n    index = index + 4;\n    // Write string into buffer\n    var codeSize = buffer.write(functionString, index + 4, 'utf8') + 1;\n    // Write the size of the string to buffer\n    buffer[index] = codeSize & 0xff;\n    buffer[index + 1] = (codeSize >> 8) & 0xff;\n    buffer[index + 2] = (codeSize >> 16) & 0xff;\n    buffer[index + 3] = (codeSize >> 24) & 0xff;\n    // Write end 0\n    buffer[index + 4 + codeSize - 1] = 0;\n    // Write the\n    index = index + codeSize + 4;\n\n    //\n    // Serialize the scope value\n    var endIndex = serializeInto(\n      buffer,\n      value.scope,\n      checkKeys,\n      index,\n      depth + 1,\n      serializeFunctions,\n      ignoreUndefined\n    );\n    index = endIndex - 1;\n\n    // Writ the total\n    var totalSize = endIndex - startIndex;\n\n    // Write the total size of the object\n    buffer[startIndex++] = totalSize & 0xff;\n    buffer[startIndex++] = (totalSize >> 8) & 0xff;\n    buffer[startIndex++] = (totalSize >> 16) & 0xff;\n    buffer[startIndex++] = (totalSize >> 24) & 0xff;\n    // Write trailing zero\n    buffer[index++] = 0;\n  } else {\n    buffer[index++] = BSON.BSON_DATA_CODE;\n    // Number of written bytes\n    numberOfWrittenBytes = !isArray\n      ? buffer.write(key, index, 'utf8')\n      : buffer.write(key, index, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Function string\n    functionString = value.code.toString();\n    // Write the string\n    var size = buffer.write(functionString, index + 4, 'utf8') + 1;\n    // Write the size of the string to buffer\n    buffer[index] = size & 0xff;\n    buffer[index + 1] = (size >> 8) & 0xff;\n    buffer[index + 2] = (size >> 16) & 0xff;\n    buffer[index + 3] = (size >> 24) & 0xff;\n    // Update index\n    index = index + 4 + size - 1;\n    // Write zero\n    buffer[index++] = 0;\n  }\n\n  return index;\n};\n\nvar serializeBinary = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_BINARY;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Extract the buffer\n  var data = value.value(true);\n  // Calculate size\n  var size = value.position;\n  // Add the deprecated 02 type 4 bytes of size to total\n  if (value.sub_type === Binary.SUBTYPE_BYTE_ARRAY) size = size + 4;\n  // Write the size of the string to buffer\n  buffer[index++] = size & 0xff;\n  buffer[index++] = (size >> 8) & 0xff;\n  buffer[index++] = (size >> 16) & 0xff;\n  buffer[index++] = (size >> 24) & 0xff;\n  // Write the subtype to the buffer\n  buffer[index++] = value.sub_type;\n\n  // If we have binary type 2 the 4 first bytes are the size\n  if (value.sub_type === Binary.SUBTYPE_BYTE_ARRAY) {\n    size = size - 4;\n    buffer[index++] = size & 0xff;\n    buffer[index++] = (size >> 8) & 0xff;\n    buffer[index++] = (size >> 16) & 0xff;\n    buffer[index++] = (size >> 24) & 0xff;\n  }\n\n  // Write the data to the object\n  data.copy(buffer, index, 0, value.position);\n  // Adjust the index\n  index = index + value.position;\n  return index;\n};\n\nvar serializeSymbol = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_SYMBOL;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the string\n  var size = buffer.write(value.value, index + 4, 'utf8') + 1;\n  // Write the size of the string to buffer\n  buffer[index] = size & 0xff;\n  buffer[index + 1] = (size >> 8) & 0xff;\n  buffer[index + 2] = (size >> 16) & 0xff;\n  buffer[index + 3] = (size >> 24) & 0xff;\n  // Update index\n  index = index + 4 + size - 1;\n  // Write zero\n  buffer[index++] = 0x00;\n  return index;\n};\n\nvar serializeDBRef = function(buffer, key, value, index, depth, serializeFunctions, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_OBJECT;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  var startIndex = index;\n  var endIndex;\n\n  // Serialize object\n  if (null != value.db) {\n    endIndex = serializeInto(\n      buffer,\n      {\n        $ref: value.namespace,\n        $id: value.oid,\n        $db: value.db\n      },\n      false,\n      index,\n      depth + 1,\n      serializeFunctions\n    );\n  } else {\n    endIndex = serializeInto(\n      buffer,\n      {\n        $ref: value.namespace,\n        $id: value.oid\n      },\n      false,\n      index,\n      depth + 1,\n      serializeFunctions\n    );\n  }\n\n  // Calculate object size\n  var size = endIndex - startIndex;\n  // Write the size\n  buffer[startIndex++] = size & 0xff;\n  buffer[startIndex++] = (size >> 8) & 0xff;\n  buffer[startIndex++] = (size >> 16) & 0xff;\n  buffer[startIndex++] = (size >> 24) & 0xff;\n  // Set index\n  return endIndex;\n};\n\nvar serializeInto = function serializeInto(\n  buffer,\n  object,\n  checkKeys,\n  startingIndex,\n  depth,\n  serializeFunctions,\n  ignoreUndefined,\n  path\n) {\n  startingIndex = startingIndex || 0;\n  path = path || [];\n\n  // Push the object to the path\n  path.push(object);\n\n  // Start place to serialize into\n  var index = startingIndex + 4;\n  // var self = this;\n\n  // Special case isArray\n  if (Array.isArray(object)) {\n    // Get object keys\n    for (var i = 0; i < object.length; i++) {\n      var key = '' + i;\n      var value = object[i];\n\n      // Is there an override value\n      if (value && value.toBSON) {\n        if (typeof value.toBSON !== 'function') throw new Error('toBSON is not a function');\n        value = value.toBSON();\n      }\n\n      var type = typeof value;\n      if (type === 'string') {\n        index = serializeString(buffer, key, value, index, true);\n      } else if (type === 'number') {\n        index = serializeNumber(buffer, key, value, index, true);\n      } else  if(type === 'bigint') {\n        throw new TypeError('Unsupported type BigInt, please use Decimal128');\n      } else if (type === 'boolean') {\n        index = serializeBoolean(buffer, key, value, index, true);\n      } else if (value instanceof Date || isDate(value)) {\n        index = serializeDate(buffer, key, value, index, true);\n      } else if (value === undefined) {\n        index = serializeNull(buffer, key, value, index, true);\n      } else if (value === null) {\n        index = serializeNull(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'ObjectID' || value['_bsontype'] === 'ObjectId') {\n        index = serializeObjectId(buffer, key, value, index, true);\n      } else if (Buffer.isBuffer(value)) {\n        index = serializeBuffer(buffer, key, value, index, true);\n      } else if (value instanceof RegExp || isRegExp(value)) {\n        index = serializeRegExp(buffer, key, value, index, true);\n      } else if (type === 'object' && value['_bsontype'] == null) {\n        index = serializeObject(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined,\n          true,\n          path\n        );\n      } else if (type === 'object' && value['_bsontype'] === 'Decimal128') {\n        index = serializeDecimal128(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Timestamp') {\n        index = serializeLong(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'Double') {\n        index = serializeDouble(buffer, key, value, index, true);\n      } else if (typeof value === 'function' && serializeFunctions) {\n        index = serializeFunction(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          true\n        );\n      } else if (value['_bsontype'] === 'Code') {\n        index = serializeCode(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined,\n          true\n        );\n      } else if (value['_bsontype'] === 'Binary') {\n        index = serializeBinary(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'Symbol') {\n        index = serializeSymbol(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'DBRef') {\n        index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions, true);\n      } else if (value['_bsontype'] === 'BSONRegExp') {\n        index = serializeBSONRegExp(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'Int32') {\n        index = serializeInt32(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n        index = serializeMinMax(buffer, key, value, index, true);\n      } else if (typeof value['_bsontype'] !== 'undefined') {\n        throw new TypeError('Unrecognized or invalid _bsontype: ' + value['_bsontype']);\n      }\n    }\n  } else if (object instanceof Map) {\n    var iterator = object.entries();\n    var done = false;\n\n    while (!done) {\n      // Unpack the next entry\n      var entry = iterator.next();\n      done = entry.done;\n      // Are we done, then skip and terminate\n      if (done) continue;\n\n      // Get the entry values\n      key = entry.value[0];\n      value = entry.value[1];\n\n      // Check the type of the value\n      type = typeof value;\n\n      // Check the key and throw error if it's illegal\n      if (typeof key === 'string' && ignoreKeys.indexOf(key) === -1) {\n        if (key.match(regexp) != null) {\n          // The BSON spec doesn't allow keys with null bytes because keys are\n          // null-terminated.\n          throw Error('key ' + key + ' must not contain null bytes');\n        }\n\n        if (checkKeys) {\n          if ('$' === key[0]) {\n            throw Error('key ' + key + \" must not start with '$'\");\n          } else if (~key.indexOf('.')) {\n            throw Error('key ' + key + \" must not contain '.'\");\n          }\n        }\n      }\n\n      if (type === 'string') {\n        index = serializeString(buffer, key, value, index);\n      } else if (type === 'number') {\n        index = serializeNumber(buffer, key, value, index);\n      } else if(type === 'bigint') {\n        throw new TypeError('Unsupported type BigInt, please use Decimal128');\n      } else if (type === 'boolean') {\n        index = serializeBoolean(buffer, key, value, index);\n      } else if (value instanceof Date || isDate(value)) {\n        index = serializeDate(buffer, key, value, index);\n        // } else if (value === undefined && ignoreUndefined === true) {\n      } else if (value === null || (value === undefined && ignoreUndefined === false)) {\n        index = serializeNull(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'ObjectID' || value['_bsontype'] === 'ObjectId') {\n        index = serializeObjectId(buffer, key, value, index);\n      } else if (Buffer.isBuffer(value)) {\n        index = serializeBuffer(buffer, key, value, index);\n      } else if (value instanceof RegExp || isRegExp(value)) {\n        index = serializeRegExp(buffer, key, value, index);\n      } else if (type === 'object' && value['_bsontype'] == null) {\n        index = serializeObject(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined,\n          false,\n          path\n        );\n      } else if (type === 'object' && value['_bsontype'] === 'Decimal128') {\n        index = serializeDecimal128(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Timestamp') {\n        index = serializeLong(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Double') {\n        index = serializeDouble(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Code') {\n        index = serializeCode(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined\n        );\n      } else if (typeof value === 'function' && serializeFunctions) {\n        index = serializeFunction(buffer, key, value, index, checkKeys, depth, serializeFunctions);\n      } else if (value['_bsontype'] === 'Binary') {\n        index = serializeBinary(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Symbol') {\n        index = serializeSymbol(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'DBRef') {\n        index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions);\n      } else if (value['_bsontype'] === 'BSONRegExp') {\n        index = serializeBSONRegExp(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Int32') {\n        index = serializeInt32(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n        index = serializeMinMax(buffer, key, value, index);\n      } else if (typeof value['_bsontype'] !== 'undefined') {\n        throw new TypeError('Unrecognized or invalid _bsontype: ' + value['_bsontype']);\n      }\n    }\n  } else {\n    // Did we provide a custom serialization method\n    if (object.toBSON) {\n      if (typeof object.toBSON !== 'function') throw new Error('toBSON is not a function');\n      object = object.toBSON();\n      if (object != null && typeof object !== 'object')\n        throw new Error('toBSON function did not return an object');\n    }\n\n    // Iterate over all the keys\n    for (key in object) {\n      value = object[key];\n      // Is there an override value\n      if (value && value.toBSON) {\n        if (typeof value.toBSON !== 'function') throw new Error('toBSON is not a function');\n        value = value.toBSON();\n      }\n\n      // Check the type of the value\n      type = typeof value;\n\n      // Check the key and throw error if it's illegal\n      if (typeof key === 'string' && ignoreKeys.indexOf(key) === -1) {\n        if (key.match(regexp) != null) {\n          // The BSON spec doesn't allow keys with null bytes because keys are\n          // null-terminated.\n          throw Error('key ' + key + ' must not contain null bytes');\n        }\n\n        if (checkKeys) {\n          if ('$' === key[0]) {\n            throw Error('key ' + key + \" must not start with '$'\");\n          } else if (~key.indexOf('.')) {\n            throw Error('key ' + key + \" must not contain '.'\");\n          }\n        }\n      }\n\n      if (type === 'string') {\n        index = serializeString(buffer, key, value, index);\n      } else if (type === 'number') {\n        index = serializeNumber(buffer, key, value, index);\n      } else if(type === 'bigint') {\n        throw new TypeError('Unsupported type BigInt, please use Decimal128');\n      } else if (type === 'boolean') {\n        index = serializeBoolean(buffer, key, value, index);\n      } else if (value instanceof Date || isDate(value)) {\n        index = serializeDate(buffer, key, value, index);\n      } else if (value === undefined) {\n        if (ignoreUndefined === false) index = serializeNull(buffer, key, value, index);\n      } else if (value === null) {\n        index = serializeNull(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'ObjectID' || value['_bsontype'] === 'ObjectId') {\n        index = serializeObjectId(buffer, key, value, index);\n      } else if (Buffer.isBuffer(value)) {\n        index = serializeBuffer(buffer, key, value, index);\n      } else if (value instanceof RegExp || isRegExp(value)) {\n        index = serializeRegExp(buffer, key, value, index);\n      } else if (type === 'object' && value['_bsontype'] == null) {\n        index = serializeObject(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined,\n          false,\n          path\n        );\n      } else if (type === 'object' && value['_bsontype'] === 'Decimal128') {\n        index = serializeDecimal128(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Timestamp') {\n        index = serializeLong(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Double') {\n        index = serializeDouble(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Code') {\n        index = serializeCode(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined\n        );\n      } else if (typeof value === 'function' && serializeFunctions) {\n        index = serializeFunction(buffer, key, value, index, checkKeys, depth, serializeFunctions);\n      } else if (value['_bsontype'] === 'Binary') {\n        index = serializeBinary(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Symbol') {\n        index = serializeSymbol(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'DBRef') {\n        index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions);\n      } else if (value['_bsontype'] === 'BSONRegExp') {\n        index = serializeBSONRegExp(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Int32') {\n        index = serializeInt32(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n        index = serializeMinMax(buffer, key, value, index);\n      } else if (typeof value['_bsontype'] !== 'undefined') {\n        throw new TypeError('Unrecognized or invalid _bsontype: ' + value['_bsontype']);\n      }\n    }\n  }\n\n  // Remove the path\n  path.pop();\n\n  // Final padding byte for object\n  buffer[index++] = 0x00;\n\n  // Final size\n  var size = index - startingIndex;\n  // Write the size of the object\n  buffer[startingIndex++] = size & 0xff;\n  buffer[startingIndex++] = (size >> 8) & 0xff;\n  buffer[startingIndex++] = (size >> 16) & 0xff;\n  buffer[startingIndex++] = (size >> 24) & 0xff;\n  return index;\n};\n\nvar BSON = {};\n\n/**\n * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5\n *\n * @ignore\n * @api private\n */\n// var functionCache = (BSON.functionCache = {});\n\n/**\n * Number BSON Type\n *\n * @classconstant BSON_DATA_NUMBER\n **/\nBSON.BSON_DATA_NUMBER = 1;\n/**\n * String BSON Type\n *\n * @classconstant BSON_DATA_STRING\n **/\nBSON.BSON_DATA_STRING = 2;\n/**\n * Object BSON Type\n *\n * @classconstant BSON_DATA_OBJECT\n **/\nBSON.BSON_DATA_OBJECT = 3;\n/**\n * Array BSON Type\n *\n * @classconstant BSON_DATA_ARRAY\n **/\nBSON.BSON_DATA_ARRAY = 4;\n/**\n * Binary BSON Type\n *\n * @classconstant BSON_DATA_BINARY\n **/\nBSON.BSON_DATA_BINARY = 5;\n/**\n * ObjectID BSON Type, deprecated\n *\n * @classconstant BSON_DATA_UNDEFINED\n **/\nBSON.BSON_DATA_UNDEFINED = 6;\n/**\n * ObjectID BSON Type\n *\n * @classconstant BSON_DATA_OID\n **/\nBSON.BSON_DATA_OID = 7;\n/**\n * Boolean BSON Type\n *\n * @classconstant BSON_DATA_BOOLEAN\n **/\nBSON.BSON_DATA_BOOLEAN = 8;\n/**\n * Date BSON Type\n *\n * @classconstant BSON_DATA_DATE\n **/\nBSON.BSON_DATA_DATE = 9;\n/**\n * null BSON Type\n *\n * @classconstant BSON_DATA_NULL\n **/\nBSON.BSON_DATA_NULL = 10;\n/**\n * RegExp BSON Type\n *\n * @classconstant BSON_DATA_REGEXP\n **/\nBSON.BSON_DATA_REGEXP = 11;\n/**\n * Code BSON Type\n *\n * @classconstant BSON_DATA_CODE\n **/\nBSON.BSON_DATA_CODE = 13;\n/**\n * Symbol BSON Type\n *\n * @classconstant BSON_DATA_SYMBOL\n **/\nBSON.BSON_DATA_SYMBOL = 14;\n/**\n * Code with Scope BSON Type\n *\n * @classconstant BSON_DATA_CODE_W_SCOPE\n **/\nBSON.BSON_DATA_CODE_W_SCOPE = 15;\n/**\n * 32 bit Integer BSON Type\n *\n * @classconstant BSON_DATA_INT\n **/\nBSON.BSON_DATA_INT = 16;\n/**\n * Timestamp BSON Type\n *\n * @classconstant BSON_DATA_TIMESTAMP\n **/\nBSON.BSON_DATA_TIMESTAMP = 17;\n/**\n * Long BSON Type\n *\n * @classconstant BSON_DATA_LONG\n **/\nBSON.BSON_DATA_LONG = 18;\n/**\n * Long BSON Type\n *\n * @classconstant BSON_DATA_DECIMAL128\n **/\nBSON.BSON_DATA_DECIMAL128 = 19;\n/**\n * MinKey BSON Type\n *\n * @classconstant BSON_DATA_MIN_KEY\n **/\nBSON.BSON_DATA_MIN_KEY = 0xff;\n/**\n * MaxKey BSON Type\n *\n * @classconstant BSON_DATA_MAX_KEY\n **/\nBSON.BSON_DATA_MAX_KEY = 0x7f;\n/**\n * Binary Default Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_DEFAULT\n **/\nBSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;\n/**\n * Binary Function Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_FUNCTION\n **/\nBSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;\n/**\n * Binary Byte Array Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY\n **/\nBSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;\n/**\n * Binary UUID Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_UUID\n **/\nBSON.BSON_BINARY_SUBTYPE_UUID = 3;\n/**\n * Binary MD5 Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_MD5\n **/\nBSON.BSON_BINARY_SUBTYPE_MD5 = 4;\n/**\n * Binary User Defined Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED\n **/\nBSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;\n\n// BSON MAX VALUES\nBSON.BSON_INT32_MAX = 0x7fffffff;\nBSON.BSON_INT32_MIN = -0x80000000;\n\nBSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;\nBSON.BSON_INT64_MIN = -Math.pow(2, 63);\n\n// JS MAX PRECISE VALUES\nBSON.JS_INT_MAX = 0x20000000000000; // Any integer up to 2^53 can be precisely represented by a double.\nBSON.JS_INT_MIN = -0x20000000000000; // Any integer down to -2^53 can be precisely represented by a double.\n\n// Internal long versions\n// var JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000); // Any integer up to 2^53 can be precisely represented by a double.\n// var JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000); // Any integer down to -2^53 can be precisely represented by a double.\n\nmodule.exports = serializeInto;\n"],"names":["require$$0","require$$1","require$$2","require$$3","Map"],"mappings":"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"}