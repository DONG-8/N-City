{"version":3,"file":"regexp.js","sources":["../../../../../../../node_modules/bson/lib/bson/regexp.js"],"sourcesContent":["/**\n * A class representation of the BSON RegExp type.\n *\n * @class\n * @return {BSONRegExp} A MinKey instance\n */\nfunction BSONRegExp(pattern, options) {\n  if (!(this instanceof BSONRegExp)) return new BSONRegExp();\n\n  // Execute\n  this._bsontype = 'BSONRegExp';\n  this.pattern = pattern || '';\n  this.options = options || '';\n\n  // Validate options\n  for (var i = 0; i < this.options.length; i++) {\n    if (\n      !(\n        this.options[i] === 'i' ||\n        this.options[i] === 'm' ||\n        this.options[i] === 'x' ||\n        this.options[i] === 'l' ||\n        this.options[i] === 's' ||\n        this.options[i] === 'u'\n      )\n    ) {\n      throw new Error('the regular expression options [' + this.options[i] + '] is not supported');\n    }\n  }\n}\n\nmodule.exports = BSONRegExp;\nmodule.exports.BSONRegExp = BSONRegExp;\n"],"names":[],"mappings":";;;;;;;;;;AAMA,SAAS,UAAU,CAAC,OAAO,EAAE,OAAO,EAAE;AACtC,EAAE,IAAI,EAAE,IAAI,YAAY,UAAU,CAAC,EAAE,OAAO,IAAI,UAAU,EAAE,CAAC;AAC7D;AACA;AACA,EAAE,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC;AAChC,EAAE,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AAC/B,EAAE,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AAC/B;AACA;AACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAChD,IAAI;AACJ,MAAM;AACN,QAAQ,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG;AAC/B,QAAQ,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG;AAC/B,QAAQ,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG;AAC/B,QAAQ,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG;AAC/B,QAAQ,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG;AAC/B,QAAQ,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG;AAC/B,OAAO;AACP,MAAM;AACN,MAAM,MAAM,IAAI,KAAK,CAAC,kCAAkC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,oBAAoB,CAAC,CAAC;AACnG,KAAK;AACL,GAAG;AACH,CAAC;AACD;UACc,GAAG,WAAW;gBACH,GAAG;;;;;;"}