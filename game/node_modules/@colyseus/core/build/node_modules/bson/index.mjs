import bson$1 from './lib/bson/bson.mjs';
import binary from './lib/bson/binary.mjs';
import code from './lib/bson/code.mjs';
import db_ref from './lib/bson/db_ref.mjs';
import decimal128 from './lib/bson/decimal128.mjs';
import double from './lib/bson/double.mjs';
import int_32 from './lib/bson/int_32.mjs';
import long from './lib/bson/long.mjs';
import map from './lib/bson/map.mjs';
import max_key from './lib/bson/max_key.mjs';
import min_key from './lib/bson/min_key.mjs';
import objectid from './lib/bson/objectid.mjs';
import regexp from './lib/bson/regexp.mjs';
import symbol from './lib/bson/symbol.mjs';
import timestamp from './lib/bson/timestamp.mjs';

// BSON MAX VALUES
bson$1.BSON_INT32_MAX = 0x7fffffff;
bson$1.BSON_INT32_MIN = -0x80000000;

bson$1.BSON_INT64_MAX = Math.pow(2, 63) - 1;
bson$1.BSON_INT64_MIN = -Math.pow(2, 63);

// JS MAX PRECISE VALUES
bson$1.JS_INT_MAX = 0x20000000000000; // Any integer up to 2^53 can be precisely represented by a double.
bson$1.JS_INT_MIN = -0x20000000000000; // Any integer down to -2^53 can be precisely represented by a double.

// Add BSON types to function creation
bson$1.Binary = binary;
bson$1.Code = code;
bson$1.DBRef = db_ref;
bson$1.Decimal128 = decimal128;
bson$1.Double = double;
bson$1.Int32 = int_32;
bson$1.Long = long;
bson$1.Map = map;
bson$1.MaxKey = max_key;
bson$1.MinKey = min_key;
bson$1.ObjectId = objectid;
bson$1.ObjectID = objectid;
bson$1.BSONRegExp = regexp;
bson$1.Symbol = symbol;
bson$1.Timestamp = timestamp;

// Return the BSON
var bson = bson$1;

export default bson;
//# sourceMappingURL=index.mjs.map
