'use strict';

var operation = require('./operation.js');
var command = require('./command.js');
var utils = require('../utils.js');
var write_concern = require('../write_concern.js');

const Aspect = operation.Aspect;

const defineAspects = operation.defineAspects;
const handleCallback = utils.handleCallback;


class RemoveUserOperation extends command {
  constructor(db, username, options) {
    const commandOptions = {};

    const writeConcern = write_concern.fromOptions(options);
    if (writeConcern != null) {
      commandOptions.writeConcern = writeConcern;
    }

    if (options.dbName) {
      commandOptions.dbName = options.dbName;
    }

    // Add maxTimeMS to options if set
    if (typeof options.maxTimeMS === 'number') {
      commandOptions.maxTimeMS = options.maxTimeMS;
    }

    super(db, commandOptions);

    this.username = username;
  }

  _buildCommand() {
    const username = this.username;

    // Build the command to execute
    const command = { dropUser: username };

    return command;
  }

  execute(callback) {
    // Attempt to execute command
    super.execute((err, result) => {
      if (err) return handleCallback(callback, err, null);
      handleCallback(callback, err, result.ok ? true : false);
    });
  }
}

defineAspects(RemoveUserOperation, Aspect.WRITE_OPERATION);

var remove_user = RemoveUserOperation;

module.exports = remove_user;
//# sourceMappingURL=remove_user.js.map
