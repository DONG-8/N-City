{"version":3,"file":"index.js","sources":["../../../../../../../node_modules/mongodb/lib/core/index.js"],"sourcesContent":["'use strict';\n\nlet BSON = require('bson');\nconst require_optional = require('optional-require')(require);\nconst EJSON = require('./utils').retrieveEJSON();\n\ntry {\n  // Attempt to grab the native BSON parser\n  const BSONNative = require_optional('bson-ext');\n  // If we got the native parser, use it instead of the\n  // Javascript one\n  if (BSONNative) {\n    BSON = BSONNative;\n  }\n} catch (err) {} // eslint-disable-line\n\nmodule.exports = {\n  // Errors\n  MongoError: require('./error').MongoError,\n  MongoNetworkError: require('./error').MongoNetworkError,\n  MongoParseError: require('./error').MongoParseError,\n  MongoTimeoutError: require('./error').MongoTimeoutError,\n  MongoServerSelectionError: require('./error').MongoServerSelectionError,\n  MongoWriteConcernError: require('./error').MongoWriteConcernError,\n  // Core\n  Connection: require('./connection/connection'),\n  Server: require('./topologies/server'),\n  ReplSet: require('./topologies/replset'),\n  Mongos: require('./topologies/mongos'),\n  Logger: require('./connection/logger'),\n  Cursor: require('./cursor').CoreCursor,\n  ReadPreference: require('./topologies/read_preference'),\n  Sessions: require('./sessions'),\n  BSON: BSON,\n  EJSON: EJSON,\n  Topology: require('./sdam/topology').Topology,\n  // Raw operations\n  Query: require('./connection/commands').Query,\n  // Auth mechanisms\n  MongoCredentials: require('./auth/mongo_credentials').MongoCredentials,\n  defaultAuthProviders: require('./auth/defaultAuthProviders').defaultAuthProviders,\n  MongoCR: require('./auth/mongocr'),\n  X509: require('./auth/x509'),\n  Plain: require('./auth/plain'),\n  GSSAPI: require('./auth/gssapi'),\n  ScramSHA1: require('./auth/scram').ScramSHA1,\n  ScramSHA256: require('./auth/scram').ScramSHA256,\n  // Utilities\n  parseConnectionString: require('./uri_parser')\n};\n"],"names":["require$$0","require$$1","require","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","require$$20","require$$21"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAI,IAAI,GAAGA,KAAe,CAAC;AAC3B,MAAM,gBAAgB,GAAGC,OAA2B,CAACC,gCAAO,CAAC,CAAC;AAC9D,MAAM,KAAK,GAAGC,KAAkB,CAAC,aAAa,EAAE,CAAC;AACjD;AACA,IAAI;AACJ;AACA,EAAE,MAAM,UAAU,GAAG,gBAAgB,CAAC,UAAU,CAAC,CAAC;AAClD;AACA;AACA,EAAE,IAAI,UAAU,EAAE;AAClB,IAAI,IAAI,GAAG,UAAU,CAAC;AACtB,GAAG;AACH,CAAC,CAAC,OAAO,GAAG,EAAE,EAAE;AAChB;QACc,GAAG;AACjB;AACA,EAAE,UAAU,EAAEC,KAAkB,CAAC,UAAU;AAC3C,EAAE,iBAAiB,EAAEA,KAAkB,CAAC,iBAAiB;AACzD,EAAE,eAAe,EAAEA,KAAkB,CAAC,eAAe;AACrD,EAAE,iBAAiB,EAAEA,KAAkB,CAAC,iBAAiB;AACzD,EAAE,yBAAyB,EAAEA,KAAkB,CAAC,yBAAyB;AACzE,EAAE,sBAAsB,EAAEA,KAAkB,CAAC,sBAAsB;AACnE;AACA,EAAE,UAAU,EAAEC,UAAkC;AAChD,EAAE,MAAM,EAAEC,MAA8B;AACxC,EAAE,OAAO,EAAEC,OAA+B;AAC1C,EAAE,MAAM,EAAEC,MAA8B;AACxC,EAAE,MAAM,EAAEC,MAA8B;AACxC,EAAE,MAAM,EAAEC,MAAmB,CAAC,UAAU;AACxC,EAAE,cAAc,EAAEC,eAAuC;AACzD,EAAE,QAAQ,EAAEC,QAAqB;AACjC,EAAE,IAAI,EAAE,IAAI;AACZ,EAAE,KAAK,EAAE,KAAK;AACd,EAAE,QAAQ,EAAEC,QAA0B,CAAC,QAAQ;AAC/C;AACA,EAAE,KAAK,EAAEC,QAAgC,CAAC,KAAK;AAC/C;AACA,EAAE,gBAAgB,EAAEC,iBAAmC,CAAC,gBAAgB;AACxE,EAAE,oBAAoB,EAAEC,oBAAsC,CAAC,oBAAoB;AACnF,EAAE,OAAO,EAAEC,OAAyB;AACpC,EAAE,IAAI,EAAEC,IAAsB;AAC9B,EAAE,KAAK,EAAEC,KAAuB;AAChC,EAAE,MAAM,EAAEC,MAAwB;AAClC,EAAE,SAAS,EAAEC,KAAuB,CAAC,SAAS;AAC9C,EAAE,WAAW,EAAEA,KAAuB,CAAC,WAAW;AAClD;AACA,EAAE,qBAAqB,EAAEC,UAAuB;AAChD;;;;"}