'use strict';

var operation = require('./operation.js');
var command_v2 = require('./command_v2.js');
var common = require('../core/sdam/common.js');
var index = require('../core/index.js');

const Aspect = operation.Aspect;
const defineAspects = operation.defineAspects;

const serverType = common.serverType;
const ServerType = common.ServerType;
const MongoError = index.MongoError;

class ReIndexOperation extends command_v2 {
  constructor(collection, options) {
    super(collection, options);
    this.collectionName = collection.collectionName;
  }

  execute(server, callback) {
    if (serverType(server) !== ServerType.Standalone) {
      callback(new MongoError(`reIndex can only be executed on standalone servers.`));
      return;
    }
    super.executeCommand(server, { reIndex: this.collectionName }, (err, result) => {
      if (err) {
        callback(err);
        return;
      }
      callback(null, !!result.ok);
    });
  }
}

defineAspects(ReIndexOperation, [Aspect.EXECUTE_WITH_SELECTION]);

var re_index = ReIndexOperation;

module.exports = re_index;
//# sourceMappingURL=re_index.js.map
