{"version":3,"file":"grid_store.js","sources":["../../../../../../../node_modules/mongodb/lib/gridfs/grid_store.js"],"sourcesContent":["'use strict';\n\n/**\n * @fileOverview GridFS is a tool for MongoDB to store files to the database.\n * Because of the restrictions of the object size the database can hold, a\n * facility to split a file into several chunks is needed. The {@link GridStore}\n * class offers a simplified api to interact with files while managing the\n * chunks of split files behind the scenes. More information about GridFS can be\n * found <a href=\"http://www.mongodb.org/display/DOCS/GridFS\">here</a>.\n *\n * @example\n * const MongoClient = require('mongodb').MongoClient;\n * const GridStore = require('mongodb').GridStore;\n * const ObjectID = require('mongodb').ObjectID;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   const db = client.db(dbName);\n *   const gridStore = new GridStore(db, null, \"w\");\n *   gridStore.open(function(err, gridStore) {\n *     gridStore.write(\"hello world!\", function(err, gridStore) {\n *       gridStore.close(function(err, result) {\n *         // Let's read the file using object Id\n *         GridStore.read(db, result._id, function(err, data) {\n *           test.equal('hello world!', data);\n *           client.close();\n *           test.done();\n *         });\n *       });\n *     });\n *   });\n * });\n */\nconst Chunk = require('./chunk');\nconst ObjectID = require('../core').BSON.ObjectID;\nconst ReadPreference = require('../core').ReadPreference;\nconst Buffer = require('safe-buffer').Buffer;\nconst fs = require('fs');\nconst f = require('util').format;\nconst util = require('util');\nconst MongoError = require('../core').MongoError;\nconst inherits = util.inherits;\nconst Duplex = require('stream').Duplex;\nconst shallowClone = require('../utils').shallowClone;\nconst executeLegacyOperation = require('../utils').executeLegacyOperation;\nconst deprecate = require('util').deprecate;\n\nvar REFERENCE_BY_FILENAME = 0,\n  REFERENCE_BY_ID = 1;\n\nconst deprecationFn = deprecate(() => {},\n'GridStore is deprecated, and will be removed in a future version. Please use GridFSBucket instead');\n\n/**\n * Namespace provided by the core module\n * @external Duplex\n */\n\n/**\n * Create a new GridStore instance\n *\n * Modes\n *  - **\"r\"** - read only. This is the default mode.\n *  - **\"w\"** - write in truncate mode. Existing data will be overwritten.\n *\n * @class\n * @param {Db} db A database instance to interact with.\n * @param {object} [id] optional unique id for this file\n * @param {string} [filename] optional filename for this file, no unique constrain on the field\n * @param {string} mode set the mode for this file.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {boolean} [options.fsync=false] **Deprecated** Specify a file sync write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {string} [options.root] Root collection to use. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**.\n * @param {string} [options.content_type] MIME type of the file. Defaults to **{GridStore.DEFAULT_CONTENT_TYPE}**.\n * @param {number} [options.chunk_size=261120] Size for the chunk. Defaults to **{Chunk.DEFAULT_CHUNK_SIZE}**.\n * @param {object} [options.metadata] Arbitrary data the user wants to store.\n * @param {object} [options.promiseLibrary] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @property {number} chunkSize Get the gridstore chunk size.\n * @property {number} md5 The md5 checksum for this file.\n * @property {number} chunkNumber The current chunk number the gridstore has materialized into memory\n * @return {GridStore} a GridStore instance.\n * @deprecated Use GridFSBucket API instead\n */\nvar GridStore = function GridStore(db, id, filename, mode, options) {\n  deprecationFn();\n  if (!(this instanceof GridStore)) return new GridStore(db, id, filename, mode, options);\n  this.db = db;\n\n  // Handle options\n  if (typeof options === 'undefined') options = {};\n  // Handle mode\n  if (typeof mode === 'undefined') {\n    mode = filename;\n    filename = undefined;\n  } else if (typeof mode === 'object') {\n    options = mode;\n    mode = filename;\n    filename = undefined;\n  }\n\n  if (id && id._bsontype === 'ObjectID') {\n    this.referenceBy = REFERENCE_BY_ID;\n    this.fileId = id;\n    this.filename = filename;\n  } else if (typeof filename === 'undefined') {\n    this.referenceBy = REFERENCE_BY_FILENAME;\n    this.filename = id;\n    if (mode.indexOf('w') != null) {\n      this.fileId = new ObjectID();\n    }\n  } else {\n    this.referenceBy = REFERENCE_BY_ID;\n    this.fileId = id;\n    this.filename = filename;\n  }\n\n  // Set up the rest\n  this.mode = mode == null ? 'r' : mode;\n  this.options = options || {};\n\n  // Opened\n  this.isOpen = false;\n\n  // Set the root if overridden\n  this.root =\n    this.options['root'] == null ? GridStore.DEFAULT_ROOT_COLLECTION : this.options['root'];\n  this.position = 0;\n  this.readPreference =\n    this.options.readPreference || db.options.readPreference || ReadPreference.primary;\n  this.writeConcern = _getWriteConcern(db, this.options);\n  // Set default chunk size\n  this.internalChunkSize =\n    this.options['chunkSize'] == null ? Chunk.DEFAULT_CHUNK_SIZE : this.options['chunkSize'];\n\n  // Get the promiseLibrary\n  var promiseLibrary = this.options.promiseLibrary || Promise;\n\n  // Set the promiseLibrary\n  this.promiseLibrary = promiseLibrary;\n\n  Object.defineProperty(this, 'chunkSize', {\n    enumerable: true,\n    get: function() {\n      return this.internalChunkSize;\n    },\n    set: function(value) {\n      if (!(this.mode[0] === 'w' && this.position === 0 && this.uploadDate == null)) {\n        // eslint-disable-next-line no-self-assign\n        this.internalChunkSize = this.internalChunkSize;\n      } else {\n        this.internalChunkSize = value;\n      }\n    }\n  });\n\n  Object.defineProperty(this, 'md5', {\n    enumerable: true,\n    get: function() {\n      return this.internalMd5;\n    }\n  });\n\n  Object.defineProperty(this, 'chunkNumber', {\n    enumerable: true,\n    get: function() {\n      return this.currentChunk && this.currentChunk.chunkNumber\n        ? this.currentChunk.chunkNumber\n        : null;\n    }\n  });\n};\n\n/**\n * The callback format for the Gridstore.open method\n * @callback GridStore~openCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {GridStore} gridStore The GridStore instance if the open method was successful.\n */\n\n/**\n * Opens the file from the database and initialize this object. Also creates a\n * new one if file does not exist.\n *\n * @method\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~openCallback} [callback] this will be called after executing this method\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.open = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  if (this.mode !== 'w' && this.mode !== 'w+' && this.mode !== 'r') {\n    throw MongoError.create({ message: 'Illegal mode ' + this.mode, driver: true });\n  }\n\n  return executeLegacyOperation(this.db.s.topology, open, [this, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar open = function(self, options, callback) {\n  // Get the write concern\n  var writeConcern = _getWriteConcern(self.db, self.options);\n\n  // If we are writing we need to ensure we have the right indexes for md5's\n  if (self.mode === 'w' || self.mode === 'w+') {\n    // Get files collection\n    var collection = self.collection();\n    // Put index on filename\n    collection.ensureIndex([['filename', 1]], writeConcern, function() {\n      // Get chunk collection\n      var chunkCollection = self.chunkCollection();\n      // Make an unique index for compatibility with mongo-cxx-driver:legacy\n      var chunkIndexOptions = shallowClone(writeConcern);\n      chunkIndexOptions.unique = true;\n      // Ensure index on chunk collection\n      chunkCollection.ensureIndex(\n        [\n          ['files_id', 1],\n          ['n', 1]\n        ],\n        chunkIndexOptions,\n        function() {\n          // Open the connection\n          _open(self, writeConcern, function(err, r) {\n            if (err) return callback(err);\n            self.isOpen = true;\n            callback(err, r);\n          });\n        }\n      );\n    });\n  } else {\n    // Open the gridstore\n    _open(self, writeConcern, function(err, r) {\n      if (err) return callback(err);\n      self.isOpen = true;\n      callback(err, r);\n    });\n  }\n};\n\n/**\n * Verify if the file is at EOF.\n *\n * @method\n * @return {boolean} true if the read/write head is at the end of this file.\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.eof = function() {\n  return this.position === this.length ? true : false;\n};\n\n/**\n * The callback result format.\n * @callback GridStore~resultCallback\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object} result The result from the callback.\n */\n\n/**\n * Retrieves a single character from this file.\n *\n * @method\n * @param {GridStore~resultCallback} [callback] this gets called after this method is executed. Passes null to the first parameter and the character read to the second or null to the second if the read/write head is at the end of the file.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.getc = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeLegacyOperation(this.db.s.topology, getc, [this, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar getc = function(self, options, callback) {\n  if (self.eof()) {\n    callback(null, null);\n  } else if (self.currentChunk.eof()) {\n    nthChunk(self, self.currentChunk.chunkNumber + 1, function(err, chunk) {\n      self.currentChunk = chunk;\n      self.position = self.position + 1;\n      callback(err, self.currentChunk.getc());\n    });\n  } else {\n    self.position = self.position + 1;\n    callback(null, self.currentChunk.getc());\n  }\n};\n\n/**\n * Writes a string to the file with a newline character appended at the end if\n * the given string does not have one.\n *\n * @method\n * @param {string} string the string to write.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.puts = function(string, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  var finalString = string.match(/\\n$/) == null ? string + '\\n' : string;\n  return executeLegacyOperation(\n    this.db.s.topology,\n    this.write.bind(this),\n    [finalString, options, callback],\n    { skipSessions: true }\n  );\n};\n\n/**\n * Return a modified Readable stream including a possible transform method.\n *\n * @method\n * @return {GridStoreStream}\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.stream = function() {\n  return new GridStoreStream(this);\n};\n\n/**\n * Writes some data. This method will work properly only if initialized with mode \"w\" or \"w+\".\n *\n * @method\n * @param {(string|Buffer)} data the data to write.\n * @param {boolean} [close] closes this file after writing if set to true.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.write = function write(data, close, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeLegacyOperation(\n    this.db.s.topology,\n    _writeNormal,\n    [this, data, close, options, callback],\n    { skipSessions: true }\n  );\n};\n\n/**\n * Handles the destroy part of a stream\n *\n * @method\n * @result {null}\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.destroy = function destroy() {\n  // close and do not emit any more events. queued data is not sent.\n  if (!this.writable) return;\n  this.readable = false;\n  if (this.writable) {\n    this.writable = false;\n    this._q.length = 0;\n    this.emit('close');\n  }\n};\n\n/**\n * Stores a file from the file system to the GridFS database.\n *\n * @method\n * @param {(string|Buffer|FileHandle)} file the file to store.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.writeFile = function(file, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeLegacyOperation(this.db.s.topology, writeFile, [this, file, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar writeFile = function(self, file, options, callback) {\n  if (typeof file === 'string') {\n    fs.open(file, 'r', function(err, fd) {\n      if (err) return callback(err);\n      self.writeFile(fd, callback);\n    });\n    return;\n  }\n\n  self.open(function(err, self) {\n    if (err) return callback(err, self);\n\n    fs.fstat(file, function(err, stats) {\n      if (err) return callback(err, self);\n\n      var offset = 0;\n      var index = 0;\n\n      // Write a chunk\n      var writeChunk = function() {\n        // Allocate the buffer\n        var _buffer = Buffer.alloc(self.chunkSize);\n        // Read the file\n        fs.read(file, _buffer, 0, _buffer.length, offset, function(err, bytesRead, data) {\n          if (err) return callback(err, self);\n\n          offset = offset + bytesRead;\n\n          // Create a new chunk for the data\n          var chunk = new Chunk(self, { n: index++ }, self.writeConcern);\n          chunk.write(data.slice(0, bytesRead), function(err, chunk) {\n            if (err) return callback(err, self);\n\n            chunk.save({}, function(err) {\n              if (err) return callback(err, self);\n\n              self.position = self.position + bytesRead;\n\n              // Point to current chunk\n              self.currentChunk = chunk;\n\n              if (offset >= stats.size) {\n                fs.close(file, function(err) {\n                  if (err) return callback(err);\n\n                  self.close(function(err) {\n                    if (err) return callback(err, self);\n                    return callback(null, self);\n                  });\n                });\n              } else {\n                return process.nextTick(writeChunk);\n              }\n            });\n          });\n        });\n      };\n\n      // Process the first write\n      process.nextTick(writeChunk);\n    });\n  });\n};\n\n/**\n * Saves this file to the database. This will overwrite the old entry if it\n * already exists. This will work properly only if mode was initialized to\n * \"w\" or \"w+\".\n *\n * @method\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.close = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeLegacyOperation(this.db.s.topology, close, [this, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar close = function(self, options, callback) {\n  if (self.mode[0] === 'w') {\n    // Set up options\n    options = Object.assign({}, self.writeConcern, options);\n\n    if (self.currentChunk != null && self.currentChunk.position > 0) {\n      self.currentChunk.save({}, function(err) {\n        if (err && typeof callback === 'function') return callback(err);\n\n        self.collection(function(err, files) {\n          if (err && typeof callback === 'function') return callback(err);\n\n          // Build the mongo object\n          if (self.uploadDate != null) {\n            buildMongoObject(self, function(err, mongoObject) {\n              if (err) {\n                if (typeof callback === 'function') return callback(err);\n                else throw err;\n              }\n\n              files.save(mongoObject, options, function(err) {\n                if (typeof callback === 'function') callback(err, mongoObject);\n              });\n            });\n          } else {\n            self.uploadDate = new Date();\n            buildMongoObject(self, function(err, mongoObject) {\n              if (err) {\n                if (typeof callback === 'function') return callback(err);\n                else throw err;\n              }\n\n              files.save(mongoObject, options, function(err) {\n                if (typeof callback === 'function') callback(err, mongoObject);\n              });\n            });\n          }\n        });\n      });\n    } else {\n      self.collection(function(err, files) {\n        if (err && typeof callback === 'function') return callback(err);\n\n        self.uploadDate = new Date();\n        buildMongoObject(self, function(err, mongoObject) {\n          if (err) {\n            if (typeof callback === 'function') return callback(err);\n            else throw err;\n          }\n\n          files.save(mongoObject, options, function(err) {\n            if (typeof callback === 'function') callback(err, mongoObject);\n          });\n        });\n      });\n    }\n  } else if (self.mode[0] === 'r') {\n    if (typeof callback === 'function') callback(null, null);\n  } else {\n    if (typeof callback === 'function')\n      callback(MongoError.create({ message: f('Illegal mode %s', self.mode), driver: true }));\n  }\n};\n\n/**\n * The collection callback format.\n * @callback GridStore~collectionCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection} collection The collection from the command execution.\n */\n\n/**\n * Retrieve this file's chunks collection.\n *\n * @method\n * @param {GridStore~collectionCallback} callback the command callback.\n * @return {Collection}\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.chunkCollection = function(callback) {\n  if (typeof callback === 'function') return this.db.collection(this.root + '.chunks', callback);\n  return this.db.collection(this.root + '.chunks');\n};\n\n/**\n * Deletes all the chunks of this file in the database.\n *\n * @method\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.unlink = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeLegacyOperation(this.db.s.topology, unlink, [this, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar unlink = function(self, options, callback) {\n  deleteChunks(self, function(err) {\n    if (err !== null) {\n      err.message = 'at deleteChunks: ' + err.message;\n      return callback(err);\n    }\n\n    self.collection(function(err, collection) {\n      if (err !== null) {\n        err.message = 'at collection: ' + err.message;\n        return callback(err);\n      }\n\n      collection.remove({ _id: self.fileId }, self.writeConcern, function(err) {\n        callback(err, self);\n      });\n    });\n  });\n};\n\n/**\n * Retrieves the file collection associated with this object.\n *\n * @method\n * @param {GridStore~collectionCallback} callback the command callback.\n * @return {Collection}\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.collection = function(callback) {\n  if (typeof callback === 'function') this.db.collection(this.root + '.files', callback);\n  return this.db.collection(this.root + '.files');\n};\n\n/**\n * The readlines callback format.\n * @callback GridStore~readlinesCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {string[]} strings The array of strings returned.\n */\n\n/**\n * Read the entire file as a list of strings splitting by the provided separator.\n *\n * @method\n * @param {string} [separator] The character to be recognized as the newline separator.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~readlinesCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.readlines = function(separator, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  separator = args.length ? args.shift() : '\\n';\n  separator = separator || '\\n';\n  options = args.length ? args.shift() : {};\n\n  return executeLegacyOperation(\n    this.db.s.topology,\n    readlines,\n    [this, separator, options, callback],\n    { skipSessions: true }\n  );\n};\n\nvar readlines = function(self, separator, options, callback) {\n  self.read(function(err, data) {\n    if (err) return callback(err);\n\n    var items = data.toString().split(separator);\n    items = items.length > 0 ? items.splice(0, items.length - 1) : [];\n    for (var i = 0; i < items.length; i++) {\n      items[i] = items[i] + separator;\n    }\n\n    callback(null, items);\n  });\n};\n\n/**\n * Deletes all the chunks of this file in the database if mode was set to \"w\" or\n * \"w+\" and resets the read/write head to the initial position.\n *\n * @method\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.rewind = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeLegacyOperation(this.db.s.topology, rewind, [this, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar rewind = function(self, options, callback) {\n  if (self.currentChunk.chunkNumber !== 0) {\n    if (self.mode[0] === 'w') {\n      deleteChunks(self, function(err) {\n        if (err) return callback(err);\n        self.currentChunk = new Chunk(self, { n: 0 }, self.writeConcern);\n        self.position = 0;\n        callback(null, self);\n      });\n    } else {\n      self.currentChunk(0, function(err, chunk) {\n        if (err) return callback(err);\n        self.currentChunk = chunk;\n        self.currentChunk.rewind();\n        self.position = 0;\n        callback(null, self);\n      });\n    }\n  } else {\n    self.currentChunk.rewind();\n    self.position = 0;\n    callback(null, self);\n  }\n};\n\n/**\n * The read callback format.\n * @callback GridStore~readCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Buffer} data The data read from the GridStore object\n */\n\n/**\n * Retrieves the contents of this file and advances the read/write head. Works with Buffers only.\n *\n * There are 3 signatures for this method:\n *\n * (callback)\n * (length, callback)\n * (length, buffer, callback)\n *\n * @method\n * @param {number} [length] the number of characters to read. Reads all the characters from the read/write head to the EOF if not specified.\n * @param {(string|Buffer)} [buffer] a string to hold temporary data. This is used for storing the string data read so far when recursively calling this method.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~readCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.read = function(length, buffer, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  length = args.length ? args.shift() : null;\n  buffer = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : {};\n\n  return executeLegacyOperation(\n    this.db.s.topology,\n    read,\n    [this, length, buffer, options, callback],\n    { skipSessions: true }\n  );\n};\n\nvar read = function(self, length, buffer, options, callback) {\n  // The data is a c-terminated string and thus the length - 1\n  var finalLength = length == null ? self.length - self.position : length;\n  var finalBuffer = buffer == null ? Buffer.alloc(finalLength) : buffer;\n  // Add a index to buffer to keep track of writing position or apply current index\n  finalBuffer._index = buffer != null && buffer._index != null ? buffer._index : 0;\n\n  if (self.currentChunk.length() - self.currentChunk.position + finalBuffer._index >= finalLength) {\n    var slice = self.currentChunk.readSlice(finalLength - finalBuffer._index);\n    // Copy content to final buffer\n    slice.copy(finalBuffer, finalBuffer._index);\n    // Update internal position\n    self.position = self.position + finalBuffer.length;\n    // Check if we don't have a file at all\n    if (finalLength === 0 && finalBuffer.length === 0)\n      return callback(MongoError.create({ message: 'File does not exist', driver: true }), null);\n    // Else return data\n    return callback(null, finalBuffer);\n  }\n\n  // Read the next chunk\n  slice = self.currentChunk.readSlice(self.currentChunk.length() - self.currentChunk.position);\n  // Copy content to final buffer\n  slice.copy(finalBuffer, finalBuffer._index);\n  // Update index position\n  finalBuffer._index += slice.length;\n\n  // Load next chunk and read more\n  nthChunk(self, self.currentChunk.chunkNumber + 1, function(err, chunk) {\n    if (err) return callback(err);\n\n    if (chunk.length() > 0) {\n      self.currentChunk = chunk;\n      self.read(length, finalBuffer, callback);\n    } else {\n      if (finalBuffer._index > 0) {\n        callback(null, finalBuffer);\n      } else {\n        callback(\n          MongoError.create({\n            message: 'no chunks found for file, possibly corrupt',\n            driver: true\n          }),\n          null\n        );\n      }\n    }\n  });\n};\n\n/**\n * The tell callback format.\n * @callback GridStore~tellCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {number} position The current read position in the GridStore.\n */\n\n/**\n * Retrieves the position of the read/write head of this file.\n *\n * @method\n * @param {number} [length] the number of characters to read. Reads all the characters from the read/write head to the EOF if not specified.\n * @param {(string|Buffer)} [buffer] a string to hold temporary data. This is used for storing the string data read so far when recursively calling this method.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~tellCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.tell = function(callback) {\n  var self = this;\n  // We provided a callback leg\n  if (typeof callback === 'function') return callback(null, this.position);\n  // Return promise\n  return new self.promiseLibrary(function(resolve) {\n    resolve(self.position);\n  });\n};\n\n/**\n * The tell callback format.\n * @callback GridStore~gridStoreCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {GridStore} gridStore The gridStore.\n */\n\n/**\n * Moves the read/write head to a new location.\n *\n * There are 3 signatures for this method\n *\n * Seek Location Modes\n *  - **GridStore.IO_SEEK_SET**, **(default)** set the position from the start of the file.\n *  - **GridStore.IO_SEEK_CUR**, set the position from the current position in the file.\n *  - **GridStore.IO_SEEK_END**, set the position from the end of the file.\n *\n * @method\n * @param {number} [position] the position to seek to\n * @param {number} [seekLocation] seek mode. Use one of the Seek Location modes.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~gridStoreCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.seek = function(position, seekLocation, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  seekLocation = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : {};\n\n  return executeLegacyOperation(\n    this.db.s.topology,\n    seek,\n    [this, position, seekLocation, options, callback],\n    { skipSessions: true }\n  );\n};\n\nvar seek = function(self, position, seekLocation, options, callback) {\n  // Seek only supports read mode\n  if (self.mode !== 'r') {\n    return callback(\n      MongoError.create({ message: 'seek is only supported for mode r', driver: true })\n    );\n  }\n\n  var seekLocationFinal = seekLocation == null ? GridStore.IO_SEEK_SET : seekLocation;\n  var finalPosition = position;\n  var targetPosition = 0;\n\n  // Calculate the position\n  if (seekLocationFinal === GridStore.IO_SEEK_CUR) {\n    targetPosition = self.position + finalPosition;\n  } else if (seekLocationFinal === GridStore.IO_SEEK_END) {\n    targetPosition = self.length + finalPosition;\n  } else {\n    targetPosition = finalPosition;\n  }\n\n  // Get the chunk\n  var newChunkNumber = Math.floor(targetPosition / self.chunkSize);\n  var seekChunk = function() {\n    nthChunk(self, newChunkNumber, function(err, chunk) {\n      if (err) return callback(err, null);\n      if (chunk == null) return callback(new Error('no chunk found'));\n\n      // Set the current chunk\n      self.currentChunk = chunk;\n      self.position = targetPosition;\n      self.currentChunk.position = self.position % self.chunkSize;\n      callback(err, self);\n    });\n  };\n\n  seekChunk();\n};\n\n/**\n * @ignore\n */\nvar _open = function(self, options, callback) {\n  var collection = self.collection();\n  // Create the query\n  var query =\n    self.referenceBy === REFERENCE_BY_ID ? { _id: self.fileId } : { filename: self.filename };\n  query = null == self.fileId && self.filename == null ? null : query;\n  options.readPreference = self.readPreference;\n\n  // Fetch the chunks\n  if (query != null) {\n    collection.findOne(query, options, function(err, doc) {\n      if (err) {\n        return error(err);\n      }\n\n      // Check if the collection for the files exists otherwise prepare the new one\n      if (doc != null) {\n        self.fileId = doc._id;\n        // Prefer a new filename over the existing one if this is a write\n        self.filename =\n          self.mode === 'r' || self.filename === undefined ? doc.filename : self.filename;\n        self.contentType = doc.contentType;\n        self.internalChunkSize = doc.chunkSize;\n        self.uploadDate = doc.uploadDate;\n        self.aliases = doc.aliases;\n        self.length = doc.length;\n        self.metadata = doc.metadata;\n        self.internalMd5 = doc.md5;\n      } else if (self.mode !== 'r') {\n        self.fileId = self.fileId == null ? new ObjectID() : self.fileId;\n        self.contentType = GridStore.DEFAULT_CONTENT_TYPE;\n        self.internalChunkSize =\n          self.internalChunkSize == null ? Chunk.DEFAULT_CHUNK_SIZE : self.internalChunkSize;\n        self.length = 0;\n      } else {\n        self.length = 0;\n        var txtId = self.fileId._bsontype === 'ObjectID' ? self.fileId.toHexString() : self.fileId;\n        return error(\n          MongoError.create({\n            message: f(\n              'file with id %s not opened for writing',\n              self.referenceBy === REFERENCE_BY_ID ? txtId : self.filename\n            ),\n            driver: true\n          }),\n          self\n        );\n      }\n\n      // Process the mode of the object\n      if (self.mode === 'r') {\n        nthChunk(self, 0, options, function(err, chunk) {\n          if (err) return error(err);\n          self.currentChunk = chunk;\n          self.position = 0;\n          callback(null, self);\n        });\n      } else if (self.mode === 'w' && doc) {\n        // Delete any existing chunks\n        deleteChunks(self, options, function(err) {\n          if (err) return error(err);\n          self.currentChunk = new Chunk(self, { n: 0 }, self.writeConcern);\n          self.contentType =\n            self.options['content_type'] == null ? self.contentType : self.options['content_type'];\n          self.internalChunkSize =\n            self.options['chunk_size'] == null\n              ? self.internalChunkSize\n              : self.options['chunk_size'];\n          self.metadata =\n            self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n          self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n          self.position = 0;\n          callback(null, self);\n        });\n      } else if (self.mode === 'w') {\n        self.currentChunk = new Chunk(self, { n: 0 }, self.writeConcern);\n        self.contentType =\n          self.options['content_type'] == null ? self.contentType : self.options['content_type'];\n        self.internalChunkSize =\n          self.options['chunk_size'] == null ? self.internalChunkSize : self.options['chunk_size'];\n        self.metadata = self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n        self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n        self.position = 0;\n        callback(null, self);\n      } else if (self.mode === 'w+') {\n        nthChunk(self, lastChunkNumber(self), options, function(err, chunk) {\n          if (err) return error(err);\n          // Set the current chunk\n          self.currentChunk = chunk == null ? new Chunk(self, { n: 0 }, self.writeConcern) : chunk;\n          self.currentChunk.position = self.currentChunk.data.length();\n          self.metadata =\n            self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n          self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n          self.position = self.length;\n          callback(null, self);\n        });\n      }\n    });\n  } else {\n    // Write only mode\n    self.fileId = null == self.fileId ? new ObjectID() : self.fileId;\n    self.contentType = GridStore.DEFAULT_CONTENT_TYPE;\n    self.internalChunkSize =\n      self.internalChunkSize == null ? Chunk.DEFAULT_CHUNK_SIZE : self.internalChunkSize;\n    self.length = 0;\n\n    // No file exists set up write mode\n    if (self.mode === 'w') {\n      // Delete any existing chunks\n      deleteChunks(self, options, function(err) {\n        if (err) return error(err);\n        self.currentChunk = new Chunk(self, { n: 0 }, self.writeConcern);\n        self.contentType =\n          self.options['content_type'] == null ? self.contentType : self.options['content_type'];\n        self.internalChunkSize =\n          self.options['chunk_size'] == null ? self.internalChunkSize : self.options['chunk_size'];\n        self.metadata = self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n        self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n        self.position = 0;\n        callback(null, self);\n      });\n    } else if (self.mode === 'w+') {\n      nthChunk(self, lastChunkNumber(self), options, function(err, chunk) {\n        if (err) return error(err);\n        // Set the current chunk\n        self.currentChunk = chunk == null ? new Chunk(self, { n: 0 }, self.writeConcern) : chunk;\n        self.currentChunk.position = self.currentChunk.data.length();\n        self.metadata = self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n        self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n        self.position = self.length;\n        callback(null, self);\n      });\n    }\n  }\n\n  // only pass error to callback once\n  function error(err) {\n    if (error.err) return;\n    callback((error.err = err));\n  }\n};\n\n/**\n * @ignore\n */\nvar writeBuffer = function(self, buffer, close, callback) {\n  if (typeof close === 'function') {\n    callback = close;\n    close = null;\n  }\n  var finalClose = typeof close === 'boolean' ? close : false;\n\n  if (self.mode !== 'w') {\n    callback(\n      MongoError.create({\n        message: f(\n          'file with id %s not opened for writing',\n          self.referenceBy === REFERENCE_BY_ID ? self.referenceBy : self.filename\n        ),\n        driver: true\n      }),\n      null\n    );\n  } else {\n    if (self.currentChunk.position + buffer.length >= self.chunkSize) {\n      // Write out the current Chunk and then keep writing until we have less data left than a chunkSize left\n      // to a new chunk (recursively)\n      var previousChunkNumber = self.currentChunk.chunkNumber;\n      var leftOverDataSize = self.chunkSize - self.currentChunk.position;\n      var firstChunkData = buffer.slice(0, leftOverDataSize);\n      var leftOverData = buffer.slice(leftOverDataSize);\n      // A list of chunks to write out\n      var chunksToWrite = [self.currentChunk.write(firstChunkData)];\n      // If we have more data left than the chunk size let's keep writing new chunks\n      while (leftOverData.length >= self.chunkSize) {\n        // Create a new chunk and write to it\n        var newChunk = new Chunk(self, { n: previousChunkNumber + 1 }, self.writeConcern);\n        firstChunkData = leftOverData.slice(0, self.chunkSize);\n        leftOverData = leftOverData.slice(self.chunkSize);\n        // Update chunk number\n        previousChunkNumber = previousChunkNumber + 1;\n        // Write data\n        newChunk.write(firstChunkData);\n        // Push chunk to save list\n        chunksToWrite.push(newChunk);\n      }\n\n      // Set current chunk with remaining data\n      self.currentChunk = new Chunk(self, { n: previousChunkNumber + 1 }, self.writeConcern);\n      // If we have left over data write it\n      if (leftOverData.length > 0) self.currentChunk.write(leftOverData);\n\n      // Update the position for the gridstore\n      self.position = self.position + buffer.length;\n      // Total number of chunks to write\n      var numberOfChunksToWrite = chunksToWrite.length;\n\n      for (var i = 0; i < chunksToWrite.length; i++) {\n        chunksToWrite[i].save({}, function(err) {\n          if (err) return callback(err);\n\n          numberOfChunksToWrite = numberOfChunksToWrite - 1;\n\n          if (numberOfChunksToWrite <= 0) {\n            // We care closing the file before returning\n            if (finalClose) {\n              return self.close(function(err) {\n                callback(err, self);\n              });\n            }\n\n            // Return normally\n            return callback(null, self);\n          }\n        });\n      }\n    } else {\n      // Update the position for the gridstore\n      self.position = self.position + buffer.length;\n      // We have less data than the chunk size just write it and callback\n      self.currentChunk.write(buffer);\n      // We care closing the file before returning\n      if (finalClose) {\n        return self.close(function(err) {\n          callback(err, self);\n        });\n      }\n      // Return normally\n      return callback(null, self);\n    }\n  }\n};\n\n/**\n * Creates a mongoDB object representation of this object.\n *\n *        <pre><code>\n *        {\n *          '_id' : , // {number} id for this file\n *          'filename' : , // {string} name for this file\n *          'contentType' : , // {string} mime type for this file\n *          'length' : , // {number} size of this file?\n *          'chunksize' : , // {number} chunk size used by this file\n *          'uploadDate' : , // {Date}\n *          'aliases' : , // {array of string}\n *          'metadata' : , // {string}\n *        }\n *        </code></pre>\n *\n * @ignore\n */\nvar buildMongoObject = function(self, callback) {\n  // Calcuate the length\n  var mongoObject = {\n    _id: self.fileId,\n    filename: self.filename,\n    contentType: self.contentType,\n    length: self.position ? self.position : 0,\n    chunkSize: self.chunkSize,\n    uploadDate: self.uploadDate,\n    aliases: self.aliases,\n    metadata: self.metadata\n  };\n\n  var md5Command = { filemd5: self.fileId, root: self.root };\n  self.db.command(md5Command, function(err, results) {\n    if (err) return callback(err);\n\n    mongoObject.md5 = results.md5;\n    callback(null, mongoObject);\n  });\n};\n\n/**\n * Gets the nth chunk of this file.\n * @ignore\n */\nvar nthChunk = function(self, chunkNumber, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || self.writeConcern;\n  options.readPreference = self.readPreference;\n  // Get the nth chunk\n  self\n    .chunkCollection()\n    .findOne({ files_id: self.fileId, n: chunkNumber }, options, function(err, chunk) {\n      if (err) return callback(err);\n\n      var finalChunk = chunk == null ? {} : chunk;\n      callback(null, new Chunk(self, finalChunk, self.writeConcern));\n    });\n};\n\n/**\n * @ignore\n */\nvar lastChunkNumber = function(self) {\n  return Math.floor((self.length ? self.length - 1 : 0) / self.chunkSize);\n};\n\n/**\n * Deletes all the chunks of this file in the database.\n *\n * @ignore\n */\nvar deleteChunks = function(self, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || self.writeConcern;\n\n  if (self.fileId != null) {\n    self.chunkCollection().remove({ files_id: self.fileId }, options, function(err) {\n      if (err) return callback(err, false);\n      callback(null, true);\n    });\n  } else {\n    callback(null, true);\n  }\n};\n\n/**\n * The collection to be used for holding the files and chunks collection.\n *\n * @classconstant DEFAULT_ROOT_COLLECTION\n */\nGridStore.DEFAULT_ROOT_COLLECTION = 'fs';\n\n/**\n * Default file mime type\n *\n * @classconstant DEFAULT_CONTENT_TYPE\n */\nGridStore.DEFAULT_CONTENT_TYPE = 'binary/octet-stream';\n\n/**\n * Seek mode where the given length is absolute.\n *\n * @classconstant IO_SEEK_SET\n */\nGridStore.IO_SEEK_SET = 0;\n\n/**\n * Seek mode where the given length is an offset to the current read/write head.\n *\n * @classconstant IO_SEEK_CUR\n */\nGridStore.IO_SEEK_CUR = 1;\n\n/**\n * Seek mode where the given length is an offset to the end of the file.\n *\n * @classconstant IO_SEEK_END\n */\nGridStore.IO_SEEK_END = 2;\n\n/**\n * Checks if a file exists in the database.\n *\n * @method\n * @static\n * @param {Db} db the database to query.\n * @param {string} name The name of the file to look for.\n * @param {string} [rootCollection] The root collection that holds the files and chunks collection. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**.\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.promiseLibrary] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] result from exists.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.exist = function(db, fileIdObject, rootCollection, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  rootCollection = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : {};\n  options = options || {};\n\n  return executeLegacyOperation(\n    db.s.topology,\n    exists,\n    [db, fileIdObject, rootCollection, options, callback],\n    { skipSessions: true }\n  );\n};\n\nvar exists = function(db, fileIdObject, rootCollection, options, callback) {\n  // Establish read preference\n  var readPreference = options.readPreference || ReadPreference.PRIMARY;\n  // Fetch collection\n  var rootCollectionFinal =\n    rootCollection != null ? rootCollection : GridStore.DEFAULT_ROOT_COLLECTION;\n  db.collection(rootCollectionFinal + '.files', function(err, collection) {\n    if (err) return callback(err);\n\n    // Build query\n    var query =\n      typeof fileIdObject === 'string' ||\n      Object.prototype.toString.call(fileIdObject) === '[object RegExp]'\n        ? { filename: fileIdObject }\n        : { _id: fileIdObject }; // Attempt to locate file\n\n    // We have a specific query\n    if (\n      fileIdObject != null &&\n      typeof fileIdObject === 'object' &&\n      Object.prototype.toString.call(fileIdObject) !== '[object RegExp]'\n    ) {\n      query = fileIdObject;\n    }\n\n    // Check if the entry exists\n    collection.findOne(query, { readPreference: readPreference }, function(err, item) {\n      if (err) return callback(err);\n      callback(null, item == null ? false : true);\n    });\n  });\n};\n\n/**\n * Gets the list of files stored in the GridFS.\n *\n * @method\n * @static\n * @param {Db} db the database to query.\n * @param {string} [rootCollection] The root collection that holds the files and chunks collection. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**.\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.promiseLibrary] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] result from exists.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.list = function(db, rootCollection, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  rootCollection = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : {};\n  options = options || {};\n\n  return executeLegacyOperation(db.s.topology, list, [db, rootCollection, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar list = function(db, rootCollection, options, callback) {\n  // Ensure we have correct values\n  if (rootCollection != null && typeof rootCollection === 'object') {\n    options = rootCollection;\n    rootCollection = null;\n  }\n\n  // Establish read preference\n  var readPreference = options.readPreference || ReadPreference.primary;\n  // Check if we are returning by id not filename\n  var byId = options['id'] != null ? options['id'] : false;\n  // Fetch item\n  var rootCollectionFinal =\n    rootCollection != null ? rootCollection : GridStore.DEFAULT_ROOT_COLLECTION;\n  var items = [];\n  db.collection(rootCollectionFinal + '.files', function(err, collection) {\n    if (err) return callback(err);\n\n    collection.find({}, { readPreference: readPreference }, function(err, cursor) {\n      if (err) return callback(err);\n\n      cursor.each(function(err, item) {\n        if (item != null) {\n          items.push(byId ? item._id : item.filename);\n        } else {\n          callback(err, items);\n        }\n      });\n    });\n  });\n};\n\n/**\n * Reads the contents of a file.\n *\n * This method has the following signatures\n *\n * (db, name, callback)\n * (db, name, length, callback)\n * (db, name, length, offset, callback)\n * (db, name, length, offset, options, callback)\n *\n * @method\n * @static\n * @param {Db} db the database to query.\n * @param {string} name The name of the file.\n * @param {number} [length] The size of data to read.\n * @param {number} [offset] The offset from the head of the file of which to start reading from.\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.promiseLibrary] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~readCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.read = function(db, name, length, offset, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  length = args.length ? args.shift() : null;\n  offset = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : null;\n  options = options || {};\n\n  return executeLegacyOperation(\n    db.s.topology,\n    readStatic,\n    [db, name, length, offset, options, callback],\n    { skipSessions: true }\n  );\n};\n\nvar readStatic = function(db, name, length, offset, options, callback) {\n  new GridStore(db, name, 'r', options).open(function(err, gridStore) {\n    if (err) return callback(err);\n    // Make sure we are not reading out of bounds\n    if (offset && offset >= gridStore.length)\n      return callback('offset larger than size of file', null);\n    if (length && length > gridStore.length)\n      return callback('length is larger than the size of the file', null);\n    if (offset && length && offset + length > gridStore.length)\n      return callback('offset and length is larger than the size of the file', null);\n\n    if (offset != null) {\n      gridStore.seek(offset, function(err, gridStore) {\n        if (err) return callback(err);\n        gridStore.read(length, callback);\n      });\n    } else {\n      gridStore.read(length, callback);\n    }\n  });\n};\n\n/**\n * Read the entire file as a list of strings splitting by the provided separator.\n *\n * @method\n * @static\n * @param {Db} db the database to query.\n * @param {(String|object)} name the name of the file.\n * @param {string} [separator] The character to be recognized as the newline separator.\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.promiseLibrary] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~readlinesCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.readlines = function(db, name, separator, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  separator = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : null;\n  options = options || {};\n\n  return executeLegacyOperation(\n    db.s.topology,\n    readlinesStatic,\n    [db, name, separator, options, callback],\n    { skipSessions: true }\n  );\n};\n\nvar readlinesStatic = function(db, name, separator, options, callback) {\n  var finalSeperator = separator == null ? '\\n' : separator;\n  new GridStore(db, name, 'r', options).open(function(err, gridStore) {\n    if (err) return callback(err);\n    gridStore.readlines(finalSeperator, callback);\n  });\n};\n\n/**\n * Deletes the chunks and metadata information of a file from GridFS.\n *\n * @method\n * @static\n * @param {Db} db The database to query.\n * @param {(string|array)} names The name/names of the files to delete.\n * @param {object} [options] Optional settings.\n * @param {object} [options.promiseLibrary] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.unlink = function(db, names, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  options = args.length ? args.shift() : {};\n  options = options || {};\n\n  return executeLegacyOperation(db.s.topology, unlinkStatic, [this, db, names, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar unlinkStatic = function(self, db, names, options, callback) {\n  // Get the write concern\n  var writeConcern = _getWriteConcern(db, options);\n\n  // List of names\n  if (names.constructor === Array) {\n    var tc = 0;\n    for (var i = 0; i < names.length; i++) {\n      ++tc;\n      GridStore.unlink(db, names[i], options, function() {\n        if (--tc === 0) {\n          callback(null, self);\n        }\n      });\n    }\n  } else {\n    new GridStore(db, names, 'w', options).open(function(err, gridStore) {\n      if (err) return callback(err);\n      deleteChunks(gridStore, function(err) {\n        if (err) return callback(err);\n        gridStore.collection(function(err, collection) {\n          if (err) return callback(err);\n          collection.remove({ _id: gridStore.fileId }, writeConcern, function(err) {\n            callback(err, self);\n          });\n        });\n      });\n    });\n  }\n};\n\n/**\n *  @ignore\n */\nvar _writeNormal = function(self, data, close, options, callback) {\n  // If we have a buffer write it using the writeBuffer method\n  if (Buffer.isBuffer(data)) {\n    return writeBuffer(self, data, close, callback);\n  } else {\n    return writeBuffer(self, Buffer.from(data, 'binary'), close, callback);\n  }\n};\n\n/**\n * @ignore\n */\nvar _setWriteConcernHash = function(options) {\n  const baseOptions = Object.assign(options, options.writeConcern);\n  var finalOptions = {};\n  if (baseOptions.w != null) finalOptions.w = baseOptions.w;\n  if (baseOptions.journal === true) finalOptions.j = baseOptions.journal;\n  if (baseOptions.j === true) finalOptions.j = baseOptions.j;\n  if (baseOptions.fsync === true) finalOptions.fsync = baseOptions.fsync;\n  if (baseOptions.wtimeout != null) finalOptions.wtimeout = baseOptions.wtimeout;\n  return finalOptions;\n};\n\n/**\n * @ignore\n */\nvar _getWriteConcern = function(self, options) {\n  // Final options\n  var finalOptions = { w: 1 };\n  options = options || {};\n\n  // Local options verification\n  if (\n    options.writeConcern != null ||\n    options.w != null ||\n    typeof options.j === 'boolean' ||\n    typeof options.journal === 'boolean' ||\n    typeof options.fsync === 'boolean'\n  ) {\n    finalOptions = _setWriteConcernHash(options);\n  } else if (options.safe != null && typeof options.safe === 'object') {\n    finalOptions = _setWriteConcernHash(options.safe);\n  } else if (typeof options.safe === 'boolean') {\n    finalOptions = { w: options.safe ? 1 : 0 };\n  } else if (\n    self.options.writeConcern != null ||\n    self.options.w != null ||\n    typeof self.options.j === 'boolean' ||\n    typeof self.options.journal === 'boolean' ||\n    typeof self.options.fsync === 'boolean'\n  ) {\n    finalOptions = _setWriteConcernHash(self.options);\n  } else if (\n    self.safe &&\n    (self.safe.w != null ||\n      typeof self.safe.j === 'boolean' ||\n      typeof self.safe.journal === 'boolean' ||\n      typeof self.safe.fsync === 'boolean')\n  ) {\n    finalOptions = _setWriteConcernHash(self.safe);\n  } else if (typeof self.safe === 'boolean') {\n    finalOptions = { w: self.safe ? 1 : 0 };\n  }\n\n  // Ensure we don't have an invalid combination of write concerns\n  if (\n    finalOptions.w < 1 &&\n    (finalOptions.journal === true || finalOptions.j === true || finalOptions.fsync === true)\n  )\n    throw MongoError.create({\n      message: 'No acknowledgement using w < 1 cannot be combined with journal:true or fsync:true',\n      driver: true\n    });\n\n  // Return the options\n  return finalOptions;\n};\n\n/**\n * Create a new GridStoreStream instance (INTERNAL TYPE, do not instantiate directly)\n *\n * @class\n * @extends external:Duplex\n * @return {GridStoreStream} a GridStoreStream instance.\n * @deprecated Use GridFSBucket API instead\n */\nvar GridStoreStream = function(gs) {\n  // Initialize the duplex stream\n  Duplex.call(this);\n\n  // Get the gridstore\n  this.gs = gs;\n\n  // End called\n  this.endCalled = false;\n\n  // If we have a seek\n  this.totalBytesToRead = this.gs.length - this.gs.position;\n  this.seekPosition = this.gs.position;\n};\n\n//\n// Inherit duplex\ninherits(GridStoreStream, Duplex);\n\nGridStoreStream.prototype._pipe = GridStoreStream.prototype.pipe;\n\n// Set up override\nGridStoreStream.prototype.pipe = function(destination) {\n  var self = this;\n\n  // Only open gridstore if not already open\n  if (!self.gs.isOpen) {\n    self.gs.open(function(err) {\n      if (err) return self.emit('error', err);\n      self.totalBytesToRead = self.gs.length - self.gs.position;\n      self._pipe.apply(self, [destination]);\n    });\n  } else {\n    self.totalBytesToRead = self.gs.length - self.gs.position;\n    self._pipe.apply(self, [destination]);\n  }\n\n  return destination;\n};\n\n// Called by stream\nGridStoreStream.prototype._read = function() {\n  var self = this;\n\n  var read = function() {\n    // Read data\n    self.gs.read(length, function(err, buffer) {\n      if (err && !self.endCalled) return self.emit('error', err);\n\n      // Stream is closed\n      if (self.endCalled || buffer == null) return self.push(null);\n      // Remove bytes read\n      if (buffer.length <= self.totalBytesToRead) {\n        self.totalBytesToRead = self.totalBytesToRead - buffer.length;\n        self.push(buffer);\n      } else if (buffer.length > self.totalBytesToRead) {\n        self.totalBytesToRead = self.totalBytesToRead - buffer._index;\n        self.push(buffer.slice(0, buffer._index));\n      }\n\n      // Finished reading\n      if (self.totalBytesToRead <= 0) {\n        self.endCalled = true;\n      }\n    });\n  };\n\n  // Set read length\n  var length =\n    self.gs.length < self.gs.chunkSize ? self.gs.length - self.seekPosition : self.gs.chunkSize;\n  if (!self.gs.isOpen) {\n    self.gs.open(function(err) {\n      self.totalBytesToRead = self.gs.length - self.gs.position;\n      if (err) return self.emit('error', err);\n      read();\n    });\n  } else {\n    read();\n  }\n};\n\nGridStoreStream.prototype.destroy = function() {\n  this.pause();\n  this.endCalled = true;\n  this.gs.close();\n  this.emit('end');\n};\n\nGridStoreStream.prototype.write = function(chunk) {\n  var self = this;\n  if (self.endCalled)\n    return self.emit(\n      'error',\n      MongoError.create({ message: 'attempting to write to stream after end called', driver: true })\n    );\n  // Do we have to open the gridstore\n  if (!self.gs.isOpen) {\n    self.gs.open(function() {\n      self.gs.isOpen = true;\n      self.gs.write(chunk, function() {\n        process.nextTick(function() {\n          self.emit('drain');\n        });\n      });\n    });\n    return false;\n  } else {\n    self.gs.write(chunk, function() {\n      self.emit('drain');\n    });\n    return true;\n  }\n};\n\nGridStoreStream.prototype.end = function(chunk, encoding, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  chunk = args.length ? args.shift() : null;\n  encoding = args.length ? args.shift() : null;\n  self.endCalled = true;\n\n  if (chunk) {\n    self.gs.write(chunk, function() {\n      self.gs.close(function() {\n        if (typeof callback === 'function') callback();\n        self.emit('end');\n      });\n    });\n  }\n\n  self.gs.close(function() {\n    if (typeof callback === 'function') callback();\n    self.emit('end');\n  });\n};\n\n/**\n * The read() method pulls some data out of the internal buffer and returns it. If there is no data available, then it will return null.\n * @function external:Duplex#read\n * @param {number} size Optional argument to specify how much data to read.\n * @return {(String | Buffer | null)}\n */\n\n/**\n * Call this function to cause the stream to return strings of the specified encoding instead of Buffer objects.\n * @function external:Duplex#setEncoding\n * @param {string} encoding The encoding to use.\n * @return {null}\n */\n\n/**\n * This method will cause the readable stream to resume emitting data events.\n * @function external:Duplex#resume\n * @return {null}\n */\n\n/**\n * This method will cause a stream in flowing-mode to stop emitting data events. Any data that becomes available will remain in the internal buffer.\n * @function external:Duplex#pause\n * @return {null}\n */\n\n/**\n * This method pulls all the data out of a readable stream, and writes it to the supplied destination, automatically managing the flow so that the destination is not overwhelmed by a fast readable stream.\n * @function external:Duplex#pipe\n * @param {Writable} destination The destination for writing data\n * @param {object} [options] Pipe options\n * @return {null}\n */\n\n/**\n * This method will remove the hooks set up for a previous pipe() call.\n * @function external:Duplex#unpipe\n * @param {Writable} [destination] The destination for writing data\n * @return {null}\n */\n\n/**\n * This is useful in certain cases where a stream is being consumed by a parser, which needs to \"un-consume\" some data that it has optimistically pulled out of the source, so that the stream can be passed on to some other party.\n * @function external:Duplex#unshift\n * @param {(Buffer|string)} chunk Chunk of data to unshift onto the read queue.\n * @return {null}\n */\n\n/**\n * Versions of Node prior to v0.10 had streams that did not implement the entire Streams API as it is today. (See \"Compatibility\" below for more information.)\n * @function external:Duplex#wrap\n * @param {Stream} stream An \"old style\" readable stream.\n * @return {null}\n */\n\n/**\n * This method writes some data to the underlying system, and calls the supplied callback once the data has been fully handled.\n * @function external:Duplex#write\n * @param {(string|Buffer)} chunk The data to write\n * @param {string} encoding The encoding, if chunk is a String\n * @param {function} callback Callback for when this chunk of data is flushed\n * @return {boolean}\n */\n\n/**\n * Call this method when no more data will be written to the stream. If supplied, the callback is attached as a listener on the finish event.\n * @function external:Duplex#end\n * @param {(string|Buffer)} chunk The data to write\n * @param {string} encoding The encoding, if chunk is a String\n * @param {function} callback Callback for when this chunk of data is flushed\n * @return {null}\n */\n\n/**\n * GridStoreStream stream data event, fired for each document in the cursor.\n *\n * @event GridStoreStream#data\n * @type {object}\n */\n\n/**\n * GridStoreStream stream end event\n *\n * @event GridStoreStream#end\n * @type {null}\n */\n\n/**\n * GridStoreStream stream close event\n *\n * @event GridStoreStream#close\n * @type {null}\n */\n\n/**\n * GridStoreStream stream readable event\n *\n * @event GridStoreStream#readable\n * @type {null}\n */\n\n/**\n * GridStoreStream stream drain event\n *\n * @event GridStoreStream#drain\n * @type {null}\n */\n\n/**\n * GridStoreStream stream finish event\n *\n * @event GridStoreStream#finish\n * @type {null}\n */\n\n/**\n * GridStoreStream stream pipe event\n *\n * @event GridStoreStream#pipe\n * @type {null}\n */\n\n/**\n * GridStoreStream stream unpipe event\n *\n * @event GridStoreStream#unpipe\n * @type {null}\n */\n\n/**\n * GridStoreStream stream error event\n *\n * @event GridStoreStream#error\n * @type {null}\n */\n\n/**\n * @ignore\n */\nmodule.exports = GridStore;\n"],"names":["require$$0","require$$1","util","require$$2","require$$3","Chunk","fs","chunk"],"mappings":"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AACtD,EAAE,QAAQ,GAAG,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,UAAU,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC;AAClF,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC;AAC5C,EAAE,QAAQ,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC;AAC/C,EAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACxB;AACA,EAAE,IAAI,KAAK,EAAE;AACb,IAAI,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,EAAE,WAAW;AACpC,MAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW;AAC/B,QAAQ,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE,QAAQ,EAAE,CAAC;AACvD,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACzB,OAAO,CAAC,CAAC;AACT,KAAK,CAAC,CAAC;AACP,GAAG;AACH;AACA,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW;AAC3B,IAAI,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE,QAAQ,EAAE,CAAC;AACnD,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACrB,GAAG,CAAC,CAAC;AACL,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;cACc,GAAG;;;;"}