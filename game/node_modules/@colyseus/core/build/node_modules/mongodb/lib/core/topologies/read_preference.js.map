{"version":3,"file":"read_preference.js","sources":["../../../../../../../../node_modules/mongodb/lib/core/topologies/read_preference.js"],"sourcesContent":["'use strict';\nconst emitWarningOnce = require('../../utils').emitWarningOnce;\n\n/**\n * The **ReadPreference** class is a class that represents a MongoDB ReadPreference and is\n * used to construct connections.\n * @class\n * @param {string} mode A string describing the read preference mode (primary|primaryPreferred|secondary|secondaryPreferred|nearest)\n * @param {array} tags The tags object\n * @param {object} [options] Additional read preference options\n * @param {number} [options.maxStalenessSeconds] Max secondary read staleness in seconds, Minimum value is 90 seconds.\n * @param {object} [options.hedge] Server mode in which the same query is dispatched in parallel to multiple replica set members.\n * @param {boolean} [options.hedge.enabled] Explicitly enable or disable hedged reads.\n * @see https://docs.mongodb.com/manual/core/read-preference/\n * @return {ReadPreference}\n */\nconst ReadPreference = function(mode, tags, options) {\n  if (!ReadPreference.isValid(mode)) {\n    throw new TypeError(`Invalid read preference mode ${mode}`);\n  }\n\n  // TODO(major): tags MUST be an array of tagsets\n  if (tags && !Array.isArray(tags)) {\n    emitWarningOnce(\n      'ReadPreference tags must be an array, this will change in the next major version'\n    );\n\n    const tagsHasMaxStalenessSeconds = typeof tags.maxStalenessSeconds !== 'undefined';\n    const tagsHasHedge = typeof tags.hedge !== 'undefined';\n    const tagsHasOptions = tagsHasMaxStalenessSeconds || tagsHasHedge;\n    if (tagsHasOptions) {\n      // this is likely an options object\n      options = tags;\n      tags = undefined;\n    } else {\n      tags = [tags];\n    }\n  }\n\n  this.mode = mode;\n  this.tags = tags;\n  this.hedge = options && options.hedge;\n\n  options = options || {};\n  if (options.maxStalenessSeconds != null) {\n    if (options.maxStalenessSeconds <= 0) {\n      throw new TypeError('maxStalenessSeconds must be a positive integer');\n    }\n\n    this.maxStalenessSeconds = options.maxStalenessSeconds;\n\n    // NOTE: The minimum required wire version is 5 for this read preference. If the existing\n    //       topology has a lower value then a MongoError will be thrown during server selection.\n    this.minWireVersion = 5;\n  }\n\n  if (this.mode === ReadPreference.PRIMARY) {\n    if (this.tags && Array.isArray(this.tags) && this.tags.length > 0) {\n      throw new TypeError('Primary read preference cannot be combined with tags');\n    }\n\n    if (this.maxStalenessSeconds) {\n      throw new TypeError('Primary read preference cannot be combined with maxStalenessSeconds');\n    }\n\n    if (this.hedge) {\n      throw new TypeError('Primary read preference cannot be combined with hedge');\n    }\n  }\n};\n\n// Support the deprecated `preference` property introduced in the porcelain layer\nObject.defineProperty(ReadPreference.prototype, 'preference', {\n  enumerable: true,\n  get: function() {\n    return this.mode;\n  }\n});\n\n/*\n * Read preference mode constants\n */\nReadPreference.PRIMARY = 'primary';\nReadPreference.PRIMARY_PREFERRED = 'primaryPreferred';\nReadPreference.SECONDARY = 'secondary';\nReadPreference.SECONDARY_PREFERRED = 'secondaryPreferred';\nReadPreference.NEAREST = 'nearest';\n\nconst VALID_MODES = [\n  ReadPreference.PRIMARY,\n  ReadPreference.PRIMARY_PREFERRED,\n  ReadPreference.SECONDARY,\n  ReadPreference.SECONDARY_PREFERRED,\n  ReadPreference.NEAREST,\n  null\n];\n\n/**\n * Construct a ReadPreference given an options object.\n *\n * @param {object} options The options object from which to extract the read preference.\n * @return {ReadPreference}\n */\nReadPreference.fromOptions = function(options) {\n  if (!options) return null;\n  const readPreference = options.readPreference;\n  if (!readPreference) return null;\n  const readPreferenceTags = options.readPreferenceTags;\n  const maxStalenessSeconds = options.maxStalenessSeconds;\n  if (typeof readPreference === 'string') {\n    return new ReadPreference(readPreference, readPreferenceTags);\n  } else if (!(readPreference instanceof ReadPreference) && typeof readPreference === 'object') {\n    const mode = readPreference.mode || readPreference.preference;\n    if (mode && typeof mode === 'string') {\n      return new ReadPreference(mode, readPreference.tags, {\n        maxStalenessSeconds: readPreference.maxStalenessSeconds || maxStalenessSeconds,\n        hedge: readPreference.hedge\n      });\n    }\n  }\n\n  return readPreference;\n};\n\n/**\n * Resolves a read preference based on well-defined inheritance rules. This method will not only\n * determine the read preference (if there is one), but will also ensure the returned value is a\n * properly constructed instance of `ReadPreference`.\n *\n * @param {Collection|Db|MongoClient} parent The parent of the operation on which to determine the read\n * preference, used for determining the inherited read preference.\n * @param {object} options The options passed into the method, potentially containing a read preference\n * @returns {(ReadPreference|null)} The resolved read preference\n */\nReadPreference.resolve = function(parent, options) {\n  options = options || {};\n  const session = options.session;\n\n  const inheritedReadPreference = parent && parent.readPreference;\n\n  let readPreference;\n  if (options.readPreference) {\n    readPreference = ReadPreference.fromOptions(options);\n  } else if (session && session.inTransaction() && session.transaction.options.readPreference) {\n    // The transactionâ€™s read preference MUST override all other user configurable read preferences.\n    readPreference = session.transaction.options.readPreference;\n  } else if (inheritedReadPreference != null) {\n    readPreference = inheritedReadPreference;\n  } else {\n    readPreference = ReadPreference.primary;\n  }\n\n  return typeof readPreference === 'string' ? new ReadPreference(readPreference) : readPreference;\n};\n\n/**\n * Replaces options.readPreference with a ReadPreference instance\n */\nReadPreference.translate = function(options) {\n  if (options.readPreference == null) return options;\n  const r = options.readPreference;\n\n  if (typeof r === 'string') {\n    options.readPreference = new ReadPreference(r);\n  } else if (r && !(r instanceof ReadPreference) && typeof r === 'object') {\n    const mode = r.mode || r.preference;\n    if (mode && typeof mode === 'string') {\n      options.readPreference = new ReadPreference(mode, r.tags, {\n        maxStalenessSeconds: r.maxStalenessSeconds\n      });\n    }\n  } else if (!(r instanceof ReadPreference)) {\n    throw new TypeError('Invalid read preference: ' + r);\n  }\n\n  return options;\n};\n\n/**\n * Validate if a mode is legal\n *\n * @method\n * @param {string} mode The string representing the read preference mode.\n * @return {boolean} True if a mode is valid\n */\nReadPreference.isValid = function(mode) {\n  return VALID_MODES.indexOf(mode) !== -1;\n};\n\n/**\n * Validate if a mode is legal\n *\n * @method\n * @param {string} mode The string representing the read preference mode.\n * @return {boolean} True if a mode is valid\n */\nReadPreference.prototype.isValid = function(mode) {\n  return ReadPreference.isValid(typeof mode === 'string' ? mode : this.mode);\n};\n\nconst needSlaveOk = ['primaryPreferred', 'secondary', 'secondaryPreferred', 'nearest'];\n\n/**\n * Indicates that this readPreference needs the \"slaveOk\" bit when sent over the wire\n * @method\n * @return {boolean}\n * @see https://docs.mongodb.com/manual/reference/mongodb-wire-protocol/#op-query\n */\nReadPreference.prototype.slaveOk = function() {\n  return needSlaveOk.indexOf(this.mode) !== -1;\n};\n\n/**\n * Are the two read preference equal\n * @method\n * @param {ReadPreference} readPreference The read preference with which to check equality\n * @return {boolean} True if the two ReadPreferences are equivalent\n */\nReadPreference.prototype.equals = function(readPreference) {\n  return readPreference.mode === this.mode;\n};\n\n/**\n * Return JSON representation\n * @method\n * @return {Object} A JSON representation of the ReadPreference\n */\nReadPreference.prototype.toJSON = function() {\n  const readPreference = { mode: this.mode };\n  if (Array.isArray(this.tags)) readPreference.tags = this.tags;\n  if (this.maxStalenessSeconds) readPreference.maxStalenessSeconds = this.maxStalenessSeconds;\n  if (this.hedge) readPreference.hedge = this.hedge;\n  return readPreference;\n};\n\n/**\n * Primary read preference\n * @member\n * @type {ReadPreference}\n */\nReadPreference.primary = new ReadPreference('primary');\n/**\n * Primary Preferred read preference\n * @member\n * @type {ReadPreference}\n */\nReadPreference.primaryPreferred = new ReadPreference('primaryPreferred');\n/**\n * Secondary read preference\n * @member\n * @type {ReadPreference}\n */\nReadPreference.secondary = new ReadPreference('secondary');\n/**\n * Secondary Preferred read preference\n * @member\n * @type {ReadPreference}\n */\nReadPreference.secondaryPreferred = new ReadPreference('secondaryPreferred');\n/**\n * Nearest read preference\n * @member\n * @type {ReadPreference}\n */\nReadPreference.nearest = new ReadPreference('nearest');\n\nmodule.exports = ReadPreference;\n"],"names":["require$$0"],"mappings":"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"}