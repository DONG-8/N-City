{"version":3,"file":"cursor.js","sources":["../../../../../../../node_modules/mongodb/lib/core/cursor.js"],"sourcesContent":["'use strict';\n\nconst Logger = require('./connection/logger');\nconst retrieveBSON = require('./connection/utils').retrieveBSON;\nconst MongoError = require('./error').MongoError;\nconst MongoNetworkError = require('./error').MongoNetworkError;\nconst collationNotSupported = require('./utils').collationNotSupported;\nconst ReadPreference = require('./topologies/read_preference');\nconst isUnifiedTopology = require('./utils').isUnifiedTopology;\nconst executeOperation = require('../operations/execute_operation');\nconst Readable = require('stream').Readable;\nconst SUPPORTS = require('../utils').SUPPORTS;\nconst MongoDBNamespace = require('../utils').MongoDBNamespace;\nconst mergeOptions = require('../utils').mergeOptions;\nconst OperationBase = require('../operations/operation').OperationBase;\n\nconst BSON = retrieveBSON();\nconst Long = BSON.Long;\n\n// Possible states for a cursor\nconst CursorState = {\n  INIT: 0,\n  OPEN: 1,\n  CLOSED: 2,\n  GET_MORE: 3\n};\n\n//\n// Handle callback (including any exceptions thrown)\nfunction handleCallback(callback, err, result) {\n  try {\n    callback(err, result);\n  } catch (err) {\n    process.nextTick(function() {\n      throw err;\n    });\n  }\n}\n\n/**\n * This is a cursor results callback\n *\n * @callback resultCallback\n * @param {error} error An error object. Set to null if no error present\n * @param {object} document\n */\n\n/**\n * @fileOverview The **Cursor** class is an internal class that embodies a cursor on MongoDB\n * allowing for iteration over the results returned from the underlying query.\n *\n * **CURSORS Cannot directly be instantiated**\n */\n\n/**\n * The core cursor class. All cursors in the driver build off of this one.\n *\n * @property {number} cursorBatchSize The current cursorBatchSize for the cursor\n * @property {number} cursorLimit The current cursorLimit for the cursor\n * @property {number} cursorSkip The current cursorSkip for the cursor\n */\nclass CoreCursor extends Readable {\n  /**\n   * Create a new core `Cursor` instance.\n   * **NOTE** Not to be instantiated directly\n   *\n   * @param {object} topology The server topology instance.\n   * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n   * @param {{object}|Long} cmd The selector (can be a command or a cursorId)\n   * @param {object} [options=null] Optional settings.\n   * @param {object} [options.batchSize=1000] The number of documents to return per batch. See {@link https://docs.mongodb.com/manual/reference/command/find/| find command documentation} and {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n   * @param {array} [options.documents=[]] Initial documents list for cursor\n   * @param {object} [options.transforms=null] Transform methods for the cursor results\n   * @param {function} [options.transforms.query] Transform the value returned from the initial query\n   * @param {function} [options.transforms.doc] Transform each document returned from Cursor.prototype._next\n   */\n  constructor(topology, ns, cmd, options) {\n    super({ objectMode: true });\n    options = options || {};\n\n    if (ns instanceof OperationBase) {\n      this.operation = ns;\n      ns = this.operation.ns.toString();\n      options = this.operation.options;\n      cmd = this.operation.cmd ? this.operation.cmd : {};\n    }\n\n    // Cursor pool\n    this.pool = null;\n    // Cursor server\n    this.server = null;\n\n    // Do we have a not connected handler\n    this.disconnectHandler = options.disconnectHandler;\n\n    // Set local values\n    this.bson = topology.s.bson;\n    this.ns = ns;\n    this.namespace = MongoDBNamespace.fromString(ns);\n    this.cmd = cmd;\n    this.options = options;\n    this.topology = topology;\n\n    // All internal state\n    this.cursorState = {\n      cursorId: null,\n      cmd,\n      documents: options.documents || [],\n      cursorIndex: 0,\n      dead: false,\n      killed: false,\n      init: false,\n      notified: false,\n      limit: options.limit || cmd.limit || 0,\n      skip: options.skip || cmd.skip || 0,\n      batchSize: options.batchSize || cmd.batchSize || 1000,\n      currentLimit: 0,\n      // Result field name if not a cursor (contains the array of results)\n      transforms: options.transforms,\n      raw: options.raw || (cmd && cmd.raw)\n    };\n\n    if (typeof options.session === 'object') {\n      this.cursorState.session = options.session;\n    }\n\n    // Add promoteLong to cursor state\n    const topologyOptions = topology.s.options;\n    if (typeof topologyOptions.promoteLongs === 'boolean') {\n      this.cursorState.promoteLongs = topologyOptions.promoteLongs;\n    } else if (typeof options.promoteLongs === 'boolean') {\n      this.cursorState.promoteLongs = options.promoteLongs;\n    }\n\n    // Add promoteValues to cursor state\n    if (typeof topologyOptions.promoteValues === 'boolean') {\n      this.cursorState.promoteValues = topologyOptions.promoteValues;\n    } else if (typeof options.promoteValues === 'boolean') {\n      this.cursorState.promoteValues = options.promoteValues;\n    }\n\n    // Add promoteBuffers to cursor state\n    if (typeof topologyOptions.promoteBuffers === 'boolean') {\n      this.cursorState.promoteBuffers = topologyOptions.promoteBuffers;\n    } else if (typeof options.promoteBuffers === 'boolean') {\n      this.cursorState.promoteBuffers = options.promoteBuffers;\n    }\n\n    if (topologyOptions.reconnect) {\n      this.cursorState.reconnect = topologyOptions.reconnect;\n    }\n\n    // Logger\n    this.logger = Logger('Cursor', topologyOptions);\n\n    //\n    // Did we pass in a cursor id\n    if (typeof cmd === 'number') {\n      this.cursorState.cursorId = Long.fromNumber(cmd);\n      this.cursorState.lastCursorId = this.cursorState.cursorId;\n    } else if (cmd instanceof Long) {\n      this.cursorState.cursorId = cmd;\n      this.cursorState.lastCursorId = cmd;\n    }\n\n    // TODO: remove as part of NODE-2104\n    if (this.operation) {\n      this.operation.cursorState = this.cursorState;\n    }\n  }\n\n  setCursorBatchSize(value) {\n    this.cursorState.batchSize = value;\n  }\n\n  cursorBatchSize() {\n    return this.cursorState.batchSize;\n  }\n\n  setCursorLimit(value) {\n    this.cursorState.limit = value;\n  }\n\n  cursorLimit() {\n    return this.cursorState.limit;\n  }\n\n  setCursorSkip(value) {\n    this.cursorState.skip = value;\n  }\n\n  cursorSkip() {\n    return this.cursorState.skip;\n  }\n\n  /**\n   * Retrieve the next document from the cursor\n   * @method\n   * @param {resultCallback} callback A callback function\n   */\n  _next(callback) {\n    nextFunction(this, callback);\n  }\n\n  /**\n   * Clone the cursor\n   * @method\n   * @return {Cursor}\n   */\n  clone() {\n    const clonedOptions = mergeOptions({}, this.options);\n    delete clonedOptions.session;\n    return this.topology.cursor(this.ns, this.cmd, clonedOptions);\n  }\n\n  /**\n   * Checks if the cursor is dead\n   * @method\n   * @return {boolean} A boolean signifying if the cursor is dead or not\n   */\n  isDead() {\n    return this.cursorState.dead === true;\n  }\n\n  /**\n   * Checks if the cursor was killed by the application\n   * @method\n   * @return {boolean} A boolean signifying if the cursor was killed by the application\n   */\n  isKilled() {\n    return this.cursorState.killed === true;\n  }\n\n  /**\n   * Checks if the cursor notified it's caller about it's death\n   * @method\n   * @return {boolean} A boolean signifying if the cursor notified the callback\n   */\n  isNotified() {\n    return this.cursorState.notified === true;\n  }\n\n  /**\n   * Returns current buffered documents length\n   * @method\n   * @return {number} The number of items in the buffered documents\n   */\n  bufferedCount() {\n    return this.cursorState.documents.length - this.cursorState.cursorIndex;\n  }\n\n  /**\n   * Returns current buffered documents\n   * @method\n   * @return {Array} An array of buffered documents\n   */\n  readBufferedDocuments(number) {\n    const unreadDocumentsLength = this.cursorState.documents.length - this.cursorState.cursorIndex;\n    const length = number < unreadDocumentsLength ? number : unreadDocumentsLength;\n    let elements = this.cursorState.documents.slice(\n      this.cursorState.cursorIndex,\n      this.cursorState.cursorIndex + length\n    );\n\n    // Transform the doc with passed in transformation method if provided\n    if (this.cursorState.transforms && typeof this.cursorState.transforms.doc === 'function') {\n      // Transform all the elements\n      for (let i = 0; i < elements.length; i++) {\n        elements[i] = this.cursorState.transforms.doc(elements[i]);\n      }\n    }\n\n    // Ensure we do not return any more documents than the limit imposed\n    // Just return the number of elements up to the limit\n    if (\n      this.cursorState.limit > 0 &&\n      this.cursorState.currentLimit + elements.length > this.cursorState.limit\n    ) {\n      elements = elements.slice(0, this.cursorState.limit - this.cursorState.currentLimit);\n      this.kill();\n    }\n\n    // Adjust current limit\n    this.cursorState.currentLimit = this.cursorState.currentLimit + elements.length;\n    this.cursorState.cursorIndex = this.cursorState.cursorIndex + elements.length;\n\n    // Return elements\n    return elements;\n  }\n\n  /**\n   * Resets local state for this cursor instance, and issues a `killCursors` command to the server\n   *\n   * @param {resultCallback} callback A callback function\n   */\n  kill(callback) {\n    // Set cursor to dead\n    this.cursorState.dead = true;\n    this.cursorState.killed = true;\n    // Remove documents\n    this.cursorState.documents = [];\n\n    // If no cursor id just return\n    if (\n      this.cursorState.cursorId == null ||\n      this.cursorState.cursorId.isZero() ||\n      this.cursorState.init === false\n    ) {\n      if (callback) callback(null, null);\n      return;\n    }\n\n    this.server.killCursors(this.ns, this.cursorState, callback);\n  }\n\n  /**\n   * Resets the cursor\n   */\n  rewind() {\n    if (this.cursorState.init) {\n      if (!this.cursorState.dead) {\n        this.kill();\n      }\n\n      this.cursorState.currentLimit = 0;\n      this.cursorState.init = false;\n      this.cursorState.dead = false;\n      this.cursorState.killed = false;\n      this.cursorState.notified = false;\n      this.cursorState.documents = [];\n      this.cursorState.cursorId = null;\n      this.cursorState.cursorIndex = 0;\n    }\n  }\n\n  // Internal methods\n  _read() {\n    if ((this.s && this.s.state === CursorState.CLOSED) || this.isDead()) {\n      return this.push(null);\n    }\n\n    // Get the next item\n    this._next((err, result) => {\n      if (err) {\n        if (this.listeners('error') && this.listeners('error').length > 0) {\n          this.emit('error', err);\n        }\n        if (!this.isDead()) this.close();\n\n        // Emit end event\n        this.emit('end');\n        return this.emit('finish');\n      }\n\n      // If we provided a transformation method\n      if (\n        this.cursorState.streamOptions &&\n        typeof this.cursorState.streamOptions.transform === 'function' &&\n        result != null\n      ) {\n        return this.push(this.cursorState.streamOptions.transform(result));\n      }\n\n      // Return the result\n      this.push(result);\n\n      if (result === null && this.isDead()) {\n        this.once('end', () => {\n          this.close();\n          this.emit('finish');\n        });\n      }\n    });\n  }\n\n  _endSession(options, callback) {\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    options = options || {};\n\n    const session = this.cursorState.session;\n\n    if (session && (options.force || session.owner === this)) {\n      this.cursorState.session = undefined;\n\n      if (this.operation) {\n        this.operation.clearSession();\n      }\n\n      session.endSession(callback);\n      return true;\n    }\n\n    if (callback) {\n      callback();\n    }\n\n    return false;\n  }\n\n  _getMore(callback) {\n    if (this.logger.isDebug()) {\n      this.logger.debug(`schedule getMore call for query [${JSON.stringify(this.query)}]`);\n    }\n\n    // Set the current batchSize\n    let batchSize = this.cursorState.batchSize;\n    if (\n      this.cursorState.limit > 0 &&\n      this.cursorState.currentLimit + batchSize > this.cursorState.limit\n    ) {\n      batchSize = this.cursorState.limit - this.cursorState.currentLimit;\n    }\n\n    const cursorState = this.cursorState;\n    this.server.getMore(this.ns, cursorState, batchSize, this.options, (err, result, conn) => {\n      // NOTE: `getMore` modifies `cursorState`, would be very ideal not to do so in the future\n      if (err || (cursorState.cursorId && cursorState.cursorId.isZero())) {\n        this._endSession();\n      }\n\n      callback(err, result, conn);\n    });\n  }\n\n  _initializeCursor(callback) {\n    const cursor = this;\n\n    // NOTE: this goes away once cursors use `executeOperation`\n    if (isUnifiedTopology(cursor.topology) && cursor.topology.shouldCheckForSessionSupport()) {\n      cursor.topology.selectServer(ReadPreference.primaryPreferred, err => {\n        if (err) {\n          callback(err);\n          return;\n        }\n\n        this._initializeCursor(callback);\n      });\n\n      return;\n    }\n\n    function done(err, result) {\n      const cursorState = cursor.cursorState;\n      if (err || (cursorState.cursorId && cursorState.cursorId.isZero())) {\n        cursor._endSession();\n      }\n\n      if (\n        cursorState.documents.length === 0 &&\n        cursorState.cursorId &&\n        cursorState.cursorId.isZero() &&\n        !cursor.cmd.tailable &&\n        !cursor.cmd.awaitData\n      ) {\n        return setCursorNotified(cursor, callback);\n      }\n\n      callback(err, result);\n    }\n\n    const queryCallback = (err, r) => {\n      if (err) {\n        return done(err);\n      }\n\n      const result = r.message;\n\n      if (Array.isArray(result.documents) && result.documents.length === 1) {\n        const document = result.documents[0];\n\n        if (result.queryFailure) {\n          return done(new MongoError(document), null);\n        }\n\n        // Check if we have a command cursor\n        if (!cursor.cmd.find || (cursor.cmd.find && cursor.cmd.virtual === false)) {\n          // We have an error document, return the error\n          if (document.$err || document.errmsg) {\n            return done(new MongoError(document), null);\n          }\n\n          // We have a cursor document\n          if (document.cursor != null && typeof document.cursor !== 'string') {\n            const id = document.cursor.id;\n            // If we have a namespace change set the new namespace for getmores\n            if (document.cursor.ns) {\n              cursor.ns = document.cursor.ns;\n            }\n            // Promote id to long if needed\n            cursor.cursorState.cursorId = typeof id === 'number' ? Long.fromNumber(id) : id;\n            cursor.cursorState.lastCursorId = cursor.cursorState.cursorId;\n            cursor.cursorState.operationTime = document.operationTime;\n\n            // If we have a firstBatch set it\n            if (Array.isArray(document.cursor.firstBatch)) {\n              cursor.cursorState.documents = document.cursor.firstBatch; //.reverse();\n            }\n\n            // Return after processing command cursor\n            return done(null, result);\n          }\n        }\n      }\n\n      // Otherwise fall back to regular find path\n      const cursorId = result.cursorId || 0;\n      cursor.cursorState.cursorId = cursorId instanceof Long ? cursorId : Long.fromNumber(cursorId);\n      cursor.cursorState.documents = result.documents;\n      cursor.cursorState.lastCursorId = result.cursorId;\n\n      // Transform the results with passed in transformation method if provided\n      if (\n        cursor.cursorState.transforms &&\n        typeof cursor.cursorState.transforms.query === 'function'\n      ) {\n        cursor.cursorState.documents = cursor.cursorState.transforms.query(result);\n      }\n\n      done(null, result);\n    };\n\n    if (cursor.operation) {\n      if (cursor.logger.isDebug()) {\n        cursor.logger.debug(\n          `issue initial query [${JSON.stringify(cursor.cmd)}] with flags [${JSON.stringify(\n            cursor.query\n          )}]`\n        );\n      }\n\n      executeOperation(cursor.topology, cursor.operation, (err, result) => {\n        if (err) {\n          done(err);\n          return;\n        }\n\n        cursor.server = cursor.operation.server;\n        cursor.cursorState.init = true;\n\n        // NOTE: this is a special internal method for cloning a cursor, consider removing\n        if (cursor.cursorState.cursorId != null) {\n          return done();\n        }\n\n        queryCallback(err, result);\n      });\n\n      return;\n    }\n\n    // Very explicitly choose what is passed to selectServer\n    const serverSelectOptions = {};\n    if (cursor.cursorState.session) {\n      serverSelectOptions.session = cursor.cursorState.session;\n    }\n\n    if (cursor.operation) {\n      serverSelectOptions.readPreference = cursor.operation.readPreference;\n    } else if (cursor.options.readPreference) {\n      serverSelectOptions.readPreference = cursor.options.readPreference;\n    }\n\n    return cursor.topology.selectServer(serverSelectOptions, (err, server) => {\n      if (err) {\n        const disconnectHandler = cursor.disconnectHandler;\n        if (disconnectHandler != null) {\n          return disconnectHandler.addObjectAndMethod(\n            'cursor',\n            cursor,\n            'next',\n            [callback],\n            callback\n          );\n        }\n\n        return callback(err);\n      }\n\n      cursor.server = server;\n      cursor.cursorState.init = true;\n      if (collationNotSupported(cursor.server, cursor.cmd)) {\n        return callback(new MongoError(`server ${cursor.server.name} does not support collation`));\n      }\n\n      // NOTE: this is a special internal method for cloning a cursor, consider removing\n      if (cursor.cursorState.cursorId != null) {\n        return done();\n      }\n\n      if (cursor.logger.isDebug()) {\n        cursor.logger.debug(\n          `issue initial query [${JSON.stringify(cursor.cmd)}] with flags [${JSON.stringify(\n            cursor.query\n          )}]`\n        );\n      }\n\n      if (cursor.cmd.find != null) {\n        server.query(cursor.ns, cursor.cmd, cursor.cursorState, cursor.options, queryCallback);\n        return;\n      }\n\n      const commandOptions = Object.assign({ session: cursor.cursorState.session }, cursor.options);\n      server.command(cursor.ns, cursor.cmd, commandOptions, queryCallback);\n    });\n  }\n}\n\nif (SUPPORTS.ASYNC_ITERATOR) {\n  CoreCursor.prototype[Symbol.asyncIterator] = require('../async/async_iterator').asyncIterator;\n}\n\n/**\n * Validate if the pool is dead and return error\n */\nfunction isConnectionDead(self, callback) {\n  if (self.pool && self.pool.isDestroyed()) {\n    self.cursorState.killed = true;\n    const err = new MongoNetworkError(\n      `connection to host ${self.pool.host}:${self.pool.port} was destroyed`\n    );\n\n    _setCursorNotifiedImpl(self, () => callback(err));\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Validate if the cursor is dead but was not explicitly killed by user\n */\nfunction isCursorDeadButNotkilled(self, callback) {\n  // Cursor is dead but not marked killed, return null\n  if (self.cursorState.dead && !self.cursorState.killed) {\n    self.cursorState.killed = true;\n    setCursorNotified(self, callback);\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Validate if the cursor is dead and was killed by user\n */\nfunction isCursorDeadAndKilled(self, callback) {\n  if (self.cursorState.dead && self.cursorState.killed) {\n    handleCallback(callback, new MongoError('cursor is dead'));\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Validate if the cursor was killed by the user\n */\nfunction isCursorKilled(self, callback) {\n  if (self.cursorState.killed) {\n    setCursorNotified(self, callback);\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Mark cursor as being dead and notified\n */\nfunction setCursorDeadAndNotified(self, callback) {\n  self.cursorState.dead = true;\n  setCursorNotified(self, callback);\n}\n\n/**\n * Mark cursor as being notified\n */\nfunction setCursorNotified(self, callback) {\n  _setCursorNotifiedImpl(self, () => handleCallback(callback, null, null));\n}\n\nfunction _setCursorNotifiedImpl(self, callback) {\n  self.cursorState.notified = true;\n  self.cursorState.documents = [];\n  self.cursorState.cursorIndex = 0;\n\n  if (self.cursorState.session) {\n    self._endSession(callback);\n    return;\n  }\n\n  return callback();\n}\n\nfunction nextFunction(self, callback) {\n  // We have notified about it\n  if (self.cursorState.notified) {\n    return callback(new Error('cursor is exhausted'));\n  }\n\n  // Cursor is killed return null\n  if (isCursorKilled(self, callback)) return;\n\n  // Cursor is dead but not marked killed, return null\n  if (isCursorDeadButNotkilled(self, callback)) return;\n\n  // We have a dead and killed cursor, attempting to call next should error\n  if (isCursorDeadAndKilled(self, callback)) return;\n\n  // We have just started the cursor\n  if (!self.cursorState.init) {\n    // Topology is not connected, save the call in the provided store to be\n    // Executed at some point when the handler deems it's reconnected\n    if (!self.topology.isConnected(self.options)) {\n      // Only need this for single server, because repl sets and mongos\n      // will always continue trying to reconnect\n      if (self.topology._type === 'server' && !self.topology.s.options.reconnect) {\n        // Reconnect is disabled, so we'll never reconnect\n        return callback(new MongoError('no connection available'));\n      }\n\n      if (self.disconnectHandler != null) {\n        if (self.topology.isDestroyed()) {\n          // Topology was destroyed, so don't try to wait for it to reconnect\n          return callback(new MongoError('Topology was destroyed'));\n        }\n\n        self.disconnectHandler.addObjectAndMethod('cursor', self, 'next', [callback], callback);\n        return;\n      }\n    }\n\n    self._initializeCursor((err, result) => {\n      if (err || result === null) {\n        callback(err, result);\n        return;\n      }\n\n      nextFunction(self, callback);\n    });\n\n    return;\n  }\n\n  if (self.cursorState.limit > 0 && self.cursorState.currentLimit >= self.cursorState.limit) {\n    // Ensure we kill the cursor on the server\n    self.kill(() =>\n      // Set cursor in dead and notified state\n      setCursorDeadAndNotified(self, callback)\n    );\n  } else if (\n    self.cursorState.cursorIndex === self.cursorState.documents.length &&\n    !Long.ZERO.equals(self.cursorState.cursorId)\n  ) {\n    // Ensure an empty cursor state\n    self.cursorState.documents = [];\n    self.cursorState.cursorIndex = 0;\n\n    // Check if topology is destroyed\n    if (self.topology.isDestroyed())\n      return callback(\n        new MongoNetworkError('connection destroyed, not possible to instantiate cursor')\n      );\n\n    // Check if connection is dead and return if not possible to\n    // execute a getMore on this connection\n    if (isConnectionDead(self, callback)) return;\n\n    // Execute the next get more\n    self._getMore(function(err, doc, connection) {\n      if (err) {\n        return handleCallback(callback, err);\n      }\n\n      // Save the returned connection to ensure all getMore's fire over the same connection\n      self.connection = connection;\n\n      // Tailable cursor getMore result, notify owner about it\n      // No attempt is made here to retry, this is left to the user of the\n      // core module to handle to keep core simple\n      if (\n        self.cursorState.documents.length === 0 &&\n        self.cmd.tailable &&\n        Long.ZERO.equals(self.cursorState.cursorId)\n      ) {\n        // No more documents in the tailed cursor\n        return handleCallback(\n          callback,\n          new MongoError({\n            message: 'No more documents in tailed cursor',\n            tailable: self.cmd.tailable,\n            awaitData: self.cmd.awaitData\n          })\n        );\n      } else if (\n        self.cursorState.documents.length === 0 &&\n        self.cmd.tailable &&\n        !Long.ZERO.equals(self.cursorState.cursorId)\n      ) {\n        return nextFunction(self, callback);\n      }\n\n      if (self.cursorState.limit > 0 && self.cursorState.currentLimit >= self.cursorState.limit) {\n        return setCursorDeadAndNotified(self, callback);\n      }\n\n      nextFunction(self, callback);\n    });\n  } else if (\n    self.cursorState.documents.length === self.cursorState.cursorIndex &&\n    self.cmd.tailable &&\n    Long.ZERO.equals(self.cursorState.cursorId)\n  ) {\n    return handleCallback(\n      callback,\n      new MongoError({\n        message: 'No more documents in tailed cursor',\n        tailable: self.cmd.tailable,\n        awaitData: self.cmd.awaitData\n      })\n    );\n  } else if (\n    self.cursorState.documents.length === self.cursorState.cursorIndex &&\n    Long.ZERO.equals(self.cursorState.cursorId)\n  ) {\n    setCursorDeadAndNotified(self, callback);\n  } else {\n    if (self.cursorState.limit > 0 && self.cursorState.currentLimit >= self.cursorState.limit) {\n      // Ensure we kill the cursor on the server\n      self.kill(() =>\n        // Set cursor in dead and notified state\n        setCursorDeadAndNotified(self, callback)\n      );\n\n      return;\n    }\n\n    // Increment the current cursor limit\n    self.cursorState.currentLimit += 1;\n\n    // Get the document\n    let doc = self.cursorState.documents[self.cursorState.cursorIndex++];\n\n    // Doc overflow\n    if (!doc || doc.$err) {\n      // Ensure we kill the cursor on the server\n      self.kill(() =>\n        // Set cursor in dead and notified state\n        setCursorDeadAndNotified(self, function() {\n          handleCallback(callback, new MongoError(doc ? doc.$err : undefined));\n        })\n      );\n\n      return;\n    }\n\n    // Transform the doc with passed in transformation method if provided\n    if (self.cursorState.transforms && typeof self.cursorState.transforms.doc === 'function') {\n      doc = self.cursorState.transforms.doc(doc);\n    }\n\n    // Return the document\n    handleCallback(callback, null, doc);\n  }\n}\n\nmodule.exports = {\n  CursorState,\n  CoreCursor\n};\n"],"names":["require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","Logger","ReadPreference","executeOperation","require$$6"],"mappings":"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"}