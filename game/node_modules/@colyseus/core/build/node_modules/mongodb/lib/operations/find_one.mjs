import utils from '../utils.mjs';
import operation from './operation.mjs';

const handleCallback = utils.handleCallback;
const OperationBase = operation.OperationBase;
const toError = utils.toError;
const Aspect = operation.Aspect;
const defineAspects = operation.defineAspects;

class FindOneOperation extends OperationBase {
  constructor(collection, query, options) {
    super(options);

    this.collection = collection;
    this.query = query;
  }

  execute(callback) {
    const coll = this.collection;
    const query = this.query;
    const options = this.options;

    try {
      const cursor = coll
        .find(query, options)
        .limit(-1)
        .batchSize(1);

      // Return the item
      cursor.next((err, item) => {
        if (err != null) return handleCallback(callback, toError(err), null);
        handleCallback(callback, null, item);
      });
    } catch (e) {
      callback(e);
    }
  }
}

defineAspects(FindOneOperation, [Aspect.EXPLAINABLE]);

var find_one = FindOneOperation;

export default find_one;
//# sourceMappingURL=find_one.mjs.map
