{"version":3,"file":"events.js","sources":["../../../../../../../node_modules/mongodb/lib/cmap/events.js"],"sourcesContent":["'use strict';\n\n/**\n * The base class for all monitoring events published from the connection pool\n *\n * @property {number} time A timestamp when the event was created\n * @property {string} address The address (host/port pair) of the pool\n */\nclass ConnectionPoolMonitoringEvent {\n  constructor(pool) {\n    this.time = new Date();\n    this.address = pool.address;\n  }\n}\n\n/**\n * An event published when a connection pool is created\n *\n * @property {Object} options The options used to create this connection pool\n */\nclass ConnectionPoolCreatedEvent extends ConnectionPoolMonitoringEvent {\n  constructor(pool) {\n    super(pool);\n    this.options = pool.options;\n  }\n}\n\n/**\n * An event published when a connection pool is closed\n */\nclass ConnectionPoolClosedEvent extends ConnectionPoolMonitoringEvent {\n  constructor(pool) {\n    super(pool);\n  }\n}\n\n/**\n * An event published when a connection pool creates a new connection\n *\n * @property {number} connectionId A monotonically increasing, per-pool id for the newly created connection\n */\nclass ConnectionCreatedEvent extends ConnectionPoolMonitoringEvent {\n  constructor(pool, connection) {\n    super(pool);\n    this.connectionId = connection.id;\n  }\n}\n\n/**\n * An event published when a connection is ready for use\n *\n * @property {number} connectionId The id of the connection\n */\nclass ConnectionReadyEvent extends ConnectionPoolMonitoringEvent {\n  constructor(pool, connection) {\n    super(pool);\n    this.connectionId = connection.id;\n  }\n}\n\n/**\n * An event published when a connection is closed\n *\n * @property {number} connectionId The id of the connection\n * @property {string} reason The reason the connection was closed\n */\nclass ConnectionClosedEvent extends ConnectionPoolMonitoringEvent {\n  constructor(pool, connection, reason) {\n    super(pool);\n    this.connectionId = connection.id;\n    this.reason = reason || 'unknown';\n  }\n}\n\n/**\n * An event published when a request to check a connection out begins\n */\nclass ConnectionCheckOutStartedEvent extends ConnectionPoolMonitoringEvent {\n  constructor(pool) {\n    super(pool);\n  }\n}\n\n/**\n * An event published when a request to check a connection out fails\n *\n * @property {string} reason The reason the attempt to check out failed\n */\nclass ConnectionCheckOutFailedEvent extends ConnectionPoolMonitoringEvent {\n  constructor(pool, reason) {\n    super(pool);\n    this.reason = reason;\n  }\n}\n\n/**\n * An event published when a connection is checked out of the connection pool\n *\n * @property {number} connectionId The id of the connection\n */\nclass ConnectionCheckedOutEvent extends ConnectionPoolMonitoringEvent {\n  constructor(pool, connection) {\n    super(pool);\n    this.connectionId = connection.id;\n  }\n}\n\n/**\n * An event published when a connection is checked into the connection pool\n *\n * @property {number} connectionId The id of the connection\n */\nclass ConnectionCheckedInEvent extends ConnectionPoolMonitoringEvent {\n  constructor(pool, connection) {\n    super(pool);\n    this.connectionId = connection.id;\n  }\n}\n\n/**\n * An event published when a connection pool is cleared\n */\nclass ConnectionPoolClearedEvent extends ConnectionPoolMonitoringEvent {\n  constructor(pool) {\n    super(pool);\n  }\n}\n\nconst CMAP_EVENT_NAMES = [\n  'connectionPoolCreated',\n  'connectionPoolClosed',\n  'connectionCreated',\n  'connectionReady',\n  'connectionClosed',\n  'connectionCheckOutStarted',\n  'connectionCheckOutFailed',\n  'connectionCheckedOut',\n  'connectionCheckedIn',\n  'connectionPoolCleared'\n];\n\nmodule.exports = {\n  CMAP_EVENT_NAMES,\n  ConnectionPoolCreatedEvent,\n  ConnectionPoolClosedEvent,\n  ConnectionCreatedEvent,\n  ConnectionReadyEvent,\n  ConnectionClosedEvent,\n  ConnectionCheckOutStartedEvent,\n  ConnectionCheckOutFailedEvent,\n  ConnectionCheckedOutEvent,\n  ConnectionCheckedInEvent,\n  ConnectionPoolClearedEvent\n};\n"],"names":[],"mappings":"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"}