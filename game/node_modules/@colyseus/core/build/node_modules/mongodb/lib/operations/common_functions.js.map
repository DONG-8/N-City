{"version":3,"file":"common_functions.js","sources":["../../../../../../../node_modules/mongodb/lib/operations/common_functions.js"],"sourcesContent":["'use strict';\n\nconst applyRetryableWrites = require('../utils').applyRetryableWrites;\nconst applyWriteConcern = require('../utils').applyWriteConcern;\nconst decorateWithCollation = require('../utils').decorateWithCollation;\nconst decorateWithReadConcern = require('../utils').decorateWithReadConcern;\nconst executeCommand = require('./db_ops').executeCommand;\nconst formattedOrderClause = require('../utils').formattedOrderClause;\nconst handleCallback = require('../utils').handleCallback;\nconst MongoError = require('../core').MongoError;\nconst ReadPreference = require('../core').ReadPreference;\nconst toError = require('../utils').toError;\nconst CursorState = require('../core/cursor').CursorState;\nconst maxWireVersion = require('../core/utils').maxWireVersion;\n\n/**\n * Build the count command.\n *\n * @method\n * @param {collectionOrCursor} an instance of a collection or cursor\n * @param {object} query The query for the count.\n * @param {object} [options] Optional settings. See Collection.prototype.count and Cursor.prototype.count for a list of options.\n */\nfunction buildCountCommand(collectionOrCursor, query, options) {\n  const skip = options.skip;\n  const limit = options.limit;\n  let hint = options.hint;\n  const maxTimeMS = options.maxTimeMS;\n  query = query || {};\n\n  // Final query\n  const cmd = {\n    count: options.collectionName,\n    query: query\n  };\n\n  if (collectionOrCursor.s.numberOfRetries) {\n    // collectionOrCursor is a cursor\n    if (collectionOrCursor.options.hint) {\n      hint = collectionOrCursor.options.hint;\n    } else if (collectionOrCursor.cmd.hint) {\n      hint = collectionOrCursor.cmd.hint;\n    }\n    decorateWithCollation(cmd, collectionOrCursor, collectionOrCursor.cmd);\n  } else {\n    decorateWithCollation(cmd, collectionOrCursor, options);\n  }\n\n  // Add limit, skip and maxTimeMS if defined\n  if (typeof skip === 'number') cmd.skip = skip;\n  if (typeof limit === 'number') cmd.limit = limit;\n  if (typeof maxTimeMS === 'number') cmd.maxTimeMS = maxTimeMS;\n  if (hint) cmd.hint = hint;\n\n  // Do we have a readConcern specified\n  decorateWithReadConcern(cmd, collectionOrCursor);\n\n  return cmd;\n}\n\n/**\n * Find and update a document.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {object} query Query object to locate the object to modify.\n * @param {array} sort If multiple docs match, choose the first one in the specified sort order as the object to manipulate.\n * @param {object} doc The fields/vals to be updated.\n * @param {object} [options] Optional settings. See Collection.prototype.findAndModify for a list of options.\n * @param {Collection~findAndModifyCallback} [callback] The command result callback\n * @deprecated use findOneAndUpdate, findOneAndReplace or findOneAndDelete instead\n */\nfunction findAndModify(coll, query, sort, doc, options, callback) {\n  // Create findAndModify command object\n  const queryObject = {\n    findAndModify: coll.collectionName,\n    query: query\n  };\n\n  sort = formattedOrderClause(sort);\n  if (sort) {\n    queryObject.sort = sort;\n  }\n\n  queryObject.new = options.new ? true : false;\n  queryObject.remove = options.remove ? true : false;\n  queryObject.upsert = options.upsert ? true : false;\n\n  const projection = options.projection || options.fields;\n\n  if (projection) {\n    queryObject.fields = projection;\n  }\n\n  if (options.arrayFilters) {\n    queryObject.arrayFilters = options.arrayFilters;\n    delete options.arrayFilters;\n  }\n\n  if (doc && !options.remove) {\n    queryObject.update = doc;\n  }\n\n  if (options.maxTimeMS) queryObject.maxTimeMS = options.maxTimeMS;\n\n  // Either use override on the function, or go back to default on either the collection\n  // level or db\n  options.serializeFunctions = options.serializeFunctions || coll.s.serializeFunctions;\n\n  // No check on the documents\n  options.checkKeys = false;\n\n  // Final options for retryable writes and write concern\n  let finalOptions = Object.assign({}, options);\n  finalOptions = applyRetryableWrites(finalOptions, coll.s.db);\n  finalOptions = applyWriteConcern(finalOptions, { db: coll.s.db, collection: coll }, options);\n\n  // Decorate the findAndModify command with the write Concern\n  if (finalOptions.writeConcern) {\n    queryObject.writeConcern = finalOptions.writeConcern;\n  }\n\n  // Have we specified bypassDocumentValidation\n  if (finalOptions.bypassDocumentValidation === true) {\n    queryObject.bypassDocumentValidation = finalOptions.bypassDocumentValidation;\n  }\n\n  finalOptions.readPreference = ReadPreference.primary;\n\n  // Have we specified collation\n  try {\n    decorateWithCollation(queryObject, coll, finalOptions);\n  } catch (err) {\n    return callback(err, null);\n  }\n\n  // Execute the command\n  executeCommand(coll.s.db, queryObject, finalOptions, (err, result) => {\n    if (err) return handleCallback(callback, err, null);\n\n    return handleCallback(callback, null, result);\n  });\n}\n\n/**\n * Retrieves this collections index info.\n *\n * @method\n * @param {Db} db The Db instance on which to retrieve the index info.\n * @param {string} name The name of the collection.\n * @param {object} [options] Optional settings. See Db.prototype.indexInformation for a list of options.\n * @param {Db~resultCallback} [callback] The command result callback\n */\nfunction indexInformation(db, name, options, callback) {\n  // If we specified full information\n  const full = options['full'] == null ? false : options['full'];\n\n  // Did the user destroy the topology\n  if (db.serverConfig && db.serverConfig.isDestroyed())\n    return callback(new MongoError('topology was destroyed'));\n  // Process all the results from the index command and collection\n  function processResults(indexes) {\n    // Contains all the information\n    let info = {};\n    // Process all the indexes\n    for (let i = 0; i < indexes.length; i++) {\n      const index = indexes[i];\n      // Let's unpack the object\n      info[index.name] = [];\n      for (let name in index.key) {\n        info[index.name].push([name, index.key[name]]);\n      }\n    }\n\n    return info;\n  }\n\n  // Get the list of indexes of the specified collection\n  db.collection(name)\n    .listIndexes(options)\n    .toArray((err, indexes) => {\n      if (err) return callback(toError(err));\n      if (!Array.isArray(indexes)) return handleCallback(callback, null, []);\n      if (full) return handleCallback(callback, null, indexes);\n      handleCallback(callback, null, processResults(indexes));\n    });\n}\n\nfunction prepareDocs(coll, docs, options) {\n  const forceServerObjectId =\n    typeof options.forceServerObjectId === 'boolean'\n      ? options.forceServerObjectId\n      : coll.s.db.options.forceServerObjectId;\n\n  // no need to modify the docs if server sets the ObjectId\n  if (forceServerObjectId === true) {\n    return docs;\n  }\n\n  return docs.map(doc => {\n    if (forceServerObjectId !== true && doc._id == null) {\n      doc._id = coll.s.pkFactory.createPk();\n    }\n\n    return doc;\n  });\n}\n\n// Get the next available document from the cursor, returns null if no more documents are available.\nfunction nextObject(cursor, callback) {\n  if (cursor.s.state === CursorState.CLOSED || (cursor.isDead && cursor.isDead())) {\n    return handleCallback(\n      callback,\n      MongoError.create({ message: 'Cursor is closed', driver: true })\n    );\n  }\n\n  if (cursor.s.state === CursorState.INIT && cursor.cmd && cursor.cmd.sort) {\n    try {\n      cursor.cmd.sort = formattedOrderClause(cursor.cmd.sort);\n    } catch (err) {\n      return handleCallback(callback, err);\n    }\n  }\n\n  // Get the next object\n  cursor._next((err, doc) => {\n    cursor.s.state = CursorState.OPEN;\n    if (err) return handleCallback(callback, err);\n    handleCallback(callback, null, doc);\n  });\n}\n\nfunction insertDocuments(coll, docs, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n  // Ensure we are operating on an array op docs\n  docs = Array.isArray(docs) ? docs : [docs];\n\n  // Final options for retryable writes and write concern\n  let finalOptions = Object.assign({}, options);\n  finalOptions = applyRetryableWrites(finalOptions, coll.s.db);\n  finalOptions = applyWriteConcern(finalOptions, { db: coll.s.db, collection: coll }, options);\n\n  // If keep going set unordered\n  if (finalOptions.keepGoing === true) finalOptions.ordered = false;\n  finalOptions.serializeFunctions = options.serializeFunctions || coll.s.serializeFunctions;\n\n  docs = prepareDocs(coll, docs, options);\n\n  // File inserts\n  coll.s.topology.insert(coll.s.namespace, docs, finalOptions, (err, result) => {\n    if (callback == null) return;\n    if (err) return handleCallback(callback, err);\n    if (result == null) return handleCallback(callback, null, null);\n    if (result.result.code) return handleCallback(callback, toError(result.result));\n    if (result.result.writeErrors)\n      return handleCallback(callback, toError(result.result.writeErrors[0]));\n    // Add docs to the list\n    result.ops = docs;\n    // Return the results\n    handleCallback(callback, null, result);\n  });\n}\n\nfunction removeDocuments(coll, selector, options, callback) {\n  if (typeof options === 'function') {\n    (callback = options), (options = {});\n  } else if (typeof selector === 'function') {\n    callback = selector;\n    options = {};\n    selector = {};\n  }\n\n  // Create an empty options object if the provided one is null\n  options = options || {};\n\n  // Final options for retryable writes and write concern\n  let finalOptions = Object.assign({}, options);\n  finalOptions = applyRetryableWrites(finalOptions, coll.s.db);\n  finalOptions = applyWriteConcern(finalOptions, { db: coll.s.db, collection: coll }, options);\n\n  // If selector is null set empty\n  if (selector == null) selector = {};\n\n  // Build the op\n  const op = { q: selector, limit: 0 };\n  if (options.single) {\n    op.limit = 1;\n  } else if (finalOptions.retryWrites) {\n    finalOptions.retryWrites = false;\n  }\n  if (options.hint) {\n    op.hint = options.hint;\n  }\n\n  // Have we specified collation\n  try {\n    decorateWithCollation(finalOptions, coll, options);\n  } catch (err) {\n    return callback(err, null);\n  }\n\n  if (options.explain !== undefined && maxWireVersion(coll.s.topology) < 3) {\n    return callback\n      ? callback(new MongoError(`server does not support explain on remove`))\n      : undefined;\n  }\n\n  // Execute the remove\n  coll.s.topology.remove(coll.s.namespace, [op], finalOptions, (err, result) => {\n    if (callback == null) return;\n    if (err) return handleCallback(callback, err, null);\n    if (result == null) return handleCallback(callback, null, null);\n    if (result.result.code) return handleCallback(callback, toError(result.result));\n    if (result.result.writeErrors) {\n      return handleCallback(callback, toError(result.result.writeErrors[0]));\n    }\n\n    // Return the results\n    handleCallback(callback, null, result);\n  });\n}\n\nfunction updateDocuments(coll, selector, document, options, callback) {\n  if ('function' === typeof options) (callback = options), (options = null);\n  if (options == null) options = {};\n  if (!('function' === typeof callback)) callback = null;\n\n  // If we are not providing a selector or document throw\n  if (selector == null || typeof selector !== 'object')\n    return callback(toError('selector must be a valid JavaScript object'));\n  if (document == null || typeof document !== 'object')\n    return callback(toError('document must be a valid JavaScript object'));\n\n  // Final options for retryable writes and write concern\n  let finalOptions = Object.assign({}, options);\n  finalOptions = applyRetryableWrites(finalOptions, coll.s.db);\n  finalOptions = applyWriteConcern(finalOptions, { db: coll.s.db, collection: coll }, options);\n\n  // Do we return the actual result document\n  // Either use override on the function, or go back to default on either the collection\n  // level or db\n  finalOptions.serializeFunctions = options.serializeFunctions || coll.s.serializeFunctions;\n\n  // Execute the operation\n  const op = { q: selector, u: document };\n  op.upsert = options.upsert !== void 0 ? !!options.upsert : false;\n  op.multi = options.multi !== void 0 ? !!options.multi : false;\n\n  if (options.hint) {\n    op.hint = options.hint;\n  }\n\n  if (finalOptions.arrayFilters) {\n    op.arrayFilters = finalOptions.arrayFilters;\n    delete finalOptions.arrayFilters;\n  }\n\n  if (finalOptions.retryWrites && op.multi) {\n    finalOptions.retryWrites = false;\n  }\n\n  // Have we specified collation\n  try {\n    decorateWithCollation(finalOptions, coll, options);\n  } catch (err) {\n    return callback(err, null);\n  }\n\n  if (options.explain !== undefined && maxWireVersion(coll.s.topology) < 3) {\n    return callback\n      ? callback(new MongoError(`server does not support explain on update`))\n      : undefined;\n  }\n\n  // Update options\n  coll.s.topology.update(coll.s.namespace, [op], finalOptions, (err, result) => {\n    if (callback == null) return;\n    if (err) return handleCallback(callback, err, null);\n    if (result == null) return handleCallback(callback, null, null);\n    if (result.result.code) return handleCallback(callback, toError(result.result));\n    if (result.result.writeErrors)\n      return handleCallback(callback, toError(result.result.writeErrors[0]));\n    // Return the results\n    handleCallback(callback, null, result);\n  });\n}\n\nmodule.exports = {\n  buildCountCommand,\n  findAndModify,\n  indexInformation,\n  nextObject,\n  prepareDocs,\n  insertDocuments,\n  removeDocuments,\n  updateDocuments\n};\n"],"names":["require$$0","require$$1","require$$2","require$$3","require$$4"],"mappings":"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"}