{"version":3,"file":"upload.js","sources":["../../../../../../../node_modules/mongodb/lib/gridfs-stream/upload.js"],"sourcesContent":["'use strict';\n\nvar core = require('../core');\nvar crypto = require('crypto');\nvar stream = require('stream');\nvar util = require('util');\nvar Buffer = require('safe-buffer').Buffer;\n\nvar ERROR_NAMESPACE_NOT_FOUND = 26;\n\nmodule.exports = GridFSBucketWriteStream;\n\n/**\n * A writable stream that enables you to write buffers to GridFS.\n *\n * Do not instantiate this class directly. Use `openUploadStream()` instead.\n *\n * @class\n * @extends external:Writable\n * @param {GridFSBucket} bucket Handle for this stream's corresponding bucket\n * @param {string} filename The value of the 'filename' key in the files doc\n * @param {object} [options] Optional settings.\n * @param {string|number|object} [options.id] Custom file id for the GridFS file.\n * @param {number} [options.chunkSizeBytes] The chunk size to use, in bytes\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {boolean} [options.disableMD5=false] If true, disables adding an md5 field to file data\n * @fires GridFSBucketWriteStream#error\n * @fires GridFSBucketWriteStream#finish\n */\n\nfunction GridFSBucketWriteStream(bucket, filename, options) {\n  options = options || {};\n  stream.Writable.call(this, options);\n  this.bucket = bucket;\n  this.chunks = bucket.s._chunksCollection;\n  this.filename = filename;\n  this.files = bucket.s._filesCollection;\n  this.options = options;\n  // Signals the write is all done\n  this.done = false;\n\n  this.id = options.id ? options.id : core.BSON.ObjectId();\n  this.chunkSizeBytes = this.options.chunkSizeBytes;\n  this.bufToStore = Buffer.alloc(this.chunkSizeBytes);\n  this.length = 0;\n  this.md5 = !options.disableMD5 && crypto.createHash('md5');\n  this.n = 0;\n  this.pos = 0;\n  this.state = {\n    streamEnd: false,\n    outstandingRequests: 0,\n    errored: false,\n    aborted: false,\n    promiseLibrary: this.bucket.s.promiseLibrary\n  };\n\n  if (!this.bucket.s.calledOpenUploadStream) {\n    this.bucket.s.calledOpenUploadStream = true;\n\n    var _this = this;\n    checkIndexes(this, function() {\n      _this.bucket.s.checkedIndexes = true;\n      _this.bucket.emit('index');\n    });\n  }\n}\n\nutil.inherits(GridFSBucketWriteStream, stream.Writable);\n\n/**\n * An error occurred\n *\n * @event GridFSBucketWriteStream#error\n * @type {Error}\n */\n\n/**\n * `end()` was called and the write stream successfully wrote the file\n * metadata and all the chunks to MongoDB.\n *\n * @event GridFSBucketWriteStream#finish\n * @type {object}\n */\n\n/**\n * Write a buffer to the stream.\n *\n * @method\n * @param {Buffer} chunk Buffer to write\n * @param {String} encoding Optional encoding for the buffer\n * @param {GridFSBucket~errorCallback} callback Function to call when the chunk was added to the buffer, or if the entire chunk was persisted to MongoDB if this chunk caused a flush.\n * @return {Boolean} False if this write required flushing a chunk to MongoDB. True otherwise.\n */\n\nGridFSBucketWriteStream.prototype.write = function(chunk, encoding, callback) {\n  var _this = this;\n  return waitForIndexes(this, function() {\n    return doWrite(_this, chunk, encoding, callback);\n  });\n};\n\n/**\n * Places this write stream into an aborted state (all future writes fail)\n * and deletes all chunks that have already been written.\n *\n * @method\n * @param {GridFSBucket~errorCallback} callback called when chunks are successfully removed or error occurred\n * @return {Promise} if no callback specified\n */\n\nGridFSBucketWriteStream.prototype.abort = function(callback) {\n  if (this.state.streamEnd) {\n    var error = new Error('Cannot abort a stream that has already completed');\n    if (typeof callback === 'function') {\n      return callback(error);\n    }\n    return this.state.promiseLibrary.reject(error);\n  }\n  if (this.state.aborted) {\n    error = new Error('Cannot call abort() on a stream twice');\n    if (typeof callback === 'function') {\n      return callback(error);\n    }\n    return this.state.promiseLibrary.reject(error);\n  }\n  this.state.aborted = true;\n  this.chunks.deleteMany({ files_id: this.id }, function(error) {\n    if (typeof callback === 'function') callback(error);\n  });\n};\n\n/**\n * Tells the stream that no more data will be coming in. The stream will\n * persist the remaining data to MongoDB, write the files document, and\n * then emit a 'finish' event.\n *\n * @method\n * @param {Buffer} chunk Buffer to write\n * @param {String} encoding Optional encoding for the buffer\n * @param {GridFSBucket~errorCallback} callback Function to call when all files and chunks have been persisted to MongoDB\n */\n\nGridFSBucketWriteStream.prototype.end = function(chunk, encoding, callback) {\n  var _this = this;\n  if (typeof chunk === 'function') {\n    (callback = chunk), (chunk = null), (encoding = null);\n  } else if (typeof encoding === 'function') {\n    (callback = encoding), (encoding = null);\n  }\n\n  if (checkAborted(this, callback)) {\n    return;\n  }\n  this.state.streamEnd = true;\n\n  if (callback) {\n    this.once('finish', function(result) {\n      callback(null, result);\n    });\n  }\n\n  if (!chunk) {\n    waitForIndexes(this, function() {\n      writeRemnant(_this);\n    });\n    return;\n  }\n\n  this.write(chunk, encoding, function() {\n    writeRemnant(_this);\n  });\n};\n\n/**\n * @ignore\n */\n\nfunction __handleError(_this, error, callback) {\n  if (_this.state.errored) {\n    return;\n  }\n  _this.state.errored = true;\n  if (callback) {\n    return callback(error);\n  }\n  _this.emit('error', error);\n}\n\n/**\n * @ignore\n */\n\nfunction createChunkDoc(filesId, n, data) {\n  return {\n    _id: core.BSON.ObjectId(),\n    files_id: filesId,\n    n: n,\n    data: data\n  };\n}\n\n/**\n * @ignore\n */\n\nfunction checkChunksIndex(_this, callback) {\n  _this.chunks.listIndexes().toArray(function(error, indexes) {\n    if (error) {\n      // Collection doesn't exist so create index\n      if (error.code === ERROR_NAMESPACE_NOT_FOUND) {\n        var index = { files_id: 1, n: 1 };\n        _this.chunks.createIndex(index, { background: false, unique: true }, function(error) {\n          if (error) {\n            return callback(error);\n          }\n\n          callback();\n        });\n        return;\n      }\n      return callback(error);\n    }\n\n    var hasChunksIndex = false;\n    indexes.forEach(function(index) {\n      if (index.key) {\n        var keys = Object.keys(index.key);\n        if (keys.length === 2 && index.key.files_id === 1 && index.key.n === 1) {\n          hasChunksIndex = true;\n        }\n      }\n    });\n\n    if (hasChunksIndex) {\n      callback();\n    } else {\n      index = { files_id: 1, n: 1 };\n      var indexOptions = getWriteOptions(_this);\n\n      indexOptions.background = false;\n      indexOptions.unique = true;\n\n      _this.chunks.createIndex(index, indexOptions, function(error) {\n        if (error) {\n          return callback(error);\n        }\n\n        callback();\n      });\n    }\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction checkDone(_this, callback) {\n  if (_this.done) return true;\n  if (_this.state.streamEnd && _this.state.outstandingRequests === 0 && !_this.state.errored) {\n    // Set done so we dont' trigger duplicate createFilesDoc\n    _this.done = true;\n    // Create a new files doc\n    var filesDoc = createFilesDoc(\n      _this.id,\n      _this.length,\n      _this.chunkSizeBytes,\n      _this.md5 && _this.md5.digest('hex'),\n      _this.filename,\n      _this.options.contentType,\n      _this.options.aliases,\n      _this.options.metadata\n    );\n\n    if (checkAborted(_this, callback)) {\n      return false;\n    }\n\n    _this.files.insertOne(filesDoc, getWriteOptions(_this), function(error) {\n      if (error) {\n        return __handleError(_this, error, callback);\n      }\n      _this.emit('finish', filesDoc);\n      _this.emit('close');\n    });\n\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * @ignore\n */\n\nfunction checkIndexes(_this, callback) {\n  _this.files.findOne({}, { _id: 1 }, function(error, doc) {\n    if (error) {\n      return callback(error);\n    }\n    if (doc) {\n      return callback();\n    }\n\n    _this.files.listIndexes().toArray(function(error, indexes) {\n      if (error) {\n        // Collection doesn't exist so create index\n        if (error.code === ERROR_NAMESPACE_NOT_FOUND) {\n          var index = { filename: 1, uploadDate: 1 };\n          _this.files.createIndex(index, { background: false }, function(error) {\n            if (error) {\n              return callback(error);\n            }\n\n            checkChunksIndex(_this, callback);\n          });\n          return;\n        }\n        return callback(error);\n      }\n\n      var hasFileIndex = false;\n      indexes.forEach(function(index) {\n        var keys = Object.keys(index.key);\n        if (keys.length === 2 && index.key.filename === 1 && index.key.uploadDate === 1) {\n          hasFileIndex = true;\n        }\n      });\n\n      if (hasFileIndex) {\n        checkChunksIndex(_this, callback);\n      } else {\n        index = { filename: 1, uploadDate: 1 };\n\n        var indexOptions = getWriteOptions(_this);\n\n        indexOptions.background = false;\n\n        _this.files.createIndex(index, indexOptions, function(error) {\n          if (error) {\n            return callback(error);\n          }\n\n          checkChunksIndex(_this, callback);\n        });\n      }\n    });\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction createFilesDoc(_id, length, chunkSize, md5, filename, contentType, aliases, metadata) {\n  var ret = {\n    _id: _id,\n    length: length,\n    chunkSize: chunkSize,\n    uploadDate: new Date(),\n    filename: filename\n  };\n\n  if (md5) {\n    ret.md5 = md5;\n  }\n\n  if (contentType) {\n    ret.contentType = contentType;\n  }\n\n  if (aliases) {\n    ret.aliases = aliases;\n  }\n\n  if (metadata) {\n    ret.metadata = metadata;\n  }\n\n  return ret;\n}\n\n/**\n * @ignore\n */\n\nfunction doWrite(_this, chunk, encoding, callback) {\n  if (checkAborted(_this, callback)) {\n    return false;\n  }\n\n  var inputBuf = Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk, encoding);\n\n  _this.length += inputBuf.length;\n\n  // Input is small enough to fit in our buffer\n  if (_this.pos + inputBuf.length < _this.chunkSizeBytes) {\n    inputBuf.copy(_this.bufToStore, _this.pos);\n    _this.pos += inputBuf.length;\n\n    callback && callback();\n\n    // Note that we reverse the typical semantics of write's return value\n    // to be compatible with node's `.pipe()` function.\n    // True means client can keep writing.\n    return true;\n  }\n\n  // Otherwise, buffer is too big for current chunk, so we need to flush\n  // to MongoDB.\n  var inputBufRemaining = inputBuf.length;\n  var spaceRemaining = _this.chunkSizeBytes - _this.pos;\n  var numToCopy = Math.min(spaceRemaining, inputBuf.length);\n  var outstandingRequests = 0;\n  while (inputBufRemaining > 0) {\n    var inputBufPos = inputBuf.length - inputBufRemaining;\n    inputBuf.copy(_this.bufToStore, _this.pos, inputBufPos, inputBufPos + numToCopy);\n    _this.pos += numToCopy;\n    spaceRemaining -= numToCopy;\n    if (spaceRemaining === 0) {\n      if (_this.md5) {\n        _this.md5.update(_this.bufToStore);\n      }\n      var doc = createChunkDoc(_this.id, _this.n, Buffer.from(_this.bufToStore));\n      ++_this.state.outstandingRequests;\n      ++outstandingRequests;\n\n      if (checkAborted(_this, callback)) {\n        return false;\n      }\n\n      _this.chunks.insertOne(doc, getWriteOptions(_this), function(error) {\n        if (error) {\n          return __handleError(_this, error);\n        }\n        --_this.state.outstandingRequests;\n        --outstandingRequests;\n\n        if (!outstandingRequests) {\n          _this.emit('drain', doc);\n          callback && callback();\n          checkDone(_this);\n        }\n      });\n\n      spaceRemaining = _this.chunkSizeBytes;\n      _this.pos = 0;\n      ++_this.n;\n    }\n    inputBufRemaining -= numToCopy;\n    numToCopy = Math.min(spaceRemaining, inputBufRemaining);\n  }\n\n  // Note that we reverse the typical semantics of write's return value\n  // to be compatible with node's `.pipe()` function.\n  // False means the client should wait for the 'drain' event.\n  return false;\n}\n\n/**\n * @ignore\n */\n\nfunction getWriteOptions(_this) {\n  var obj = {};\n  if (_this.options.writeConcern) {\n    obj.w = _this.options.writeConcern.w;\n    obj.wtimeout = _this.options.writeConcern.wtimeout;\n    obj.j = _this.options.writeConcern.j;\n  }\n  return obj;\n}\n\n/**\n * @ignore\n */\n\nfunction waitForIndexes(_this, callback) {\n  if (_this.bucket.s.checkedIndexes) {\n    return callback(false);\n  }\n\n  _this.bucket.once('index', function() {\n    callback(true);\n  });\n\n  return true;\n}\n\n/**\n * @ignore\n */\n\nfunction writeRemnant(_this, callback) {\n  // Buffer is empty, so don't bother to insert\n  if (_this.pos === 0) {\n    return checkDone(_this, callback);\n  }\n\n  ++_this.state.outstandingRequests;\n\n  // Create a new buffer to make sure the buffer isn't bigger than it needs\n  // to be.\n  var remnant = Buffer.alloc(_this.pos);\n  _this.bufToStore.copy(remnant, 0, 0, _this.pos);\n  if (_this.md5) {\n    _this.md5.update(remnant);\n  }\n  var doc = createChunkDoc(_this.id, _this.n, remnant);\n\n  // If the stream was aborted, do not write remnant\n  if (checkAborted(_this, callback)) {\n    return false;\n  }\n\n  _this.chunks.insertOne(doc, getWriteOptions(_this), function(error) {\n    if (error) {\n      return __handleError(_this, error);\n    }\n    --_this.state.outstandingRequests;\n    checkDone(_this);\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction checkAborted(_this, callback) {\n  if (_this.state.aborted) {\n    if (typeof callback === 'function') {\n      callback(new Error('this stream has been aborted'));\n    }\n    return true;\n  }\n  return false;\n}\n"],"names":["require$$0","stream","core","crypto","util"],"mappings":"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"}