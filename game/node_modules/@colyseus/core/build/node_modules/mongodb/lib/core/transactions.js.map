{"version":3,"file":"transactions.js","sources":["../../../../../../../node_modules/mongodb/lib/core/transactions.js"],"sourcesContent":["'use strict';\nconst MongoError = require('./error').MongoError;\nconst ReadPreference = require('./topologies/read_preference');\nconst ReadConcern = require('../read_concern');\nconst WriteConcern = require('../write_concern');\n\nlet TxnState;\nlet stateMachine;\n\n(() => {\n  const NO_TRANSACTION = 'NO_TRANSACTION';\n  const STARTING_TRANSACTION = 'STARTING_TRANSACTION';\n  const TRANSACTION_IN_PROGRESS = 'TRANSACTION_IN_PROGRESS';\n  const TRANSACTION_COMMITTED = 'TRANSACTION_COMMITTED';\n  const TRANSACTION_COMMITTED_EMPTY = 'TRANSACTION_COMMITTED_EMPTY';\n  const TRANSACTION_ABORTED = 'TRANSACTION_ABORTED';\n\n  TxnState = {\n    NO_TRANSACTION,\n    STARTING_TRANSACTION,\n    TRANSACTION_IN_PROGRESS,\n    TRANSACTION_COMMITTED,\n    TRANSACTION_COMMITTED_EMPTY,\n    TRANSACTION_ABORTED\n  };\n\n  stateMachine = {\n    [NO_TRANSACTION]: [NO_TRANSACTION, STARTING_TRANSACTION],\n    [STARTING_TRANSACTION]: [\n      TRANSACTION_IN_PROGRESS,\n      TRANSACTION_COMMITTED,\n      TRANSACTION_COMMITTED_EMPTY,\n      TRANSACTION_ABORTED\n    ],\n    [TRANSACTION_IN_PROGRESS]: [\n      TRANSACTION_IN_PROGRESS,\n      TRANSACTION_COMMITTED,\n      TRANSACTION_ABORTED\n    ],\n    [TRANSACTION_COMMITTED]: [\n      TRANSACTION_COMMITTED,\n      TRANSACTION_COMMITTED_EMPTY,\n      STARTING_TRANSACTION,\n      NO_TRANSACTION\n    ],\n    [TRANSACTION_ABORTED]: [STARTING_TRANSACTION, NO_TRANSACTION],\n    [TRANSACTION_COMMITTED_EMPTY]: [TRANSACTION_COMMITTED_EMPTY, NO_TRANSACTION]\n  };\n})();\n\n/**\n * The MongoDB ReadConcern, which allows for control of the consistency and isolation properties\n * of the data read from replica sets and replica set shards.\n * @typedef {Object} ReadConcern\n * @property {'local'|'available'|'majority'|'linearizable'|'snapshot'} level The readConcern Level\n * @see https://docs.mongodb.com/manual/reference/read-concern/\n */\n\n/**\n * A MongoDB WriteConcern, which describes the level of acknowledgement\n * requested from MongoDB for write operations.\n * @typedef {Object} WriteConcern\n * @property {number|'majority'|string} [w=1] requests acknowledgement that the write operation has\n * propagated to a specified number of mongod hosts\n * @property {boolean} [j=false] requests acknowledgement from MongoDB that the write operation has\n * been written to the journal\n * @property {number} [wtimeout] a time limit, in milliseconds, for the write concern\n * @see https://docs.mongodb.com/manual/reference/write-concern/\n */\n\n/**\n * Configuration options for a transaction.\n * @typedef {Object} TransactionOptions\n * @property {ReadConcern} [readConcern] A default read concern for commands in this transaction\n * @property {WriteConcern} [writeConcern] A default writeConcern for commands in this transaction\n * @property {ReadPreference} [readPreference] A default read preference for commands in this transaction\n */\n\n/**\n * A class maintaining state related to a server transaction. Internal Only\n * @ignore\n */\nclass Transaction {\n  /**\n   * Create a transaction\n   *\n   * @ignore\n   * @param {TransactionOptions} [options] Optional settings\n   */\n  constructor(options) {\n    options = options || {};\n\n    this.state = TxnState.NO_TRANSACTION;\n    this.options = {};\n\n    const writeConcern = WriteConcern.fromOptions(options);\n    if (writeConcern) {\n      if (writeConcern.w <= 0) {\n        throw new MongoError('Transactions do not support unacknowledged write concern');\n      }\n\n      this.options.writeConcern = writeConcern;\n    }\n\n    if (options.readConcern) {\n      this.options.readConcern = ReadConcern.fromOptions(options);\n    }\n\n    if (options.readPreference) {\n      this.options.readPreference = ReadPreference.fromOptions(options);\n    }\n\n    if (options.maxCommitTimeMS) {\n      this.options.maxTimeMS = options.maxCommitTimeMS;\n    }\n\n    // TODO: This isn't technically necessary\n    this._pinnedServer = undefined;\n    this._recoveryToken = undefined;\n  }\n\n  get server() {\n    return this._pinnedServer;\n  }\n\n  get recoveryToken() {\n    return this._recoveryToken;\n  }\n\n  get isPinned() {\n    return !!this.server;\n  }\n\n  /**\n   * @ignore\n   * @return Whether this session is presently in a transaction\n   */\n  get isActive() {\n    return (\n      [TxnState.STARTING_TRANSACTION, TxnState.TRANSACTION_IN_PROGRESS].indexOf(this.state) !== -1\n    );\n  }\n\n  /**\n   * Transition the transaction in the state machine\n   * @ignore\n   * @param {TxnState} state The new state to transition to\n   */\n  transition(nextState) {\n    const nextStates = stateMachine[this.state];\n    if (nextStates && nextStates.indexOf(nextState) !== -1) {\n      this.state = nextState;\n      if (this.state === TxnState.NO_TRANSACTION || this.state === TxnState.STARTING_TRANSACTION) {\n        this.unpinServer();\n      }\n      return;\n    }\n\n    throw new MongoError(\n      `Attempted illegal state transition from [${this.state}] to [${nextState}]`\n    );\n  }\n\n  pinServer(server) {\n    if (this.isActive) {\n      this._pinnedServer = server;\n    }\n  }\n\n  unpinServer() {\n    this._pinnedServer = undefined;\n  }\n}\n\nfunction isTransactionCommand(command) {\n  return !!(command.commitTransaction || command.abortTransaction);\n}\n\nmodule.exports = { TxnState, Transaction, isTransactionCommand };\n"],"names":["require$$0","WriteConcern","ReadConcern","ReadPreference"],"mappings":"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"}