{"version":3,"file":"encrypter.mjs","sources":["../../../../../../node_modules/mongodb/lib/encrypter.js"],"sourcesContent":["'use strict';\nconst MongoClient = require('./mongo_client');\nconst BSON = require('./core/connection/utils').retrieveBSON();\nconst MongoError = require('./core/error').MongoError;\n\ntry {\n  require.resolve('mongodb-client-encryption');\n} catch (err) {\n  throw new MongoError(\n    'Auto-encryption requested, but the module is not installed. ' +\n      'Please add `mongodb-client-encryption` as a dependency of your project'\n  );\n}\n\nconst mongodbClientEncryption = require('mongodb-client-encryption');\nif (typeof mongodbClientEncryption.extension !== 'function') {\n  throw new MongoError(\n    'loaded version of `mongodb-client-encryption` does not have property `extension`. ' +\n      'Please make sure you are loading the correct version of `mongodb-client-encryption`'\n  );\n}\nconst AutoEncrypter = mongodbClientEncryption.extension(require('../index')).AutoEncrypter;\n\nconst kInternalClient = Symbol('internalClient');\n\nclass Encrypter {\n  /**\n   * @param {MongoClient} client\n   * @param {{autoEncryption: import('./mongo_client').AutoEncryptionOptions, bson: object}} options\n   */\n  constructor(client, options) {\n    this.bypassAutoEncryption = !!options.autoEncryption.bypassAutoEncryption;\n    this.needsConnecting = false;\n\n    if (options.maxPoolSize === 0 && options.autoEncryption.keyVaultClient == null) {\n      options.autoEncryption.keyVaultClient = client;\n    } else if (options.autoEncryption.keyVaultClient == null) {\n      options.autoEncryption.keyVaultClient = this.getInternalClient(client);\n    }\n\n    if (this.bypassAutoEncryption) {\n      options.autoEncryption.metadataClient = undefined;\n    } else if (options.maxPoolSize === 0) {\n      options.autoEncryption.metadataClient = client;\n    } else {\n      options.autoEncryption.metadataClient = this.getInternalClient(client);\n    }\n\n    options.autoEncryption.bson = Encrypter.makeBSON(options);\n\n    this.autoEncrypter = new AutoEncrypter(client, options.autoEncryption);\n  }\n\n  getInternalClient(client) {\n    if (!this[kInternalClient]) {\n      const clonedOptions = {};\n\n      for (const key of Object.keys(client.s.options)) {\n        if (\n          ['autoEncryption', 'minPoolSize', 'servers', 'caseTranslate', 'dbName'].indexOf(key) !==\n          -1\n        )\n          continue;\n        clonedOptions[key] = client.s.options[key];\n      }\n\n      clonedOptions.minPoolSize = 0;\n\n      const allEvents = [\n        // APM\n        'commandStarted',\n        'commandSucceeded',\n        'commandFailed',\n\n        // SDAM\n        'serverOpening',\n        'serverClosed',\n        'serverDescriptionChanged',\n        'serverHeartbeatStarted',\n        'serverHeartbeatSucceeded',\n        'serverHeartbeatFailed',\n        'topologyOpening',\n        'topologyClosed',\n        'topologyDescriptionChanged',\n\n        // Legacy\n        'joined',\n        'left',\n        'ping',\n        'ha',\n\n        // CMAP\n        'connectionPoolCreated',\n        'connectionPoolClosed',\n        'connectionCreated',\n        'connectionReady',\n        'connectionClosed',\n        'connectionCheckOutStarted',\n        'connectionCheckOutFailed',\n        'connectionCheckedOut',\n        'connectionCheckedIn',\n        'connectionPoolCleared'\n      ];\n\n      this[kInternalClient] = new MongoClient(client.s.url, clonedOptions);\n\n      for (const eventName of allEvents) {\n        for (const listener of client.listeners(eventName)) {\n          this[kInternalClient].on(eventName, listener);\n        }\n      }\n\n      client.on('newListener', (eventName, listener) => {\n        this[kInternalClient].on(eventName, listener);\n      });\n\n      this.needsConnecting = true;\n    }\n    return this[kInternalClient];\n  }\n\n  connectInternalClient(callback) {\n    if (this.needsConnecting) {\n      this.needsConnecting = false;\n      return this[kInternalClient].connect(callback);\n    }\n\n    return callback();\n  }\n\n  close(client, force, callback) {\n    this.autoEncrypter.teardown(e => {\n      if (this[kInternalClient] && client !== this[kInternalClient]) {\n        return this[kInternalClient].close(force, callback);\n      }\n      callback(e);\n    });\n  }\n\n  static makeBSON(options) {\n    return (\n      (options || {}).bson ||\n      new BSON([\n        BSON.Binary,\n        BSON.Code,\n        BSON.DBRef,\n        BSON.Decimal128,\n        BSON.Double,\n        BSON.Int32,\n        BSON.Long,\n        BSON.Map,\n        BSON.MaxKey,\n        BSON.MinKey,\n        BSON.ObjectId,\n        BSON.BSONRegExp,\n        BSON.Symbol,\n        BSON.Timestamp\n      ])\n    );\n  }\n}\n\nmodule.exports = { Encrypter };\n"],"names":["require$$0","require$$1","require$$2","MongoClient"],"mappings":"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"}