{"version":3,"file":"connect.mjs","sources":["../../../../../../../node_modules/mongodb/lib/operations/connect.js"],"sourcesContent":["'use strict';\n\nconst deprecate = require('util').deprecate;\nconst Logger = require('../core').Logger;\nconst MongoCredentials = require('../core').MongoCredentials;\nconst MongoError = require('../core').MongoError;\nconst Mongos = require('../topologies/mongos');\nconst NativeTopology = require('../topologies/native_topology');\nconst parse = require('../core').parseConnectionString;\nconst ReadConcern = require('../read_concern');\nconst ReadPreference = require('../core').ReadPreference;\nconst ReplSet = require('../topologies/replset');\nconst Server = require('../topologies/server');\nconst ServerSessionPool = require('../core').Sessions.ServerSessionPool;\nconst emitDeprecationWarning = require('../utils').emitDeprecationWarning;\nconst emitWarningOnce = require('../utils').emitWarningOnce;\nconst fs = require('fs');\nconst WriteConcern = require('../write_concern');\nconst CMAP_EVENT_NAMES = require('../cmap/events').CMAP_EVENT_NAMES;\n\nlet client;\nfunction loadClient() {\n  if (!client) {\n    client = require('../mongo_client');\n  }\n  return client;\n}\n\nconst legacyParse = deprecate(\n  require('../url_parser'),\n  'current URL string parser is deprecated, and will be removed in a future version. ' +\n    'To use the new parser, pass option { useNewUrlParser: true } to MongoClient.connect.'\n);\n\nconst AUTH_MECHANISM_INTERNAL_MAP = {\n  DEFAULT: 'default',\n  PLAIN: 'plain',\n  GSSAPI: 'gssapi',\n  'MONGODB-CR': 'mongocr',\n  'MONGODB-X509': 'x509',\n  'MONGODB-AWS': 'mongodb-aws',\n  'SCRAM-SHA-1': 'scram-sha-1',\n  'SCRAM-SHA-256': 'scram-sha-256'\n};\n\nconst monitoringEvents = [\n  'timeout',\n  'close',\n  'serverOpening',\n  'serverDescriptionChanged',\n  'serverHeartbeatStarted',\n  'serverHeartbeatSucceeded',\n  'serverHeartbeatFailed',\n  'serverClosed',\n  'topologyOpening',\n  'topologyClosed',\n  'topologyDescriptionChanged',\n  'commandStarted',\n  'commandSucceeded',\n  'commandFailed',\n  'joined',\n  'left',\n  'ping',\n  'ha',\n  'all',\n  'fullsetup',\n  'open'\n];\n\nconst VALID_AUTH_MECHANISMS = new Set([\n  'DEFAULT',\n  'PLAIN',\n  'GSSAPI',\n  'MONGODB-CR',\n  'MONGODB-X509',\n  'MONGODB-AWS',\n  'SCRAM-SHA-1',\n  'SCRAM-SHA-256'\n]);\n\nconst validOptionNames = [\n  'poolSize',\n  'ssl',\n  'sslValidate',\n  'sslCA',\n  'sslCert',\n  'sslKey',\n  'sslPass',\n  'sslCRL',\n  'autoReconnect',\n  'noDelay',\n  'keepAlive',\n  'keepAliveInitialDelay',\n  'connectTimeoutMS',\n  'family',\n  'socketTimeoutMS',\n  'reconnectTries',\n  'reconnectInterval',\n  'ha',\n  'haInterval',\n  'replicaSet',\n  'secondaryAcceptableLatencyMS',\n  'acceptableLatencyMS',\n  'connectWithNoPrimary',\n  'authSource',\n  'w',\n  'wtimeout',\n  'j',\n  'writeConcern',\n  'forceServerObjectId',\n  'serializeFunctions',\n  'ignoreUndefined',\n  'raw',\n  'bufferMaxEntries',\n  'readPreference',\n  'pkFactory',\n  'promiseLibrary',\n  'readConcern',\n  'maxStalenessSeconds',\n  'loggerLevel',\n  'logger',\n  'promoteValues',\n  'promoteBuffers',\n  'promoteLongs',\n  'domainsEnabled',\n  'checkServerIdentity',\n  'validateOptions',\n  'appname',\n  'auth',\n  'user',\n  'password',\n  'authMechanism',\n  'compression',\n  'fsync',\n  'readPreferenceTags',\n  'numberOfRetries',\n  'auto_reconnect',\n  'minSize',\n  'monitorCommands',\n  'retryWrites',\n  'retryReads',\n  'useNewUrlParser',\n  'useUnifiedTopology',\n  'serverSelectionTimeoutMS',\n  'useRecoveryToken',\n  'autoEncryption',\n  'driverInfo',\n  'tls',\n  'tlsInsecure',\n  'tlsinsecure',\n  'tlsAllowInvalidCertificates',\n  'tlsAllowInvalidHostnames',\n  'tlsCAFile',\n  'tlsCertificateFile',\n  'tlsCertificateKeyFile',\n  'tlsCertificateKeyFilePassword',\n  'minHeartbeatFrequencyMS',\n  'heartbeatFrequencyMS',\n  'directConnection',\n  'appName',\n\n  // CMAP options\n  'maxPoolSize',\n  'minPoolSize',\n  'maxIdleTimeMS',\n  'waitQueueTimeoutMS'\n];\n\nconst ignoreOptionNames = ['native_parser'];\nconst legacyOptionNames = ['server', 'replset', 'replSet', 'mongos', 'db'];\n\n// Validate options object\nfunction validOptions(options) {\n  const _validOptions = validOptionNames.concat(legacyOptionNames);\n\n  for (const name in options) {\n    if (ignoreOptionNames.indexOf(name) !== -1) {\n      continue;\n    }\n\n    if (_validOptions.indexOf(name) === -1) {\n      if (options.validateOptions) {\n        return new MongoError(`option ${name} is not supported`);\n      } else {\n        emitWarningOnce(`the options [${name}] is not supported`);\n      }\n    }\n\n    if (legacyOptionNames.indexOf(name) !== -1) {\n      emitWarningOnce(\n        `the server/replset/mongos/db options are deprecated, ` +\n          `all their options are supported at the top level of the options object [${validOptionNames}]`\n      );\n    }\n  }\n}\n\nconst LEGACY_OPTIONS_MAP = validOptionNames.reduce((obj, name) => {\n  obj[name.toLowerCase()] = name;\n  return obj;\n}, {});\n\nfunction addListeners(mongoClient, topology) {\n  topology.on('authenticated', createListener(mongoClient, 'authenticated'));\n  topology.on('error', createListener(mongoClient, 'error'));\n  topology.on('timeout', createListener(mongoClient, 'timeout'));\n  topology.on('close', createListener(mongoClient, 'close'));\n  topology.on('parseError', createListener(mongoClient, 'parseError'));\n  topology.once('open', createListener(mongoClient, 'open'));\n  topology.once('fullsetup', createListener(mongoClient, 'fullsetup'));\n  topology.once('all', createListener(mongoClient, 'all'));\n  topology.on('reconnect', createListener(mongoClient, 'reconnect'));\n}\n\nfunction assignTopology(client, topology) {\n  client.topology = topology;\n\n  if (!(topology instanceof NativeTopology)) {\n    topology.s.sessionPool = new ServerSessionPool(topology.s.coreTopology);\n  }\n}\n\n// Clear out all events\nfunction clearAllEvents(topology) {\n  monitoringEvents.forEach(event => topology.removeAllListeners(event));\n}\n\n// Collect all events in order from SDAM\nfunction collectEvents(mongoClient, topology) {\n  let MongoClient = loadClient();\n  const collectedEvents = [];\n\n  if (mongoClient instanceof MongoClient) {\n    monitoringEvents.forEach(event => {\n      topology.on(event, (object1, object2) => {\n        if (event === 'open') {\n          collectedEvents.push({ event: event, object1: mongoClient });\n        } else {\n          collectedEvents.push({ event: event, object1: object1, object2: object2 });\n        }\n      });\n    });\n  }\n\n  return collectedEvents;\n}\n\nfunction resolveTLSOptions(options) {\n  if (options.tls == null) {\n    return;\n  }\n\n  ['sslCA', 'sslKey', 'sslCert'].forEach(optionName => {\n    if (options[optionName]) {\n      options[optionName] = fs.readFileSync(options[optionName]);\n    }\n  });\n}\n\nfunction connect(mongoClient, url, options, callback) {\n  options = Object.assign({}, options);\n\n  // If callback is null throw an exception\n  if (callback == null) {\n    throw new Error('no callback function provided');\n  }\n\n  let didRequestAuthentication = false;\n  const logger = Logger('MongoClient', options);\n\n  // Did we pass in a Server/ReplSet/Mongos\n  if (url instanceof Server || url instanceof ReplSet || url instanceof Mongos) {\n    return connectWithUrl(mongoClient, url, options, connectCallback);\n  }\n\n  const useNewUrlParser = options.useNewUrlParser !== false;\n\n  const parseFn = useNewUrlParser ? parse : legacyParse;\n  const transform = useNewUrlParser ? transformUrlOptions : legacyTransformUrlOptions;\n\n  parseFn(url, options, (err, _object) => {\n    // Do not attempt to connect if parsing error\n    if (err) return callback(err);\n\n    // Flatten\n    const object = transform(_object);\n\n    // Parse the string\n    const _finalOptions = createUnifiedOptions(object, options);\n\n    // Check if we have connection and socket timeout set\n    if (_finalOptions.socketTimeoutMS == null) _finalOptions.socketTimeoutMS = 0;\n    if (_finalOptions.connectTimeoutMS == null) _finalOptions.connectTimeoutMS = 10000;\n    if (_finalOptions.retryWrites == null) _finalOptions.retryWrites = true;\n    if (_finalOptions.useRecoveryToken == null) _finalOptions.useRecoveryToken = true;\n    if (_finalOptions.readPreference == null) _finalOptions.readPreference = 'primary';\n\n    if (_finalOptions.db_options && _finalOptions.db_options.auth) {\n      delete _finalOptions.db_options.auth;\n    }\n\n    // resolve tls options if needed\n    resolveTLSOptions(_finalOptions);\n\n    // Store the merged options object\n    mongoClient.s.options = _finalOptions;\n\n    // Apply read and write concern from parsed url\n    mongoClient.s.readPreference = ReadPreference.fromOptions(_finalOptions);\n    mongoClient.s.writeConcern = WriteConcern.fromOptions(_finalOptions);\n\n    // Failure modes\n    if (object.servers.length === 0) {\n      return callback(new Error('connection string must contain at least one seed host'));\n    }\n\n    if (_finalOptions.auth && !_finalOptions.credentials) {\n      try {\n        didRequestAuthentication = true;\n        _finalOptions.credentials = generateCredentials(\n          mongoClient,\n          _finalOptions.auth.user,\n          _finalOptions.auth.password,\n          _finalOptions\n        );\n      } catch (err) {\n        return callback(err);\n      }\n    }\n\n    if (_finalOptions.useUnifiedTopology) {\n      return createTopology(mongoClient, 'unified', _finalOptions, connectCallback);\n    }\n\n    emitWarningOnce(\n      'Current Server Discovery and Monitoring engine is deprecated, and will be removed in a future version. To use the new Server Discover and Monitoring engine, pass option { useUnifiedTopology: true } to the MongoClient constructor.'\n    );\n\n    // Do we have a replicaset then skip discovery and go straight to connectivity\n    if (_finalOptions.replicaSet || _finalOptions.rs_name) {\n      return createTopology(mongoClient, 'replicaset', _finalOptions, connectCallback);\n    } else if (object.servers.length > 1) {\n      return createTopology(mongoClient, 'mongos', _finalOptions, connectCallback);\n    } else {\n      return createServer(mongoClient, _finalOptions, connectCallback);\n    }\n  });\n\n  function connectCallback(err, topology) {\n    const warningMessage = `seed list contains no mongos proxies, replicaset connections requires the parameter replicaSet to be supplied in the URI or options object, mongodb://server:port/db?replicaSet=name`;\n    if (err && err.message === 'no mongos proxies found in seed list') {\n      if (logger.isWarn()) {\n        logger.warn(warningMessage);\n      }\n\n      // Return a more specific error message for MongoClient.connect\n      return callback(new MongoError(warningMessage));\n    }\n\n    if (didRequestAuthentication) {\n      mongoClient.emit('authenticated', null, true);\n    }\n\n    // Return the error and db instance\n    callback(err, topology);\n  }\n}\n\nfunction connectWithUrl(mongoClient, url, options, connectCallback) {\n  // Set the topology\n  assignTopology(mongoClient, url);\n\n  // Add listeners\n  addListeners(mongoClient, url);\n\n  // Propagate the events to the client\n  relayEvents(mongoClient, url);\n\n  let finalOptions = Object.assign({}, options);\n\n  // If we have a readPreference passed in by the db options, convert it from a string\n  if (typeof options.readPreference === 'string' || typeof options.read_preference === 'string') {\n    finalOptions.readPreference = new ReadPreference(\n      options.readPreference || options.read_preference\n    );\n  }\n\n  const isDoingAuth = finalOptions.user || finalOptions.password || finalOptions.authMechanism;\n  if (isDoingAuth && !finalOptions.credentials) {\n    try {\n      finalOptions.credentials = generateCredentials(\n        mongoClient,\n        finalOptions.user,\n        finalOptions.password,\n        finalOptions\n      );\n    } catch (err) {\n      return connectCallback(err, url);\n    }\n  }\n\n  return url.connect(finalOptions, connectCallback);\n}\n\nfunction createListener(mongoClient, event) {\n  const eventSet = new Set(['all', 'fullsetup', 'open', 'reconnect']);\n  return (v1, v2) => {\n    if (eventSet.has(event)) {\n      return mongoClient.emit(event, mongoClient);\n    }\n\n    mongoClient.emit(event, v1, v2);\n  };\n}\n\nfunction createServer(mongoClient, options, callback) {\n  // Pass in the promise library\n  options.promiseLibrary = mongoClient.s.promiseLibrary;\n\n  // Set default options\n  const servers = translateOptions(options);\n\n  const server = servers[0];\n\n  // Propagate the events to the client\n  const collectedEvents = collectEvents(mongoClient, server);\n\n  // Connect to topology\n  server.connect(options, (err, topology) => {\n    if (err) {\n      server.close(true);\n      return callback(err);\n    }\n    // Clear out all the collected event listeners\n    clearAllEvents(server);\n\n    // Relay all the events\n    relayEvents(mongoClient, server);\n    // Add listeners\n    addListeners(mongoClient, server);\n    // Check if we are really speaking to a mongos\n    const ismaster = topology.lastIsMaster();\n\n    // Set the topology\n    assignTopology(mongoClient, topology);\n\n    // Do we actually have a mongos\n    if (ismaster && ismaster.msg === 'isdbgrid') {\n      // Destroy the current connection\n      topology.close();\n      // Create mongos connection instead\n      return createTopology(mongoClient, 'mongos', options, callback);\n    }\n\n    // Fire all the events\n    replayEvents(mongoClient, collectedEvents);\n    // Otherwise callback\n    callback(err, topology);\n  });\n}\n\nconst DEPRECATED_UNIFIED_EVENTS = new Set([\n  'reconnect',\n  'reconnectFailed',\n  'attemptReconnect',\n  'joined',\n  'left',\n  'ping',\n  'ha',\n  'all',\n  'fullsetup',\n  'open'\n]);\n\nfunction registerDeprecatedEventNotifiers(client) {\n  client.on('newListener', eventName => {\n    if (DEPRECATED_UNIFIED_EVENTS.has(eventName)) {\n      emitDeprecationWarning(\n        `The \\`${eventName}\\` event is no longer supported by the unified topology, please read more by visiting http://bit.ly/2D8WfT6`,\n        'DeprecationWarning'\n      );\n    }\n  });\n}\n\nfunction createTopology(mongoClient, topologyType, options, callback) {\n  // Pass in the promise library\n  options.promiseLibrary = mongoClient.s.promiseLibrary;\n\n  const translationOptions = {};\n  if (topologyType === 'unified') translationOptions.createServers = false;\n\n  // Set default options\n  const servers = translateOptions(options, translationOptions);\n\n  // determine CSFLE support\n  if (options.autoEncryption != null) {\n    const Encrypter = require('../encrypter').Encrypter;\n    options.encrypter = new Encrypter(mongoClient, options);\n    options.autoEncrypter = options.encrypter.autoEncrypter;\n  }\n\n  // Create the topology\n  let topology;\n  if (topologyType === 'mongos') {\n    topology = new Mongos(servers, options);\n  } else if (topologyType === 'replicaset') {\n    topology = new ReplSet(servers, options);\n  } else if (topologyType === 'unified') {\n    topology = new NativeTopology(options.servers, options);\n    registerDeprecatedEventNotifiers(mongoClient);\n  }\n\n  // Add listeners\n  addListeners(mongoClient, topology);\n\n  // Propagate the events to the client\n  relayEvents(mongoClient, topology);\n\n  // Open the connection\n  assignTopology(mongoClient, topology);\n\n  // initialize CSFLE if requested\n  if (options.autoEncrypter) {\n    options.autoEncrypter.init(err => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      topology.connect(options, err => {\n        if (err) {\n          topology.close(true);\n          callback(err);\n          return;\n        }\n\n        options.encrypter.connectInternalClient(error => {\n          if (error) return callback(error);\n          callback(undefined, topology);\n        });\n      });\n    });\n\n    return;\n  }\n\n  // otherwise connect normally\n  topology.connect(options, err => {\n    if (err) {\n      topology.close(true);\n      return callback(err);\n    }\n\n    callback(undefined, topology);\n    return;\n  });\n}\n\nfunction createUnifiedOptions(finalOptions, options) {\n  const childOptions = [\n    'mongos',\n    'server',\n    'db',\n    'replset',\n    'db_options',\n    'server_options',\n    'rs_options',\n    'mongos_options'\n  ];\n  const noMerge = ['readconcern', 'compression', 'autoencryption'];\n  const skip = ['w', 'wtimeout', 'j', 'journal', 'fsync', 'writeconcern'];\n\n  for (const name in options) {\n    if (skip.indexOf(name.toLowerCase()) !== -1) {\n      continue;\n    } else if (noMerge.indexOf(name.toLowerCase()) !== -1) {\n      finalOptions[name] = options[name];\n    } else if (childOptions.indexOf(name.toLowerCase()) !== -1) {\n      finalOptions = mergeOptions(finalOptions, options[name], false);\n    } else {\n      if (\n        options[name] &&\n        typeof options[name] === 'object' &&\n        !Buffer.isBuffer(options[name]) &&\n        !Array.isArray(options[name])\n      ) {\n        finalOptions = mergeOptions(finalOptions, options[name], true);\n      } else {\n        finalOptions[name] = options[name];\n      }\n    }\n  }\n\n  // Handle write concern keys separately, since `options` may have the keys at the top level or\n  // under `options.writeConcern`. The final merged keys will be under `finalOptions.writeConcern`.\n  // This way, `fromOptions` will warn once if `options` is using deprecated write concern options\n  const optionsWriteConcern = WriteConcern.fromOptions(options);\n  if (optionsWriteConcern) {\n    finalOptions.writeConcern = Object.assign({}, finalOptions.writeConcern, optionsWriteConcern);\n  }\n\n  return finalOptions;\n}\n\nfunction generateCredentials(client, username, password, options) {\n  options = Object.assign({}, options);\n\n  // the default db to authenticate against is 'self'\n  // if authententicate is called from a retry context, it may be another one, like admin\n  const source = options.authSource || options.authdb || options.dbName;\n\n  // authMechanism\n  const authMechanismRaw = options.authMechanism || 'DEFAULT';\n  const authMechanism = authMechanismRaw.toUpperCase();\n  const mechanismProperties = options.authMechanismProperties;\n\n  if (!VALID_AUTH_MECHANISMS.has(authMechanism)) {\n    throw MongoError.create({\n      message: `authentication mechanism ${authMechanismRaw} not supported', options.authMechanism`,\n      driver: true\n    });\n  }\n\n  return new MongoCredentials({\n    mechanism: AUTH_MECHANISM_INTERNAL_MAP[authMechanism],\n    mechanismProperties,\n    source,\n    username,\n    password\n  });\n}\n\nfunction legacyTransformUrlOptions(object) {\n  return mergeOptions(createUnifiedOptions({}, object), object, false);\n}\n\nfunction mergeOptions(target, source, flatten) {\n  for (const name in source) {\n    if (source[name] && typeof source[name] === 'object' && flatten) {\n      target = mergeOptions(target, source[name], flatten);\n    } else {\n      target[name] = source[name];\n    }\n  }\n\n  return target;\n}\n\nfunction relayEvents(mongoClient, topology) {\n  const serverOrCommandEvents = [\n    // APM\n    'commandStarted',\n    'commandSucceeded',\n    'commandFailed',\n\n    // SDAM\n    'serverOpening',\n    'serverClosed',\n    'serverDescriptionChanged',\n    'serverHeartbeatStarted',\n    'serverHeartbeatSucceeded',\n    'serverHeartbeatFailed',\n    'topologyOpening',\n    'topologyClosed',\n    'topologyDescriptionChanged',\n\n    // Legacy\n    'joined',\n    'left',\n    'ping',\n    'ha'\n  ].concat(CMAP_EVENT_NAMES);\n\n  serverOrCommandEvents.forEach(event => {\n    topology.on(event, (object1, object2) => {\n      mongoClient.emit(event, object1, object2);\n    });\n  });\n}\n\n//\n// Replay any events due to single server connection switching to Mongos\n//\nfunction replayEvents(mongoClient, events) {\n  for (let i = 0; i < events.length; i++) {\n    mongoClient.emit(events[i].event, events[i].object1, events[i].object2);\n  }\n}\n\nfunction transformUrlOptions(_object) {\n  let object = Object.assign({ servers: _object.hosts }, _object.options);\n  for (let name in object) {\n    const camelCaseName = LEGACY_OPTIONS_MAP[name];\n    if (camelCaseName) {\n      object[camelCaseName] = object[name];\n    }\n  }\n\n  const hasUsername = _object.auth && _object.auth.username;\n  const hasAuthMechanism = _object.options && _object.options.authMechanism;\n  if (hasUsername || hasAuthMechanism) {\n    object.auth = Object.assign({}, _object.auth);\n    if (object.auth.db) {\n      object.authSource = object.authSource || object.auth.db;\n    }\n\n    if (object.auth.username) {\n      object.auth.user = object.auth.username;\n    }\n  }\n\n  if (_object.defaultDatabase) {\n    object.dbName = _object.defaultDatabase;\n  }\n\n  if (object.maxPoolSize) {\n    object.poolSize = object.maxPoolSize;\n  }\n\n  if (object.readConcernLevel) {\n    object.readConcern = new ReadConcern(object.readConcernLevel);\n  }\n\n  if (object.wTimeoutMS) {\n    object.wtimeout = object.wTimeoutMS;\n    object.wTimeoutMS = undefined;\n  }\n\n  if (_object.srvHost) {\n    object.srvHost = _object.srvHost;\n  }\n\n  // Any write concern options from the URL will be top-level, so we manually\n  // move them options under `object.writeConcern` to avoid warnings later\n  const wcKeys = ['w', 'wtimeout', 'j', 'journal', 'fsync'];\n  for (const key of wcKeys) {\n    if (object[key] !== undefined) {\n      if (object.writeConcern === undefined) object.writeConcern = {};\n      object.writeConcern[key] = object[key];\n      object[key] = undefined;\n    }\n  }\n\n  return object;\n}\n\nfunction translateOptions(options, translationOptions) {\n  translationOptions = Object.assign({}, { createServers: true }, translationOptions);\n\n  // If we have a readPreference passed in by the db options\n  if (typeof options.readPreference === 'string' || typeof options.read_preference === 'string') {\n    options.readPreference = new ReadPreference(options.readPreference || options.read_preference);\n  }\n\n  // Do we have readPreference tags, add them\n  if (options.readPreference && (options.readPreferenceTags || options.read_preference_tags)) {\n    options.readPreference.tags = options.readPreferenceTags || options.read_preference_tags;\n  }\n\n  // Do we have maxStalenessSeconds\n  if (options.maxStalenessSeconds) {\n    options.readPreference.maxStalenessSeconds = options.maxStalenessSeconds;\n  }\n\n  // Set the socket and connection timeouts\n  if (options.socketTimeoutMS == null) options.socketTimeoutMS = 0;\n  if (options.connectTimeoutMS == null) options.connectTimeoutMS = 10000;\n\n  if (!translationOptions.createServers) {\n    return;\n  }\n\n  // Create server instances\n  return options.servers.map(serverObj => {\n    return serverObj.domain_socket\n      ? new Server(serverObj.domain_socket, 27017, options)\n      : new Server(serverObj.host, serverObj.port, options);\n  });\n}\n\nmodule.exports = { validOptions, connect };\n"],"names":["require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","NativeTopology","Server","ReplSet","Mongos","WriteConcern","require$$6","ReadConcern"],"mappings":"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"}