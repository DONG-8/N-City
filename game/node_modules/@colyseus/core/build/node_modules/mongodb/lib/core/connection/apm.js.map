{"version":3,"file":"apm.js","sources":["../../../../../../../../node_modules/mongodb/lib/core/connection/apm.js"],"sourcesContent":["'use strict';\nconst Msg = require('../connection/msg').Msg;\nconst KillCursor = require('../connection/commands').KillCursor;\nconst GetMore = require('../connection/commands').GetMore;\nconst calculateDurationInMs = require('../../utils').calculateDurationInMs;\n\n/** Commands that we want to redact because of the sensitive nature of their contents */\nconst SENSITIVE_COMMANDS = new Set([\n  'authenticate',\n  'saslStart',\n  'saslContinue',\n  'getnonce',\n  'createUser',\n  'updateUser',\n  'copydbgetnonce',\n  'copydbsaslstart',\n  'copydb'\n]);\n\n// helper methods\nconst extractCommandName = commandDoc => Object.keys(commandDoc)[0];\nconst namespace = command => command.ns;\nconst databaseName = command => command.ns.split('.')[0];\nconst collectionName = command => command.ns.split('.')[1];\nconst generateConnectionId = pool =>\n  pool.options ? `${pool.options.host}:${pool.options.port}` : pool.address;\nconst maybeRedact = (commandName, result) => (SENSITIVE_COMMANDS.has(commandName) ? {} : result);\nconst isLegacyPool = pool => pool.s && pool.queue;\n\nconst LEGACY_FIND_QUERY_MAP = {\n  $query: 'filter',\n  $orderby: 'sort',\n  $hint: 'hint',\n  $comment: 'comment',\n  $maxScan: 'maxScan',\n  $max: 'max',\n  $min: 'min',\n  $returnKey: 'returnKey',\n  $showDiskLoc: 'showRecordId',\n  $maxTimeMS: 'maxTimeMS',\n  $snapshot: 'snapshot'\n};\n\nconst LEGACY_FIND_OPTIONS_MAP = {\n  numberToSkip: 'skip',\n  numberToReturn: 'batchSize',\n  returnFieldsSelector: 'projection'\n};\n\nconst OP_QUERY_KEYS = [\n  'tailable',\n  'oplogReplay',\n  'noCursorTimeout',\n  'awaitData',\n  'partial',\n  'exhaust'\n];\n\n/**\n * Extract the actual command from the query, possibly upconverting if it's a legacy\n * format\n *\n * @param {Object} command the command\n */\nconst extractCommand = command => {\n  if (command instanceof GetMore) {\n    return {\n      getMore: command.cursorId,\n      collection: collectionName(command),\n      batchSize: command.numberToReturn\n    };\n  }\n\n  if (command instanceof KillCursor) {\n    return {\n      killCursors: collectionName(command),\n      cursors: command.cursorIds\n    };\n  }\n\n  if (command instanceof Msg) {\n    return command.command;\n  }\n\n  if (command.query && command.query.$query) {\n    let result;\n    if (command.ns === 'admin.$cmd') {\n      // upconvert legacy command\n      result = Object.assign({}, command.query.$query);\n    } else {\n      // upconvert legacy find command\n      result = { find: collectionName(command) };\n      Object.keys(LEGACY_FIND_QUERY_MAP).forEach(key => {\n        if (typeof command.query[key] !== 'undefined')\n          result[LEGACY_FIND_QUERY_MAP[key]] = command.query[key];\n      });\n    }\n\n    Object.keys(LEGACY_FIND_OPTIONS_MAP).forEach(key => {\n      if (typeof command[key] !== 'undefined') result[LEGACY_FIND_OPTIONS_MAP[key]] = command[key];\n    });\n\n    OP_QUERY_KEYS.forEach(key => {\n      if (command[key]) result[key] = command[key];\n    });\n\n    if (typeof command.pre32Limit !== 'undefined') {\n      result.limit = command.pre32Limit;\n    }\n\n    if (command.query.$explain) {\n      return { explain: result };\n    }\n\n    return result;\n  }\n\n  return command.query ? command.query : command;\n};\n\nconst extractReply = (command, reply) => {\n  if (command instanceof GetMore) {\n    return {\n      ok: 1,\n      cursor: {\n        id: reply.message.cursorId,\n        ns: namespace(command),\n        nextBatch: reply.message.documents\n      }\n    };\n  }\n\n  if (command instanceof KillCursor) {\n    return {\n      ok: 1,\n      cursorsUnknown: command.cursorIds\n    };\n  }\n\n  // is this a legacy find command?\n  if (command.query && typeof command.query.$query !== 'undefined') {\n    return {\n      ok: 1,\n      cursor: {\n        id: reply.message.cursorId,\n        ns: namespace(command),\n        firstBatch: reply.message.documents\n      }\n    };\n  }\n\n  return reply && reply.result ? reply.result : reply;\n};\n\nconst extractConnectionDetails = pool => {\n  if (isLegacyPool(pool)) {\n    return {\n      connectionId: generateConnectionId(pool)\n    };\n  }\n\n  // APM in the modern pool is done at the `Connection` level, so we rename it here for\n  // readability.\n  const connection = pool;\n  return {\n    address: connection.address,\n    connectionId: connection.id\n  };\n};\n\n/** An event indicating the start of a given command */\nclass CommandStartedEvent {\n  /**\n   * Create a started event\n   *\n   * @param {Pool} pool the pool that originated the command\n   * @param {Object} command the command\n   */\n  constructor(pool, command) {\n    const cmd = extractCommand(command);\n    const commandName = extractCommandName(cmd);\n    const connectionDetails = extractConnectionDetails(pool);\n\n    // NOTE: remove in major revision, this is not spec behavior\n    if (SENSITIVE_COMMANDS.has(commandName)) {\n      this.commandObj = {};\n      this.commandObj[commandName] = true;\n    }\n\n    Object.assign(this, connectionDetails, {\n      requestId: command.requestId,\n      databaseName: databaseName(command),\n      commandName,\n      command: cmd\n    });\n  }\n}\n\n/** An event indicating the success of a given command */\nclass CommandSucceededEvent {\n  /**\n   * Create a succeeded event\n   *\n   * @param {Pool} pool the pool that originated the command\n   * @param {Object} command the command\n   * @param {Object} reply the reply for this command from the server\n   * @param {Array} started a high resolution tuple timestamp of when the command was first sent, to calculate duration\n   */\n  constructor(pool, command, reply, started) {\n    const cmd = extractCommand(command);\n    const commandName = extractCommandName(cmd);\n    const connectionDetails = extractConnectionDetails(pool);\n\n    Object.assign(this, connectionDetails, {\n      requestId: command.requestId,\n      commandName,\n      duration: calculateDurationInMs(started),\n      reply: maybeRedact(commandName, extractReply(command, reply))\n    });\n  }\n}\n\n/** An event indicating the failure of a given command */\nclass CommandFailedEvent {\n  /**\n   * Create a failure event\n   *\n   * @param {Pool} pool the pool that originated the command\n   * @param {Object} command the command\n   * @param {MongoError|Object} error the generated error or a server error response\n   * @param {Array} started a high resolution tuple timestamp of when the command was first sent, to calculate duration\n   */\n  constructor(pool, command, error, started) {\n    const cmd = extractCommand(command);\n    const commandName = extractCommandName(cmd);\n    const connectionDetails = extractConnectionDetails(pool);\n\n    Object.assign(this, connectionDetails, {\n      requestId: command.requestId,\n      commandName,\n      duration: calculateDurationInMs(started),\n      failure: maybeRedact(commandName, error)\n    });\n  }\n}\n\nmodule.exports = {\n  CommandStartedEvent,\n  CommandSucceededEvent,\n  CommandFailedEvent\n};\n"],"names":["require$$0","require$$1","require$$2"],"mappings":"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"}