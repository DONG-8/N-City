{"version":3,"file":"url_parser.js","sources":["../../../../../../node_modules/mongodb/lib/url_parser.js"],"sourcesContent":["'use strict';\n\nconst ReadPreference = require('./core').ReadPreference;\nconst parser = require('url');\nconst f = require('util').format;\nconst Logger = require('./core').Logger;\nconst dns = require('dns');\nconst ReadConcern = require('./read_concern');\nconst qs = require('querystring');\nconst MongoParseError = require('./core/error').MongoParseError;\n\nmodule.exports = function(url, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  let result;\n  try {\n    result = parser.parse(url, true);\n  } catch (e) {\n    return callback(new Error('URL malformed, cannot be parsed'));\n  }\n\n  if (result.protocol !== 'mongodb:' && result.protocol !== 'mongodb+srv:') {\n    return callback(new Error('Invalid schema, expected `mongodb` or `mongodb+srv`'));\n  }\n\n  if (result.protocol === 'mongodb:') {\n    return parseHandler(url, options, callback);\n  }\n\n  // Otherwise parse this as an SRV record\n  if (result.hostname.split('.').length < 3) {\n    return callback(new Error('URI does not have hostname, domain name and tld'));\n  }\n\n  result.domainLength = result.hostname.split('.').length;\n\n  if (result.pathname && result.pathname.match(',')) {\n    return callback(new Error('Invalid URI, cannot contain multiple hostnames'));\n  }\n\n  if (result.port) {\n    return callback(new Error('Ports not accepted with `mongodb+srv` URIs'));\n  }\n\n  let srvAddress = `_mongodb._tcp.${result.host}`;\n  dns.resolveSrv(srvAddress, function(err, addresses) {\n    if (err) return callback(err);\n\n    if (addresses.length === 0) {\n      return callback(new Error('No addresses found at host'));\n    }\n\n    for (let i = 0; i < addresses.length; i++) {\n      if (!matchesParentDomain(addresses[i].name, result.hostname, result.domainLength)) {\n        return callback(new Error('Server record does not share hostname with parent URI'));\n      }\n    }\n\n    let base = result.auth ? `mongodb://${result.auth}@` : `mongodb://`;\n    let connectionStrings = addresses.map(function(address, i) {\n      if (i === 0) return `${base}${address.name}:${address.port}`;\n      else return `${address.name}:${address.port}`;\n    });\n\n    let connectionString = connectionStrings.join(',') + '/';\n    let connectionStringOptions = [];\n\n    // Add the default database if needed\n    if (result.path) {\n      let defaultDb = result.path.slice(1);\n      if (defaultDb.indexOf('?') !== -1) {\n        defaultDb = defaultDb.slice(0, defaultDb.indexOf('?'));\n      }\n\n      connectionString += defaultDb;\n    }\n\n    // Default to SSL true\n    if (!options.ssl && !result.search) {\n      connectionStringOptions.push('ssl=true');\n    } else if (!options.ssl && result.search && !result.search.match('ssl')) {\n      connectionStringOptions.push('ssl=true');\n    }\n\n    // Keep original uri options\n    if (result.search) {\n      connectionStringOptions.push(result.search.replace('?', ''));\n    }\n\n    dns.resolveTxt(result.host, function(err, record) {\n      if (err && err.code !== 'ENODATA' && err.code !== 'ENOTFOUND') return callback(err);\n      if (err && err.code === 'ENODATA') record = null;\n\n      if (record) {\n        if (record.length > 1) {\n          return callback(new MongoParseError('Multiple text records not allowed'));\n        }\n\n        record = record[0].join('');\n        const parsedRecord = qs.parse(record);\n        const items = Object.keys(parsedRecord);\n        if (items.some(item => item !== 'authSource' && item !== 'replicaSet')) {\n          return callback(\n            new MongoParseError('Text record must only set `authSource` or `replicaSet`')\n          );\n        }\n\n        if (items.length > 0) {\n          connectionStringOptions.push(record);\n        }\n      }\n\n      // Add any options to the connection string\n      if (connectionStringOptions.length) {\n        connectionString += `?${connectionStringOptions.join('&')}`;\n      }\n\n      parseHandler(connectionString, options, callback);\n    });\n  });\n};\n\nfunction matchesParentDomain(srvAddress, parentDomain) {\n  let regex = /^.*?\\./;\n  let srv = `.${srvAddress.replace(regex, '')}`;\n  let parent = `.${parentDomain.replace(regex, '')}`;\n  if (srv.endsWith(parent)) return true;\n  else return false;\n}\n\nfunction parseHandler(address, options, callback) {\n  let result, err;\n  try {\n    result = parseConnectionString(address, options);\n  } catch (e) {\n    err = e;\n  }\n\n  return err ? callback(err, null) : callback(null, result);\n}\n\nfunction parseConnectionString(url, options) {\n  // Variables\n  let connection_part = '';\n  let auth_part = '';\n  let query_string_part = '';\n  let dbName = 'admin';\n\n  // Url parser result\n  let result = parser.parse(url, true);\n  if ((result.hostname == null || result.hostname === '') && url.indexOf('.sock') === -1) {\n    throw new Error('No hostname or hostnames provided in connection string');\n  }\n\n  if (result.port === '0') {\n    throw new Error('Invalid port (zero) with hostname');\n  }\n\n  if (!isNaN(parseInt(result.port, 10)) && parseInt(result.port, 10) > 65535) {\n    throw new Error('Invalid port (larger than 65535) with hostname');\n  }\n\n  if (\n    result.path &&\n    result.path.length > 0 &&\n    result.path[0] !== '/' &&\n    url.indexOf('.sock') === -1\n  ) {\n    throw new Error('Missing delimiting slash between hosts and options');\n  }\n\n  if (result.query) {\n    for (let name in result.query) {\n      if (name.indexOf('::') !== -1) {\n        throw new Error('Double colon in host identifier');\n      }\n\n      if (result.query[name] === '') {\n        throw new Error('Query parameter ' + name + ' is an incomplete value pair');\n      }\n    }\n  }\n\n  if (result.auth) {\n    let parts = result.auth.split(':');\n    if (url.indexOf(result.auth) !== -1 && parts.length > 2) {\n      throw new Error('Username with password containing an unescaped colon');\n    }\n\n    if (url.indexOf(result.auth) !== -1 && result.auth.indexOf('@') !== -1) {\n      throw new Error('Username containing an unescaped at-sign');\n    }\n  }\n\n  // Remove query\n  let clean = url.split('?').shift();\n\n  // Extract the list of hosts\n  let strings = clean.split(',');\n  let hosts = [];\n\n  for (let i = 0; i < strings.length; i++) {\n    let hostString = strings[i];\n\n    if (hostString.indexOf('mongodb') !== -1) {\n      if (hostString.indexOf('@') !== -1) {\n        hosts.push(hostString.split('@').pop());\n      } else {\n        hosts.push(hostString.substr('mongodb://'.length));\n      }\n    } else if (hostString.indexOf('/') !== -1) {\n      hosts.push(hostString.split('/').shift());\n    } else if (hostString.indexOf('/') === -1) {\n      hosts.push(hostString.trim());\n    }\n  }\n\n  for (let i = 0; i < hosts.length; i++) {\n    let r = parser.parse(f('mongodb://%s', hosts[i].trim()));\n    if (r.path && r.path.indexOf('.sock') !== -1) continue;\n    if (r.path && r.path.indexOf(':') !== -1) {\n      // Not connecting to a socket so check for an extra slash in the hostname.\n      // Using String#split as perf is better than match.\n      if (r.path.split('/').length > 1 && r.path.indexOf('::') === -1) {\n        throw new Error('Slash in host identifier');\n      } else {\n        throw new Error('Double colon in host identifier');\n      }\n    }\n  }\n\n  // If we have a ? mark cut the query elements off\n  if (url.indexOf('?') !== -1) {\n    query_string_part = url.substr(url.indexOf('?') + 1);\n    connection_part = url.substring('mongodb://'.length, url.indexOf('?'));\n  } else {\n    connection_part = url.substring('mongodb://'.length);\n  }\n\n  // Check if we have auth params\n  if (connection_part.indexOf('@') !== -1) {\n    auth_part = connection_part.split('@')[0];\n    connection_part = connection_part.split('@')[1];\n  }\n\n  // Check there is not more than one unescaped slash\n  if (connection_part.split('/').length > 2) {\n    throw new Error(\n      \"Unsupported host '\" +\n        connection_part.split('?')[0] +\n        \"', hosts must be URL encoded and contain at most one unencoded slash\"\n    );\n  }\n\n  // Check if the connection string has a db\n  if (connection_part.indexOf('.sock') !== -1) {\n    if (connection_part.indexOf('.sock/') !== -1) {\n      dbName = connection_part.split('.sock/')[1];\n      // Check if multiple database names provided, or just an illegal trailing backslash\n      if (dbName.indexOf('/') !== -1) {\n        if (dbName.split('/').length === 2 && dbName.split('/')[1].length === 0) {\n          throw new Error('Illegal trailing backslash after database name');\n        }\n        throw new Error('More than 1 database name in URL');\n      }\n      connection_part = connection_part.split(\n        '/',\n        connection_part.indexOf('.sock') + '.sock'.length\n      );\n    }\n  } else if (connection_part.indexOf('/') !== -1) {\n    // Check if multiple database names provided, or just an illegal trailing backslash\n    if (connection_part.split('/').length > 2) {\n      if (connection_part.split('/')[2].length === 0) {\n        throw new Error('Illegal trailing backslash after database name');\n      }\n      throw new Error('More than 1 database name in URL');\n    }\n    dbName = connection_part.split('/')[1];\n    connection_part = connection_part.split('/')[0];\n  }\n\n  // URI decode the host information\n  connection_part = decodeURIComponent(connection_part);\n\n  // Result object\n  let object = {};\n\n  // Pick apart the authentication part of the string\n  let authPart = auth_part || '';\n  let auth = authPart.split(':', 2);\n\n  // Decode the authentication URI components and verify integrity\n  let user = decodeURIComponent(auth[0]);\n  if (auth[0] !== encodeURIComponent(user)) {\n    throw new Error('Username contains an illegal unescaped character');\n  }\n  auth[0] = user;\n\n  if (auth[1]) {\n    let pass = decodeURIComponent(auth[1]);\n    if (auth[1] !== encodeURIComponent(pass)) {\n      throw new Error('Password contains an illegal unescaped character');\n    }\n    auth[1] = pass;\n  }\n\n  // Add auth to final object if we have 2 elements\n  if (auth.length === 2) object.auth = { user: auth[0], password: auth[1] };\n  // if user provided auth options, use that\n  if (options && options.auth != null) object.auth = options.auth;\n\n  // Variables used for temporary storage\n  let hostPart;\n  let urlOptions;\n  let servers;\n  let compression;\n  let serverOptions = { socketOptions: {} };\n  let dbOptions = { read_preference_tags: [] };\n  let replSetServersOptions = { socketOptions: {} };\n  let mongosOptions = { socketOptions: {} };\n  // Add server options to final object\n  object.server_options = serverOptions;\n  object.db_options = dbOptions;\n  object.rs_options = replSetServersOptions;\n  object.mongos_options = mongosOptions;\n\n  // Let's check if we are using a domain socket\n  if (url.match(/\\.sock/)) {\n    // Split out the socket part\n    let domainSocket = url.substring(\n      url.indexOf('mongodb://') + 'mongodb://'.length,\n      url.lastIndexOf('.sock') + '.sock'.length\n    );\n    // Clean out any auth stuff if any\n    if (domainSocket.indexOf('@') !== -1) domainSocket = domainSocket.split('@')[1];\n    domainSocket = decodeURIComponent(domainSocket);\n    servers = [{ domain_socket: domainSocket }];\n  } else {\n    // Split up the db\n    hostPart = connection_part;\n    // Deduplicate servers\n    let deduplicatedServers = {};\n\n    // Parse all server results\n    servers = hostPart\n      .split(',')\n      .map(function(h) {\n        let _host, _port, ipv6match;\n        //check if it matches [IPv6]:port, where the port number is optional\n        if ((ipv6match = /\\[([^\\]]+)\\](?::(.+))?/.exec(h))) {\n          _host = ipv6match[1];\n          _port = parseInt(ipv6match[2], 10) || 27017;\n        } else {\n          //otherwise assume it's IPv4, or plain hostname\n          let hostPort = h.split(':', 2);\n          _host = hostPort[0] || 'localhost';\n          _port = hostPort[1] != null ? parseInt(hostPort[1], 10) : 27017;\n          // Check for localhost?safe=true style case\n          if (_host.indexOf('?') !== -1) _host = _host.split(/\\?/)[0];\n        }\n\n        // No entry returned for duplicate server\n        if (deduplicatedServers[_host + '_' + _port]) return null;\n        deduplicatedServers[_host + '_' + _port] = 1;\n\n        // Return the mapped object\n        return { host: _host, port: _port };\n      })\n      .filter(function(x) {\n        return x != null;\n      });\n  }\n\n  // Get the db name\n  object.dbName = dbName || 'admin';\n  // Split up all the options\n  urlOptions = (query_string_part || '').split(/[&;]/);\n  // Ugh, we have to figure out which options go to which constructor manually.\n  urlOptions.forEach(function(opt) {\n    if (!opt) return;\n    var splitOpt = opt.split('='),\n      name = splitOpt[0],\n      value = splitOpt[1];\n\n    // Options implementations\n    switch (name) {\n      case 'slaveOk':\n      case 'slave_ok':\n        serverOptions.slave_ok = value === 'true';\n        dbOptions.slaveOk = value === 'true';\n        break;\n      case 'maxPoolSize':\n      case 'poolSize':\n        serverOptions.poolSize = parseInt(value, 10);\n        replSetServersOptions.poolSize = parseInt(value, 10);\n        break;\n      case 'appname':\n        object.appname = decodeURIComponent(value);\n        break;\n      case 'autoReconnect':\n      case 'auto_reconnect':\n        serverOptions.auto_reconnect = value === 'true';\n        break;\n      case 'ssl':\n        if (value === 'prefer') {\n          serverOptions.ssl = value;\n          replSetServersOptions.ssl = value;\n          mongosOptions.ssl = value;\n          break;\n        }\n        serverOptions.ssl = value === 'true';\n        replSetServersOptions.ssl = value === 'true';\n        mongosOptions.ssl = value === 'true';\n        break;\n      case 'sslValidate':\n        serverOptions.sslValidate = value === 'true';\n        replSetServersOptions.sslValidate = value === 'true';\n        mongosOptions.sslValidate = value === 'true';\n        break;\n      case 'replicaSet':\n      case 'rs_name':\n        replSetServersOptions.rs_name = value;\n        break;\n      case 'reconnectWait':\n        replSetServersOptions.reconnectWait = parseInt(value, 10);\n        break;\n      case 'retries':\n        replSetServersOptions.retries = parseInt(value, 10);\n        break;\n      case 'readSecondary':\n      case 'read_secondary':\n        replSetServersOptions.read_secondary = value === 'true';\n        break;\n      case 'fsync':\n        dbOptions.fsync = value === 'true';\n        break;\n      case 'journal':\n        dbOptions.j = value === 'true';\n        break;\n      case 'safe':\n        dbOptions.safe = value === 'true';\n        break;\n      case 'nativeParser':\n      case 'native_parser':\n        dbOptions.native_parser = value === 'true';\n        break;\n      case 'readConcernLevel':\n        dbOptions.readConcern = new ReadConcern(value);\n        break;\n      case 'connectTimeoutMS':\n        serverOptions.socketOptions.connectTimeoutMS = parseInt(value, 10);\n        replSetServersOptions.socketOptions.connectTimeoutMS = parseInt(value, 10);\n        mongosOptions.socketOptions.connectTimeoutMS = parseInt(value, 10);\n        break;\n      case 'socketTimeoutMS':\n        serverOptions.socketOptions.socketTimeoutMS = parseInt(value, 10);\n        replSetServersOptions.socketOptions.socketTimeoutMS = parseInt(value, 10);\n        mongosOptions.socketOptions.socketTimeoutMS = parseInt(value, 10);\n        break;\n      case 'w':\n        dbOptions.w = parseInt(value, 10);\n        if (isNaN(dbOptions.w)) dbOptions.w = value;\n        break;\n      case 'authSource':\n        dbOptions.authSource = value;\n        break;\n      case 'gssapiServiceName':\n        dbOptions.gssapiServiceName = value;\n        break;\n      case 'authMechanism':\n        if (value === 'GSSAPI') {\n          // If no password provided decode only the principal\n          if (object.auth == null) {\n            let urlDecodeAuthPart = decodeURIComponent(authPart);\n            if (urlDecodeAuthPart.indexOf('@') === -1)\n              throw new Error('GSSAPI requires a provided principal');\n            object.auth = { user: urlDecodeAuthPart, password: null };\n          } else {\n            object.auth.user = decodeURIComponent(object.auth.user);\n          }\n        } else if (value === 'MONGODB-X509') {\n          object.auth = { user: decodeURIComponent(authPart) };\n        }\n\n        // Only support GSSAPI or MONGODB-CR for now\n        if (\n          value !== 'GSSAPI' &&\n          value !== 'MONGODB-X509' &&\n          value !== 'MONGODB-CR' &&\n          value !== 'DEFAULT' &&\n          value !== 'SCRAM-SHA-1' &&\n          value !== 'SCRAM-SHA-256' &&\n          value !== 'PLAIN'\n        )\n          throw new Error(\n            'Only DEFAULT, GSSAPI, PLAIN, MONGODB-X509, or SCRAM-SHA-1 is supported by authMechanism'\n          );\n\n        // Authentication mechanism\n        dbOptions.authMechanism = value;\n        break;\n      case 'authMechanismProperties':\n        {\n          // Split up into key, value pairs\n          let values = value.split(',');\n          let o = {};\n          // For each value split into key, value\n          values.forEach(function(x) {\n            let v = x.split(':');\n            o[v[0]] = v[1];\n          });\n\n          // Set all authMechanismProperties\n          dbOptions.authMechanismProperties = o;\n          // Set the service name value\n          if (typeof o.SERVICE_NAME === 'string') dbOptions.gssapiServiceName = o.SERVICE_NAME;\n          if (typeof o.SERVICE_REALM === 'string') dbOptions.gssapiServiceRealm = o.SERVICE_REALM;\n          if (typeof o.CANONICALIZE_HOST_NAME === 'string')\n            dbOptions.gssapiCanonicalizeHostName =\n              o.CANONICALIZE_HOST_NAME === 'true' ? true : false;\n        }\n        break;\n      case 'wtimeoutMS':\n        dbOptions.wtimeout = parseInt(value, 10);\n        break;\n      case 'readPreference':\n        if (!ReadPreference.isValid(value))\n          throw new Error(\n            'readPreference must be either primary/primaryPreferred/secondary/secondaryPreferred/nearest'\n          );\n        dbOptions.readPreference = value;\n        break;\n      case 'maxStalenessSeconds':\n        dbOptions.maxStalenessSeconds = parseInt(value, 10);\n        break;\n      case 'readPreferenceTags':\n        {\n          // Decode the value\n          value = decodeURIComponent(value);\n          // Contains the tag object\n          let tagObject = {};\n          if (value == null || value === '') {\n            dbOptions.read_preference_tags.push(tagObject);\n            break;\n          }\n\n          // Split up the tags\n          let tags = value.split(/,/);\n          for (let i = 0; i < tags.length; i++) {\n            let parts = tags[i].trim().split(/:/);\n            tagObject[parts[0]] = parts[1];\n          }\n\n          // Set the preferences tags\n          dbOptions.read_preference_tags.push(tagObject);\n        }\n        break;\n      case 'compressors':\n        {\n          compression = serverOptions.compression || {};\n          let compressors = value.split(',');\n          if (\n            !compressors.every(function(compressor) {\n              return compressor === 'snappy' || compressor === 'zlib';\n            })\n          ) {\n            throw new Error('Compressors must be at least one of snappy or zlib');\n          }\n\n          compression.compressors = compressors;\n          serverOptions.compression = compression;\n        }\n        break;\n      case 'zlibCompressionLevel':\n        {\n          compression = serverOptions.compression || {};\n          let zlibCompressionLevel = parseInt(value, 10);\n          if (zlibCompressionLevel < -1 || zlibCompressionLevel > 9) {\n            throw new Error('zlibCompressionLevel must be an integer between -1 and 9');\n          }\n\n          compression.zlibCompressionLevel = zlibCompressionLevel;\n          serverOptions.compression = compression;\n        }\n        break;\n      case 'retryWrites':\n        dbOptions.retryWrites = value === 'true';\n        break;\n      case 'minSize':\n        dbOptions.minSize = parseInt(value, 10);\n        break;\n      default:\n        {\n          let logger = Logger('URL Parser');\n          logger.warn(`${name} is not supported as a connection string option`);\n        }\n        break;\n    }\n  });\n\n  // No tags: should be null (not [])\n  if (dbOptions.read_preference_tags.length === 0) {\n    dbOptions.read_preference_tags = null;\n  }\n\n  // Validate if there are an invalid write concern combinations\n  if (\n    (dbOptions.w === -1 || dbOptions.w === 0) &&\n    (dbOptions.journal === true || dbOptions.fsync === true || dbOptions.safe === true)\n  )\n    throw new Error('w set to -1 or 0 cannot be combined with safe/w/journal/fsync');\n\n  // If no read preference set it to primary\n  if (!dbOptions.readPreference) {\n    dbOptions.readPreference = 'primary';\n  }\n\n  // make sure that user-provided options are applied with priority\n  dbOptions = Object.assign(dbOptions, options);\n\n  // Add servers to result\n  object.servers = servers;\n\n  // Returned parsed object\n  return object;\n}\n"],"names":["require$$0","require$$1","require$$2","parser","dns","qs","ReadConcern"],"mappings":";;;;;;;;;;;;;;;;;AAEA,MAAM,cAAc,GAAGA,KAAiB,CAAC,cAAc,CAAC;AAC1B;AAC9B,MAAM,CAAC,GAAGC,wBAAe,CAAC,MAAM,CAAC;AACjC,MAAM,MAAM,GAAGD,KAAiB,CAAC,MAAM,CAAC;AACb;AACmB;AACZ;AAClC,MAAM,eAAe,GAAGE,KAAuB,CAAC,eAAe,CAAC;AAChE;cACc,GAAG,SAAS,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE;AAClD,EAAE,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE,CAAC,QAAQ,GAAG,OAAO,IAAI,OAAO,GAAG,EAAE,CAAC,CAAC;AAC1E,EAAE,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AAC1B;AACA,EAAE,IAAI,MAAM,CAAC;AACb,EAAE,IAAI;AACN,IAAI,MAAM,GAAGC,uBAAM,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACrC,GAAG,CAAC,OAAO,CAAC,EAAE;AACd,IAAI,OAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC,CAAC;AAClE,GAAG;AACH;AACA,EAAE,IAAI,MAAM,CAAC,QAAQ,KAAK,UAAU,IAAI,MAAM,CAAC,QAAQ,KAAK,cAAc,EAAE;AAC5E,IAAI,OAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC,CAAC;AACtF,GAAG;AACH;AACA,EAAE,IAAI,MAAM,CAAC,QAAQ,KAAK,UAAU,EAAE;AACtC,IAAI,OAAO,YAAY,CAAC,GAAG,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;AAChD,GAAG;AACH;AACA;AACA,EAAE,IAAI,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;AAC7C,IAAI,OAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC,CAAC;AAClF,GAAG;AACH;AACA,EAAE,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;AAC1D;AACA,EAAE,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;AACrD,IAAI,OAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC,CAAC;AACjF,GAAG;AACH;AACA,EAAE,IAAI,MAAM,CAAC,IAAI,EAAE;AACnB,IAAI,OAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC,CAAC;AAC7E,GAAG;AACH;AACA,EAAE,IAAI,UAAU,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAClD,EAAEC,uBAAG,CAAC,UAAU,CAAC,UAAU,EAAE,SAAS,GAAG,EAAE,SAAS,EAAE;AACtD,IAAI,IAAI,GAAG,EAAE,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;AAClC;AACA,IAAI,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AAChC,MAAM,OAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC,CAAC;AAC/D,KAAK;AACL;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC/C,MAAM,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,YAAY,CAAC,EAAE;AACzF,QAAQ,OAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC,CAAC;AAC5F,OAAO;AACP,KAAK;AACL;AACA,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACxE,IAAI,IAAI,iBAAiB,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,OAAO,EAAE,CAAC,EAAE;AAC/D,MAAM,IAAI,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;AACnE,WAAW,OAAO,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;AACpD,KAAK,CAAC,CAAC;AACP;AACA,IAAI,IAAI,gBAAgB,GAAG,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;AAC7D,IAAI,IAAI,uBAAuB,GAAG,EAAE,CAAC;AACrC;AACA;AACA,IAAI,IAAI,MAAM,CAAC,IAAI,EAAE;AACrB,MAAM,IAAI,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC3C,MAAM,IAAI,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;AACzC,QAAQ,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;AAC/D,OAAO;AACP;AACA,MAAM,gBAAgB,IAAI,SAAS,CAAC;AACpC,KAAK;AACL;AACA;AACA,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;AACxC,MAAM,uBAAuB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC/C,KAAK,MAAM,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;AAC7E,MAAM,uBAAuB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC/C,KAAK;AACL;AACA;AACA,IAAI,IAAI,MAAM,CAAC,MAAM,EAAE;AACvB,MAAM,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;AACnE,KAAK;AACL;AACA,IAAIA,uBAAG,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,GAAG,EAAE,MAAM,EAAE;AACtD,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,SAAS,IAAI,GAAG,CAAC,IAAI,KAAK,WAAW,EAAE,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;AAC1F,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,SAAS,EAAE,MAAM,GAAG,IAAI,CAAC;AACvD;AACA,MAAM,IAAI,MAAM,EAAE;AAClB,QAAQ,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;AAC/B,UAAU,OAAO,QAAQ,CAAC,IAAI,eAAe,CAAC,mCAAmC,CAAC,CAAC,CAAC;AACpF,SAAS;AACT;AACA,QAAQ,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACpC,QAAQ,MAAM,YAAY,GAAGC,sBAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAC9C,QAAQ,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAChD,QAAQ,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,KAAK,YAAY,IAAI,IAAI,KAAK,YAAY,CAAC,EAAE;AAChF,UAAU,OAAO,QAAQ;AACzB,YAAY,IAAI,eAAe,CAAC,wDAAwD,CAAC;AACzF,WAAW,CAAC;AACZ,SAAS;AACT;AACA,QAAQ,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AAC9B,UAAU,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC/C,SAAS;AACT,OAAO;AACP;AACA;AACA,MAAM,IAAI,uBAAuB,CAAC,MAAM,EAAE;AAC1C,QAAQ,gBAAgB,IAAI,CAAC,CAAC,EAAE,uBAAuB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACpE,OAAO;AACP;AACA,MAAM,YAAY,CAAC,gBAAgB,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;AACxD,KAAK,CAAC,CAAC;AACP,GAAG,CAAC,CAAC;AACL,EAAE;AACF;AACA,SAAS,mBAAmB,CAAC,UAAU,EAAE,YAAY,EAAE;AACvD,EAAE,IAAI,KAAK,GAAG,QAAQ,CAAC;AACvB,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AAChD,EAAE,IAAI,MAAM,GAAG,CAAC,CAAC,EAAE,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AACrD,EAAE,IAAI,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAO,IAAI,CAAC;AACxC,OAAO,OAAO,KAAK,CAAC;AACpB,CAAC;AACD;AACA,SAAS,YAAY,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE;AAClD,EAAE,IAAI,MAAM,EAAE,GAAG,CAAC;AAClB,EAAE,IAAI;AACN,IAAI,MAAM,GAAG,qBAAqB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AACrD,GAAG,CAAC,OAAO,CAAC,EAAE;AACd,IAAI,GAAG,GAAG,CAAC,CAAC;AACZ,GAAG;AACH;AACA,EAAE,OAAO,GAAG,GAAG,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AAC5D,CAAC;AACD;AACA,SAAS,qBAAqB,CAAC,GAAG,EAAE,OAAO,EAAE;AAC7C;AACA,EAAE,IAAI,eAAe,GAAG,EAAE,CAAC;AAC3B,EAAE,IAAI,SAAS,GAAG,EAAE,CAAC;AACrB,EAAE,IAAI,iBAAiB,GAAG,EAAE,CAAC;AAC7B,EAAE,IAAI,MAAM,GAAG,OAAO,CAAC;AACvB;AACA;AACA,EAAE,IAAI,MAAM,GAAGF,uBAAM,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACvC,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,IAAI,IAAI,MAAM,CAAC,QAAQ,KAAK,EAAE,KAAK,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;AAC1F,IAAI,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;AAC9E,GAAG;AACH;AACA,EAAE,IAAI,MAAM,CAAC,IAAI,KAAK,GAAG,EAAE;AAC3B,IAAI,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;AACzD,GAAG;AACH;AACA,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,KAAK,EAAE;AAC9E,IAAI,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;AACtE,GAAG;AACH;AACA,EAAE;AACF,IAAI,MAAM,CAAC,IAAI;AACf,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC;AAC1B,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG;AAC1B,IAAI,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC/B,IAAI;AACJ,IAAI,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;AAC1E,GAAG;AACH;AACA,EAAE,IAAI,MAAM,CAAC,KAAK,EAAE;AACpB,IAAI,KAAK,IAAI,IAAI,IAAI,MAAM,CAAC,KAAK,EAAE;AACnC,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;AACrC,QAAQ,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;AAC3D,OAAO;AACP;AACA,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE;AACrC,QAAQ,MAAM,IAAI,KAAK,CAAC,kBAAkB,GAAG,IAAI,GAAG,8BAA8B,CAAC,CAAC;AACpF,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA,EAAE,IAAI,MAAM,CAAC,IAAI,EAAE;AACnB,IAAI,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACvC,IAAI,IAAI,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AAC7D,MAAM,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;AAC9E,KAAK;AACL;AACA,IAAI,IAAI,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;AAC5E,MAAM,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;AAClE,KAAK;AACL,GAAG;AACH;AACA;AACA,EAAE,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;AACrC;AACA;AACA,EAAE,IAAI,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACjC,EAAE,IAAI,KAAK,GAAG,EAAE,CAAC;AACjB;AACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3C,IAAI,IAAI,UAAU,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AAChC;AACA,IAAI,IAAI,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;AAC9C,MAAM,IAAI,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;AAC1C,QAAQ,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;AAChD,OAAO,MAAM;AACb,QAAQ,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;AAC3D,OAAO;AACP,KAAK,MAAM,IAAI,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;AAC/C,MAAM,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;AAChD,KAAK,MAAM,IAAI,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;AAC/C,MAAM,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AACpC,KAAK;AACL,GAAG;AACH;AACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACzC,IAAI,IAAI,CAAC,GAAGA,uBAAM,CAAC,KAAK,CAAC,CAAC,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AAC7D,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS;AAC3D,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;AAC9C;AACA;AACA,MAAM,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;AACvE,QAAQ,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;AACpD,OAAO,MAAM;AACb,QAAQ,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;AAC3D,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA,EAAE,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;AAC/B,IAAI,iBAAiB,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACzD,IAAI,eAAe,GAAG,GAAG,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3E,GAAG,MAAM;AACT,IAAI,eAAe,GAAG,GAAG,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AACzD,GAAG;AACH;AACA;AACA,EAAE,IAAI,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;AAC3C,IAAI,SAAS,GAAG,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,IAAI,eAAe,GAAG,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,GAAG;AACH;AACA;AACA,EAAE,IAAI,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;AAC7C,IAAI,MAAM,IAAI,KAAK;AACnB,MAAM,oBAAoB;AAC1B,QAAQ,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACrC,QAAQ,sEAAsE;AAC9E,KAAK,CAAC;AACN,GAAG;AACH;AACA;AACA,EAAE,IAAI,eAAe,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;AAC/C,IAAI,IAAI,eAAe,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;AAClD,MAAM,MAAM,GAAG,eAAe,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD;AACA,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;AACtC,QAAQ,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;AACjF,UAAU,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;AAC5E,SAAS;AACT,QAAQ,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;AAC5D,OAAO;AACP,MAAM,eAAe,GAAG,eAAe,CAAC,KAAK;AAC7C,QAAQ,GAAG;AACX,QAAQ,eAAe,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,MAAM;AACzD,OAAO,CAAC;AACR,KAAK;AACL,GAAG,MAAM,IAAI,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;AAClD;AACA,IAAI,IAAI,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;AAC/C,MAAM,IAAI,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;AACtD,QAAQ,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;AAC1E,OAAO;AACP,MAAM,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;AAC1D,KAAK;AACL,IAAI,MAAM,GAAG,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,IAAI,eAAe,GAAG,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,GAAG;AACH;AACA;AACA,EAAE,eAAe,GAAG,kBAAkB,CAAC,eAAe,CAAC,CAAC;AACxD;AACA;AACA,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC;AAClB;AACA;AACA,EAAE,IAAI,QAAQ,GAAG,SAAS,IAAI,EAAE,CAAC;AACjC,EAAE,IAAI,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AACpC;AACA;AACA,EAAE,IAAI,IAAI,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,kBAAkB,CAAC,IAAI,CAAC,EAAE;AAC5C,IAAI,MAAM,IAAI,KAAK,CAAC,kDAAkD,CAAC,CAAC;AACxE,GAAG;AACH,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AACjB;AACA,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE;AACf,IAAI,IAAI,IAAI,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,kBAAkB,CAAC,IAAI,CAAC,EAAE;AAC9C,MAAM,MAAM,IAAI,KAAK,CAAC,kDAAkD,CAAC,CAAC;AAC1E,KAAK;AACL,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AACnB,GAAG;AACH;AACA;AACA,EAAE,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,MAAM,CAAC,IAAI,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;AAC5E;AACA,EAAE,IAAI,OAAO,IAAI,OAAO,CAAC,IAAI,IAAI,IAAI,EAAE,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;AAClE;AACA;AACA,EAAE,IAAI,QAAQ,CAAC;AACf,EAAE,IAAI,UAAU,CAAC;AACjB,EAAE,IAAI,OAAO,CAAC;AACd,EAAE,IAAI,WAAW,CAAC;AAClB,EAAE,IAAI,aAAa,GAAG,EAAE,aAAa,EAAE,EAAE,EAAE,CAAC;AAC5C,EAAE,IAAI,SAAS,GAAG,EAAE,oBAAoB,EAAE,EAAE,EAAE,CAAC;AAC/C,EAAE,IAAI,qBAAqB,GAAG,EAAE,aAAa,EAAE,EAAE,EAAE,CAAC;AACpD,EAAE,IAAI,aAAa,GAAG,EAAE,aAAa,EAAE,EAAE,EAAE,CAAC;AAC5C;AACA,EAAE,MAAM,CAAC,cAAc,GAAG,aAAa,CAAC;AACxC,EAAE,MAAM,CAAC,UAAU,GAAG,SAAS,CAAC;AAChC,EAAE,MAAM,CAAC,UAAU,GAAG,qBAAqB,CAAC;AAC5C,EAAE,MAAM,CAAC,cAAc,GAAG,aAAa,CAAC;AACxC;AACA;AACA,EAAE,IAAI,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;AAC3B;AACA,IAAI,IAAI,YAAY,GAAG,GAAG,CAAC,SAAS;AACpC,MAAM,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,YAAY,CAAC,MAAM;AACrD,MAAM,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,MAAM;AAC/C,KAAK,CAAC;AACN;AACA,IAAI,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,YAAY,GAAG,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACpF,IAAI,YAAY,GAAG,kBAAkB,CAAC,YAAY,CAAC,CAAC;AACpD,IAAI,OAAO,GAAG,CAAC,EAAE,aAAa,EAAE,YAAY,EAAE,CAAC,CAAC;AAChD,GAAG,MAAM;AACT;AACA,IAAI,QAAQ,GAAG,eAAe,CAAC;AAC/B;AACA,IAAI,IAAI,mBAAmB,GAAG,EAAE,CAAC;AACjC;AACA;AACA,IAAI,OAAO,GAAG,QAAQ;AACtB,OAAO,KAAK,CAAC,GAAG,CAAC;AACjB,OAAO,GAAG,CAAC,SAAS,CAAC,EAAE;AACvB,QAAQ,IAAI,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC;AACpC;AACA,QAAQ,KAAK,SAAS,GAAG,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG;AAC5D,UAAU,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAC/B,UAAU,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,KAAK,CAAC;AACtD,SAAS,MAAM;AACf;AACA,UAAU,IAAI,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AACzC,UAAU,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC;AAC7C,UAAU,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC;AAC1E;AACA,UAAU,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,SAAS;AACT;AACA;AACA,QAAQ,IAAI,mBAAmB,CAAC,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC,EAAE,OAAO,IAAI,CAAC;AAClE,QAAQ,mBAAmB,CAAC,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;AACrD;AACA;AACA,QAAQ,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;AAC5C,OAAO,CAAC;AACR,OAAO,MAAM,CAAC,SAAS,CAAC,EAAE;AAC1B,QAAQ,OAAO,CAAC,IAAI,IAAI,CAAC;AACzB,OAAO,CAAC,CAAC;AACT,GAAG;AACH;AACA;AACA,EAAE,MAAM,CAAC,MAAM,GAAG,MAAM,IAAI,OAAO,CAAC;AACpC;AACA,EAAE,UAAU,GAAG,CAAC,iBAAiB,IAAI,EAAE,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;AACvD;AACA,EAAE,UAAU,CAAC,OAAO,CAAC,SAAS,GAAG,EAAE;AACnC,IAAI,IAAI,CAAC,GAAG,EAAE,OAAO;AACrB,IAAI,IAAI,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;AACjC,MAAM,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC;AACxB,MAAM,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC1B;AACA;AACA,IAAI,QAAQ,IAAI;AAChB,MAAM,KAAK,SAAS,CAAC;AACrB,MAAM,KAAK,UAAU;AACrB,QAAQ,aAAa,CAAC,QAAQ,GAAG,KAAK,KAAK,MAAM,CAAC;AAClD,QAAQ,SAAS,CAAC,OAAO,GAAG,KAAK,KAAK,MAAM,CAAC;AAC7C,QAAQ,MAAM;AACd,MAAM,KAAK,aAAa,CAAC;AACzB,MAAM,KAAK,UAAU;AACrB,QAAQ,aAAa,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AACrD,QAAQ,qBAAqB,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAC7D,QAAQ,MAAM;AACd,MAAM,KAAK,SAAS;AACpB,QAAQ,MAAM,CAAC,OAAO,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC;AACnD,QAAQ,MAAM;AACd,MAAM,KAAK,eAAe,CAAC;AAC3B,MAAM,KAAK,gBAAgB;AAC3B,QAAQ,aAAa,CAAC,cAAc,GAAG,KAAK,KAAK,MAAM,CAAC;AACxD,QAAQ,MAAM;AACd,MAAM,KAAK,KAAK;AAChB,QAAQ,IAAI,KAAK,KAAK,QAAQ,EAAE;AAChC,UAAU,aAAa,CAAC,GAAG,GAAG,KAAK,CAAC;AACpC,UAAU,qBAAqB,CAAC,GAAG,GAAG,KAAK,CAAC;AAC5C,UAAU,aAAa,CAAC,GAAG,GAAG,KAAK,CAAC;AACpC,UAAU,MAAM;AAChB,SAAS;AACT,QAAQ,aAAa,CAAC,GAAG,GAAG,KAAK,KAAK,MAAM,CAAC;AAC7C,QAAQ,qBAAqB,CAAC,GAAG,GAAG,KAAK,KAAK,MAAM,CAAC;AACrD,QAAQ,aAAa,CAAC,GAAG,GAAG,KAAK,KAAK,MAAM,CAAC;AAC7C,QAAQ,MAAM;AACd,MAAM,KAAK,aAAa;AACxB,QAAQ,aAAa,CAAC,WAAW,GAAG,KAAK,KAAK,MAAM,CAAC;AACrD,QAAQ,qBAAqB,CAAC,WAAW,GAAG,KAAK,KAAK,MAAM,CAAC;AAC7D,QAAQ,aAAa,CAAC,WAAW,GAAG,KAAK,KAAK,MAAM,CAAC;AACrD,QAAQ,MAAM;AACd,MAAM,KAAK,YAAY,CAAC;AACxB,MAAM,KAAK,SAAS;AACpB,QAAQ,qBAAqB,CAAC,OAAO,GAAG,KAAK,CAAC;AAC9C,QAAQ,MAAM;AACd,MAAM,KAAK,eAAe;AAC1B,QAAQ,qBAAqB,CAAC,aAAa,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAClE,QAAQ,MAAM;AACd,MAAM,KAAK,SAAS;AACpB,QAAQ,qBAAqB,CAAC,OAAO,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAC5D,QAAQ,MAAM;AACd,MAAM,KAAK,eAAe,CAAC;AAC3B,MAAM,KAAK,gBAAgB;AAC3B,QAAQ,qBAAqB,CAAC,cAAc,GAAG,KAAK,KAAK,MAAM,CAAC;AAChE,QAAQ,MAAM;AACd,MAAM,KAAK,OAAO;AAClB,QAAQ,SAAS,CAAC,KAAK,GAAG,KAAK,KAAK,MAAM,CAAC;AAC3C,QAAQ,MAAM;AACd,MAAM,KAAK,SAAS;AACpB,QAAQ,SAAS,CAAC,CAAC,GAAG,KAAK,KAAK,MAAM,CAAC;AACvC,QAAQ,MAAM;AACd,MAAM,KAAK,MAAM;AACjB,QAAQ,SAAS,CAAC,IAAI,GAAG,KAAK,KAAK,MAAM,CAAC;AAC1C,QAAQ,MAAM;AACd,MAAM,KAAK,cAAc,CAAC;AAC1B,MAAM,KAAK,eAAe;AAC1B,QAAQ,SAAS,CAAC,aAAa,GAAG,KAAK,KAAK,MAAM,CAAC;AACnD,QAAQ,MAAM;AACd,MAAM,KAAK,kBAAkB;AAC7B,QAAQ,SAAS,CAAC,WAAW,GAAG,IAAIG,YAAW,CAAC,KAAK,CAAC,CAAC;AACvD,QAAQ,MAAM;AACd,MAAM,KAAK,kBAAkB;AAC7B,QAAQ,aAAa,CAAC,aAAa,CAAC,gBAAgB,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAC3E,QAAQ,qBAAqB,CAAC,aAAa,CAAC,gBAAgB,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AACnF,QAAQ,aAAa,CAAC,aAAa,CAAC,gBAAgB,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAC3E,QAAQ,MAAM;AACd,MAAM,KAAK,iBAAiB;AAC5B,QAAQ,aAAa,CAAC,aAAa,CAAC,eAAe,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAC1E,QAAQ,qBAAqB,CAAC,aAAa,CAAC,eAAe,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAClF,QAAQ,aAAa,CAAC,aAAa,CAAC,eAAe,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAC1E,QAAQ,MAAM;AACd,MAAM,KAAK,GAAG;AACd,QAAQ,SAAS,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAC1C,QAAQ,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,GAAG,KAAK,CAAC;AACpD,QAAQ,MAAM;AACd,MAAM,KAAK,YAAY;AACvB,QAAQ,SAAS,CAAC,UAAU,GAAG,KAAK,CAAC;AACrC,QAAQ,MAAM;AACd,MAAM,KAAK,mBAAmB;AAC9B,QAAQ,SAAS,CAAC,iBAAiB,GAAG,KAAK,CAAC;AAC5C,QAAQ,MAAM;AACd,MAAM,KAAK,eAAe;AAC1B,QAAQ,IAAI,KAAK,KAAK,QAAQ,EAAE;AAChC;AACA,UAAU,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI,EAAE;AACnC,YAAY,IAAI,iBAAiB,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAC;AACjE,YAAY,IAAI,iBAAiB,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACrD,cAAc,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;AACtE,YAAY,MAAM,CAAC,IAAI,GAAG,EAAE,IAAI,EAAE,iBAAiB,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;AACtE,WAAW,MAAM;AACjB,YAAY,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpE,WAAW;AACX,SAAS,MAAM,IAAI,KAAK,KAAK,cAAc,EAAE;AAC7C,UAAU,MAAM,CAAC,IAAI,GAAG,EAAE,IAAI,EAAE,kBAAkB,CAAC,QAAQ,CAAC,EAAE,CAAC;AAC/D,SAAS;AACT;AACA;AACA,QAAQ;AACR,UAAU,KAAK,KAAK,QAAQ;AAC5B,UAAU,KAAK,KAAK,cAAc;AAClC,UAAU,KAAK,KAAK,YAAY;AAChC,UAAU,KAAK,KAAK,SAAS;AAC7B,UAAU,KAAK,KAAK,aAAa;AACjC,UAAU,KAAK,KAAK,eAAe;AACnC,UAAU,KAAK,KAAK,OAAO;AAC3B;AACA,UAAU,MAAM,IAAI,KAAK;AACzB,YAAY,yFAAyF;AACrG,WAAW,CAAC;AACZ;AACA;AACA,QAAQ,SAAS,CAAC,aAAa,GAAG,KAAK,CAAC;AACxC,QAAQ,MAAM;AACd,MAAM,KAAK,yBAAyB;AACpC,QAAQ;AACR;AACA,UAAU,IAAI,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACxC,UAAU,IAAI,CAAC,GAAG,EAAE,CAAC;AACrB;AACA,UAAU,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;AACrC,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACjC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,WAAW,CAAC,CAAC;AACb;AACA;AACA,UAAU,SAAS,CAAC,uBAAuB,GAAG,CAAC,CAAC;AAChD;AACA,UAAU,IAAI,OAAO,CAAC,CAAC,YAAY,KAAK,QAAQ,EAAE,SAAS,CAAC,iBAAiB,GAAG,CAAC,CAAC,YAAY,CAAC;AAC/F,UAAU,IAAI,OAAO,CAAC,CAAC,aAAa,KAAK,QAAQ,EAAE,SAAS,CAAC,kBAAkB,GAAG,CAAC,CAAC,aAAa,CAAC;AAClG,UAAU,IAAI,OAAO,CAAC,CAAC,sBAAsB,KAAK,QAAQ;AAC1D,YAAY,SAAS,CAAC,0BAA0B;AAChD,cAAc,CAAC,CAAC,sBAAsB,KAAK,MAAM,GAAG,IAAI,GAAG,KAAK,CAAC;AACjE,SAAS;AACT,QAAQ,MAAM;AACd,MAAM,KAAK,YAAY;AACvB,QAAQ,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AACjD,QAAQ,MAAM;AACd,MAAM,KAAK,gBAAgB;AAC3B,QAAQ,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC;AAC1C,UAAU,MAAM,IAAI,KAAK;AACzB,YAAY,6FAA6F;AACzG,WAAW,CAAC;AACZ,QAAQ,SAAS,CAAC,cAAc,GAAG,KAAK,CAAC;AACzC,QAAQ,MAAM;AACd,MAAM,KAAK,qBAAqB;AAChC,QAAQ,SAAS,CAAC,mBAAmB,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAC5D,QAAQ,MAAM;AACd,MAAM,KAAK,oBAAoB;AAC/B,QAAQ;AACR;AACA,UAAU,KAAK,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC;AAC5C;AACA,UAAU,IAAI,SAAS,GAAG,EAAE,CAAC;AAC7B,UAAU,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,EAAE,EAAE;AAC7C,YAAY,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC3D,YAAY,MAAM;AAClB,WAAW;AACX;AACA;AACA,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACtC,UAAU,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAChD,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAClD,YAAY,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC3C,WAAW;AACX;AACA;AACA,UAAU,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACzD,SAAS;AACT,QAAQ,MAAM;AACd,MAAM,KAAK,aAAa;AACxB,QAAQ;AACR,UAAU,WAAW,GAAG,aAAa,CAAC,WAAW,IAAI,EAAE,CAAC;AACxD,UAAU,IAAI,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC7C,UAAU;AACV,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,UAAU,EAAE;AACpD,cAAc,OAAO,UAAU,KAAK,QAAQ,IAAI,UAAU,KAAK,MAAM,CAAC;AACtE,aAAa,CAAC;AACd,YAAY;AACZ,YAAY,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;AAClF,WAAW;AACX;AACA,UAAU,WAAW,CAAC,WAAW,GAAG,WAAW,CAAC;AAChD,UAAU,aAAa,CAAC,WAAW,GAAG,WAAW,CAAC;AAClD,SAAS;AACT,QAAQ,MAAM;AACd,MAAM,KAAK,sBAAsB;AACjC,QAAQ;AACR,UAAU,WAAW,GAAG,aAAa,CAAC,WAAW,IAAI,EAAE,CAAC;AACxD,UAAU,IAAI,oBAAoB,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AACzD,UAAU,IAAI,oBAAoB,GAAG,CAAC,CAAC,IAAI,oBAAoB,GAAG,CAAC,EAAE;AACrE,YAAY,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;AACxF,WAAW;AACX;AACA,UAAU,WAAW,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;AAClE,UAAU,aAAa,CAAC,WAAW,GAAG,WAAW,CAAC;AAClD,SAAS;AACT,QAAQ,MAAM;AACd,MAAM,KAAK,aAAa;AACxB,QAAQ,SAAS,CAAC,WAAW,GAAG,KAAK,KAAK,MAAM,CAAC;AACjD,QAAQ,MAAM;AACd,MAAM,KAAK,SAAS;AACpB,QAAQ,SAAS,CAAC,OAAO,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAChD,QAAQ,MAAM;AACd,MAAM;AACN,QAAQ;AACR,UAAU,IAAI,MAAM,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;AAC5C,UAAU,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,+CAA+C,CAAC,CAAC,CAAC;AAChF,SAAS;AACT,QAAQ,MAAM;AACd,KAAK;AACL,GAAG,CAAC,CAAC;AACL;AACA;AACA,EAAE,IAAI,SAAS,CAAC,oBAAoB,CAAC,MAAM,KAAK,CAAC,EAAE;AACnD,IAAI,SAAS,CAAC,oBAAoB,GAAG,IAAI,CAAC;AAC1C,GAAG;AACH;AACA;AACA,EAAE;AACF,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,KAAK,CAAC;AAC5C,KAAK,SAAS,CAAC,OAAO,KAAK,IAAI,IAAI,SAAS,CAAC,KAAK,KAAK,IAAI,IAAI,SAAS,CAAC,IAAI,KAAK,IAAI,CAAC;AACvF;AACA,IAAI,MAAM,IAAI,KAAK,CAAC,+DAA+D,CAAC,CAAC;AACrF;AACA;AACA,EAAE,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE;AACjC,IAAI,SAAS,CAAC,cAAc,GAAG,SAAS,CAAC;AACzC,GAAG;AACH;AACA;AACA,EAAE,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AAChD;AACA;AACA,EAAE,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;AAC3B;AACA;AACA,EAAE,OAAO,MAAM,CAAC;AAChB;;;;"}