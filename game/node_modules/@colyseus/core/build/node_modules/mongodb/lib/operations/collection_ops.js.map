{"version":3,"file":"collection_ops.js","sources":["../../../../../../../node_modules/mongodb/lib/operations/collection_ops.js"],"sourcesContent":["'use strict';\n\nconst applyWriteConcern = require('../utils').applyWriteConcern;\nconst Code = require('../core').BSON.Code;\nconst createIndexDb = require('./db_ops').createIndex;\nconst decorateWithCollation = require('../utils').decorateWithCollation;\nconst decorateWithReadConcern = require('../utils').decorateWithReadConcern;\nconst ensureIndexDb = require('./db_ops').ensureIndex;\nconst evaluate = require('./db_ops').evaluate;\nconst executeCommand = require('./db_ops').executeCommand;\nconst handleCallback = require('../utils').handleCallback;\nconst indexInformationDb = require('./db_ops').indexInformation;\nconst Long = require('../core').BSON.Long;\nconst MongoError = require('../core').MongoError;\nconst ReadPreference = require('../core').ReadPreference;\nconst insertDocuments = require('./common_functions').insertDocuments;\nconst updateDocuments = require('./common_functions').updateDocuments;\n\n/**\n * Group function helper\n * @ignore\n */\n// var groupFunction = function () {\n//   var c = db[ns].find(condition);\n//   var map = new Map();\n//   var reduce_function = reduce;\n//\n//   while (c.hasNext()) {\n//     var obj = c.next();\n//     var key = {};\n//\n//     for (var i = 0, len = keys.length; i < len; ++i) {\n//       var k = keys[i];\n//       key[k] = obj[k];\n//     }\n//\n//     var aggObj = map.get(key);\n//\n//     if (aggObj == null) {\n//       var newObj = Object.extend({}, key);\n//       aggObj = Object.extend(newObj, initial);\n//       map.put(key, aggObj);\n//     }\n//\n//     reduce_function(obj, aggObj);\n//   }\n//\n//   return { \"result\": map.values() };\n// }.toString();\nconst groupFunction =\n  'function () {\\nvar c = db[ns].find(condition);\\nvar map = new Map();\\nvar reduce_function = reduce;\\n\\nwhile (c.hasNext()) {\\nvar obj = c.next();\\nvar key = {};\\n\\nfor (var i = 0, len = keys.length; i < len; ++i) {\\nvar k = keys[i];\\nkey[k] = obj[k];\\n}\\n\\nvar aggObj = map.get(key);\\n\\nif (aggObj == null) {\\nvar newObj = Object.extend({}, key);\\naggObj = Object.extend(newObj, initial);\\nmap.put(key, aggObj);\\n}\\n\\nreduce_function(obj, aggObj);\\n}\\n\\nreturn { \"result\": map.values() };\\n}';\n\n/**\n * Create an index on the db and collection.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options] Optional settings. See Collection.prototype.createIndex for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n */\nfunction createIndex(coll, fieldOrSpec, options, callback) {\n  createIndexDb(coll.s.db, coll.collectionName, fieldOrSpec, options, callback);\n}\n\n/**\n * Create multiple indexes in the collection. This method is only supported for\n * MongoDB 2.6 or higher. Earlier version of MongoDB will throw a command not supported\n * error. Index specifications are defined at http://docs.mongodb.org/manual/reference/command/createIndexes/.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {array} indexSpecs An array of index specifications to be created\n * @param {Object} [options] Optional settings. See Collection.prototype.createIndexes for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n */\nfunction createIndexes(coll, indexSpecs, options, callback) {\n  const capabilities = coll.s.topology.capabilities();\n\n  // Ensure we generate the correct name if the parameter is not set\n  for (let i = 0; i < indexSpecs.length; i++) {\n    if (indexSpecs[i].name == null) {\n      const keys = [];\n\n      // Did the user pass in a collation, check if our write server supports it\n      if (indexSpecs[i].collation && capabilities && !capabilities.commandsTakeCollation) {\n        return callback(new MongoError('server/primary/mongos does not support collation'));\n      }\n\n      for (let name in indexSpecs[i].key) {\n        keys.push(`${name}_${indexSpecs[i].key[name]}`);\n      }\n\n      // Set the name\n      indexSpecs[i].name = keys.join('_');\n    }\n  }\n\n  options = Object.assign({}, options, { readPreference: ReadPreference.PRIMARY });\n\n  // Execute the index\n  executeCommand(\n    coll.s.db,\n    {\n      createIndexes: coll.collectionName,\n      indexes: indexSpecs\n    },\n    options,\n    callback\n  );\n}\n\n/**\n * Ensure that an index exists. If the index does not exist, this function creates it.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options] Optional settings. See Collection.prototype.ensureIndex for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n */\nfunction ensureIndex(coll, fieldOrSpec, options, callback) {\n  ensureIndexDb(coll.s.db, coll.collectionName, fieldOrSpec, options, callback);\n}\n\n/**\n * Run a group command across a collection.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {(object|array|function|code)} keys An object, array or function expressing the keys to group by.\n * @param {object} condition An optional condition that must be true for a row to be considered.\n * @param {object} initial Initial value of the aggregation counter object.\n * @param {(function|Code)} reduce The reduce function aggregates (reduces) the objects iterated\n * @param {(function|Code)} finalize An optional function to be run on each item in the result set just before the item is returned.\n * @param {boolean} command Specify if you wish to run using the internal group command or using eval, default is true.\n * @param {object} [options] Optional settings. See Collection.prototype.group for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @deprecated MongoDB 3.6 or higher will no longer support the group command. We recommend rewriting using the aggregation framework.\n */\nfunction group(coll, keys, condition, initial, reduce, finalize, command, options, callback) {\n  // Execute using the command\n  if (command) {\n    const reduceFunction = reduce && reduce._bsontype === 'Code' ? reduce : new Code(reduce);\n\n    const selector = {\n      group: {\n        ns: coll.collectionName,\n        $reduce: reduceFunction,\n        cond: condition,\n        initial: initial,\n        out: 'inline'\n      }\n    };\n\n    // if finalize is defined\n    if (finalize != null) selector.group['finalize'] = finalize;\n    // Set up group selector\n    if ('function' === typeof keys || (keys && keys._bsontype === 'Code')) {\n      selector.group.$keyf = keys && keys._bsontype === 'Code' ? keys : new Code(keys);\n    } else {\n      const hash = {};\n      keys.forEach(key => {\n        hash[key] = 1;\n      });\n      selector.group.key = hash;\n    }\n\n    options = Object.assign({}, options);\n    // Ensure we have the right read preference inheritance\n    options.readPreference = ReadPreference.resolve(coll, options);\n\n    // Do we have a readConcern specified\n    decorateWithReadConcern(selector, coll, options);\n\n    // Have we specified collation\n    try {\n      decorateWithCollation(selector, coll, options);\n    } catch (err) {\n      return callback(err, null);\n    }\n\n    // Execute command\n    executeCommand(coll.s.db, selector, options, (err, result) => {\n      if (err) return handleCallback(callback, err, null);\n      handleCallback(callback, null, result.retval);\n    });\n  } else {\n    // Create execution scope\n    const scope = reduce != null && reduce._bsontype === 'Code' ? reduce.scope : {};\n\n    scope.ns = coll.collectionName;\n    scope.keys = keys;\n    scope.condition = condition;\n    scope.initial = initial;\n\n    // Pass in the function text to execute within mongodb.\n    const groupfn = groupFunction.replace(/ reduce;/, reduce.toString() + ';');\n\n    evaluate(coll.s.db, new Code(groupfn, scope), null, options, (err, results) => {\n      if (err) return handleCallback(callback, err, null);\n      handleCallback(callback, null, results.result || results);\n    });\n  }\n}\n\n/**\n * Retrieve all the indexes on the collection.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {Object} [options] Optional settings. See Collection.prototype.indexes for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n */\nfunction indexes(coll, options, callback) {\n  options = Object.assign({}, { full: true }, options);\n  indexInformationDb(coll.s.db, coll.collectionName, options, callback);\n}\n\n/**\n * Check if one or more indexes exist on the collection. This fails on the first index that doesn't exist.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {(string|array)} indexes One or more index names to check.\n * @param {Object} [options] Optional settings. See Collection.prototype.indexExists for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n */\nfunction indexExists(coll, indexes, options, callback) {\n  indexInformation(coll, options, (err, indexInformation) => {\n    // If we have an error return\n    if (err != null) return handleCallback(callback, err, null);\n    // Let's check for the index names\n    if (!Array.isArray(indexes))\n      return handleCallback(callback, null, indexInformation[indexes] != null);\n    // Check in list of indexes\n    for (let i = 0; i < indexes.length; i++) {\n      if (indexInformation[indexes[i]] == null) {\n        return handleCallback(callback, null, false);\n      }\n    }\n\n    // All keys found return true\n    return handleCallback(callback, null, true);\n  });\n}\n\n/**\n * Retrieve this collection's index info.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {object} [options] Optional settings. See Collection.prototype.indexInformation for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n */\nfunction indexInformation(coll, options, callback) {\n  indexInformationDb(coll.s.db, coll.collectionName, options, callback);\n}\n\n/**\n * Return N parallel cursors for a collection to allow parallel reading of the entire collection. There are\n * no ordering guarantees for returned results.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {object} [options] Optional settings. See Collection.prototype.parallelCollectionScan for a list of options.\n * @param {Collection~parallelCollectionScanCallback} [callback] The command result callback\n */\nfunction parallelCollectionScan(coll, options, callback) {\n  // Create command object\n  const commandObject = {\n    parallelCollectionScan: coll.collectionName,\n    numCursors: options.numCursors\n  };\n\n  // Do we have a readConcern specified\n  decorateWithReadConcern(commandObject, coll, options);\n\n  // Store the raw value\n  const raw = options.raw;\n  delete options['raw'];\n\n  // Execute the command\n  executeCommand(coll.s.db, commandObject, options, (err, result) => {\n    if (err) return handleCallback(callback, err, null);\n    if (result == null)\n      return handleCallback(\n        callback,\n        new Error('no result returned for parallelCollectionScan'),\n        null\n      );\n\n    options = Object.assign({ explicitlyIgnoreSession: true }, options);\n\n    const cursors = [];\n    // Add the raw back to the option\n    if (raw) options.raw = raw;\n    // Create command cursors for each item\n    for (let i = 0; i < result.cursors.length; i++) {\n      const rawId = result.cursors[i].cursor.id;\n      // Convert cursorId to Long if needed\n      const cursorId = typeof rawId === 'number' ? Long.fromNumber(rawId) : rawId;\n      // Add a command cursor\n      cursors.push(coll.s.topology.cursor(coll.namespace, cursorId, options));\n    }\n\n    handleCallback(callback, null, cursors);\n  });\n}\n\n/**\n * Save a document.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {object} doc Document to save\n * @param {object} [options] Optional settings. See Collection.prototype.save for a list of options.\n * @param {Collection~writeOpCallback} [callback] The command result callback\n * @deprecated use insertOne, insertMany, updateOne or updateMany\n */\nfunction save(coll, doc, options, callback) {\n  // Get the write concern options\n  const finalOptions = applyWriteConcern(\n    Object.assign({}, options),\n    { db: coll.s.db, collection: coll },\n    options\n  );\n  // Establish if we need to perform an insert or update\n  if (doc._id != null) {\n    finalOptions.upsert = true;\n    return updateDocuments(coll, { _id: doc._id }, doc, finalOptions, callback);\n  }\n\n  // Insert the document\n  insertDocuments(coll, [doc], finalOptions, (err, result) => {\n    if (callback == null) return;\n    if (doc == null) return handleCallback(callback, null, null);\n    if (err) return handleCallback(callback, err, null);\n    handleCallback(callback, null, result);\n  });\n}\n\nmodule.exports = {\n  createIndex,\n  createIndexes,\n  ensureIndex,\n  group,\n  indexes,\n  indexExists,\n  indexInformation,\n  parallelCollectionScan,\n  save\n};\n"],"names":["require$$0","require$$1","require$$2","require$$3"],"mappings":";;;;;;;AAEA,MAAM,iBAAiB,GAAGA,KAAmB,CAAC,iBAAiB,CAAC;AAChE,MAAM,IAAI,GAAGC,KAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;AAC1C,MAAM,aAAa,GAAGC,MAAmB,CAAC,WAAW,CAAC;AACtD,MAAM,qBAAqB,GAAGF,KAAmB,CAAC,qBAAqB,CAAC;AACxE,MAAM,uBAAuB,GAAGA,KAAmB,CAAC,uBAAuB,CAAC;AAC5E,MAAM,aAAa,GAAGE,MAAmB,CAAC,WAAW,CAAC;AACtD,MAAM,QAAQ,GAAGA,MAAmB,CAAC,QAAQ,CAAC;AAC9C,MAAM,cAAc,GAAGA,MAAmB,CAAC,cAAc,CAAC;AAC1D,MAAM,cAAc,GAAGF,KAAmB,CAAC,cAAc,CAAC;AAC1D,MAAM,kBAAkB,GAAGE,MAAmB,CAAC,gBAAgB,CAAC;AAChE,MAAM,IAAI,GAAGD,KAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;AAC1C,MAAM,UAAU,GAAGA,KAAkB,CAAC,UAAU,CAAC;AACjD,MAAM,cAAc,GAAGA,KAAkB,CAAC,cAAc,CAAC;AACzD,MAAM,eAAe,GAAGE,gBAA6B,CAAC,eAAe,CAAC;AACtE,MAAM,eAAe,GAAGA,gBAA6B,CAAC,eAAe,CAAC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,aAAa;AACnB,EAAE,6eAA6e,CAAC;AAChf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,QAAQ,EAAE;AAC3D,EAAE,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,EAAE,WAAW,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;AAChF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,aAAa,CAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE;AAC5D,EAAE,MAAM,YAAY,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;AACtD;AACA;AACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9C,IAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,EAAE;AACpC,MAAM,MAAM,IAAI,GAAG,EAAE,CAAC;AACtB;AACA;AACA,MAAM,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS,IAAI,YAAY,IAAI,CAAC,YAAY,CAAC,qBAAqB,EAAE;AAC1F,QAAQ,OAAO,QAAQ,CAAC,IAAI,UAAU,CAAC,kDAAkD,CAAC,CAAC,CAAC;AAC5F,OAAO;AACP;AACA,MAAM,KAAK,IAAI,IAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;AAC1C,QAAQ,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,OAAO;AACP;AACA;AACA,MAAM,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC1C,KAAK;AACL,GAAG;AACH;AACA,EAAE,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,EAAE,EAAE,cAAc,EAAE,cAAc,CAAC,OAAO,EAAE,CAAC,CAAC;AACnF;AACA;AACA,EAAE,cAAc;AAChB,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE;AACb,IAAI;AACJ,MAAM,aAAa,EAAE,IAAI,CAAC,cAAc;AACxC,MAAM,OAAO,EAAE,UAAU;AACzB,KAAK;AACL,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,GAAG,CAAC;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,QAAQ,EAAE;AAC3D,EAAE,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,EAAE,WAAW,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;AAChF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE;AAC7F;AACA,EAAE,IAAI,OAAO,EAAE;AACf,IAAI,MAAM,cAAc,GAAG,MAAM,IAAI,MAAM,CAAC,SAAS,KAAK,MAAM,GAAG,MAAM,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC;AAC7F;AACA,IAAI,MAAM,QAAQ,GAAG;AACrB,MAAM,KAAK,EAAE;AACb,QAAQ,EAAE,EAAE,IAAI,CAAC,cAAc;AAC/B,QAAQ,OAAO,EAAE,cAAc;AAC/B,QAAQ,IAAI,EAAE,SAAS;AACvB,QAAQ,OAAO,EAAE,OAAO;AACxB,QAAQ,GAAG,EAAE,QAAQ;AACrB,OAAO;AACP,KAAK,CAAC;AACN;AACA;AACA,IAAI,IAAI,QAAQ,IAAI,IAAI,EAAE,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;AAChE;AACA,IAAI,IAAI,UAAU,KAAK,OAAO,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,SAAS,KAAK,MAAM,CAAC,EAAE;AAC3E,MAAM,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,KAAK,MAAM,GAAG,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;AACvF,KAAK,MAAM;AACX,MAAM,MAAM,IAAI,GAAG,EAAE,CAAC;AACtB,MAAM,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI;AAC1B,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACtB,OAAO,CAAC,CAAC;AACT,MAAM,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC;AAChC,KAAK;AACL;AACA,IAAI,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;AACzC;AACA,IAAI,OAAO,CAAC,cAAc,GAAG,cAAc,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AACnE;AACA;AACA,IAAI,uBAAuB,CAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AACrD;AACA;AACA,IAAI,IAAI;AACR,MAAM,qBAAqB,CAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AACrD,KAAK,CAAC,OAAO,GAAG,EAAE;AAClB,MAAM,OAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACjC,KAAK;AACL;AACA;AACA,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,GAAG,EAAE,MAAM,KAAK;AAClE,MAAM,IAAI,GAAG,EAAE,OAAO,cAAc,CAAC,QAAQ,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;AAC1D,MAAM,cAAc,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;AACpD,KAAK,CAAC,CAAC;AACP,GAAG,MAAM;AACT;AACA,IAAI,MAAM,KAAK,GAAG,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,SAAS,KAAK,MAAM,GAAG,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;AACpF;AACA,IAAI,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC;AACnC,IAAI,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;AACtB,IAAI,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;AAChC,IAAI,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;AAC5B;AACA;AACA,IAAI,MAAM,OAAO,GAAG,aAAa,CAAC,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC,CAAC;AAC/E;AACA,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,GAAG,EAAE,OAAO,KAAK;AACnF,MAAM,IAAI,GAAG,EAAE,OAAO,cAAc,CAAC,QAAQ,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;AAC1D,MAAM,cAAc,CAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,CAAC;AAChE,KAAK,CAAC,CAAC;AACP,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE;AAC1C,EAAE,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;AACvD,EAAE,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;AACxE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE;AACvD,EAAE,gBAAgB,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,GAAG,EAAE,gBAAgB,KAAK;AAC7D;AACA,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,OAAO,cAAc,CAAC,QAAQ,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;AAChE;AACA,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC;AAC/B,MAAM,OAAO,cAAc,CAAC,QAAQ,EAAE,IAAI,EAAE,gBAAgB,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC;AAC/E;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7C,MAAM,IAAI,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;AAChD,QAAQ,OAAO,cAAc,CAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AACrD,OAAO;AACP,KAAK;AACL;AACA;AACA,IAAI,OAAO,cAAc,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAChD,GAAG,CAAC,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE;AACnD,EAAE,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;AACxE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,sBAAsB,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE;AACzD;AACA,EAAE,MAAM,aAAa,GAAG;AACxB,IAAI,sBAAsB,EAAE,IAAI,CAAC,cAAc;AAC/C,IAAI,UAAU,EAAE,OAAO,CAAC,UAAU;AAClC,GAAG,CAAC;AACJ;AACA;AACA,EAAE,uBAAuB,CAAC,aAAa,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AACxD;AACA;AACA,EAAE,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;AAC1B,EAAE,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC;AACxB;AACA;AACA,EAAE,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,aAAa,EAAE,OAAO,EAAE,CAAC,GAAG,EAAE,MAAM,KAAK;AACrE,IAAI,IAAI,GAAG,EAAE,OAAO,cAAc,CAAC,QAAQ,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;AACxD,IAAI,IAAI,MAAM,IAAI,IAAI;AACtB,MAAM,OAAO,cAAc;AAC3B,QAAQ,QAAQ;AAChB,QAAQ,IAAI,KAAK,CAAC,+CAA+C,CAAC;AAClE,QAAQ,IAAI;AACZ,OAAO,CAAC;AACR;AACA,IAAI,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,uBAAuB,EAAE,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;AACxE;AACA,IAAI,MAAM,OAAO,GAAG,EAAE,CAAC;AACvB;AACA,IAAI,IAAI,GAAG,EAAE,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;AAC/B;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpD,MAAM,MAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC;AAChD;AACA,MAAM,MAAM,QAAQ,GAAG,OAAO,KAAK,KAAK,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;AAClF;AACA,MAAM,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;AAC9E,KAAK;AACL;AACA,IAAI,cAAc,CAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AAC5C,GAAG,CAAC,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE;AAC5C;AACA,EAAE,MAAM,YAAY,GAAG,iBAAiB;AACxC,IAAI,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC;AAC9B,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE;AACvC,IAAI,OAAO;AACX,GAAG,CAAC;AACJ;AACA,EAAE,IAAI,GAAG,CAAC,GAAG,IAAI,IAAI,EAAE;AACvB,IAAI,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC;AAC/B,IAAI,OAAO,eAAe,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,YAAY,EAAE,QAAQ,CAAC,CAAC;AAChF,GAAG;AACH;AACA;AACA,EAAE,eAAe,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,YAAY,EAAE,CAAC,GAAG,EAAE,MAAM,KAAK;AAC9D,IAAI,IAAI,QAAQ,IAAI,IAAI,EAAE,OAAO;AACjC,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,OAAO,cAAc,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACjE,IAAI,IAAI,GAAG,EAAE,OAAO,cAAc,CAAC,QAAQ,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;AACxD,IAAI,cAAc,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;AAC3C,GAAG,CAAC,CAAC;AACL,CAAC;AACD;kBACc,GAAG;AACjB,EAAE,WAAW;AACb,EAAE,aAAa;AACf,EAAE,WAAW;AACb,EAAE,KAAK;AACP,EAAE,OAAO;AACT,EAAE,WAAW;AACb,EAAE,gBAAgB;AAClB,EAAE,sBAAsB;AACxB,EAAE,IAAI;AACN;;;;"}