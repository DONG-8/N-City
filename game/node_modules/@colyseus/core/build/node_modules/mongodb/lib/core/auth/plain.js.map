{"version":3,"file":"plain.js","sources":["../../../../../../../../node_modules/mongodb/lib/core/auth/plain.js"],"sourcesContent":["'use strict';\nconst retrieveBSON = require('../connection/utils').retrieveBSON;\nconst AuthProvider = require('./auth_provider').AuthProvider;\n\n// TODO: can we get the Binary type from this.bson instead?\nconst BSON = retrieveBSON();\nconst Binary = BSON.Binary;\n\nclass Plain extends AuthProvider {\n  auth(authContext, callback) {\n    const connection = authContext.connection;\n    const credentials = authContext.credentials;\n    const username = credentials.username;\n    const password = credentials.password;\n\n    const payload = new Binary(`\\x00${username}\\x00${password}`);\n    const command = {\n      saslStart: 1,\n      mechanism: 'PLAIN',\n      payload: payload,\n      autoAuthorize: 1\n    };\n\n    connection.command('$external.$cmd', command, callback);\n  }\n}\n\nmodule.exports = Plain;\n"],"names":["require$$0","require$$1"],"mappings":";;;;;AACA,MAAM,YAAY,GAAGA,KAA8B,CAAC,YAAY,CAAC;AACjE,MAAM,YAAY,GAAGC,aAA0B,CAAC,YAAY,CAAC;AAC7D;AACA;AACA,MAAM,IAAI,GAAG,YAAY,EAAE,CAAC;AAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC3B;AACA,MAAM,KAAK,SAAS,YAAY,CAAC;AACjC,EAAE,IAAI,CAAC,WAAW,EAAE,QAAQ,EAAE;AAC9B,IAAI,MAAM,UAAU,GAAG,WAAW,CAAC,UAAU,CAAC;AAC9C,IAAI,MAAM,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC;AAChD,IAAI,MAAM,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;AAC1C,IAAI,MAAM,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;AAC1C;AACA,IAAI,MAAM,OAAO,GAAG,IAAI,MAAM,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;AACjE,IAAI,MAAM,OAAO,GAAG;AACpB,MAAM,SAAS,EAAE,CAAC;AAClB,MAAM,SAAS,EAAE,OAAO;AACxB,MAAM,OAAO,EAAE,OAAO;AACtB,MAAM,aAAa,EAAE,CAAC;AACtB,KAAK,CAAC;AACN;AACA,IAAI,UAAU,CAAC,OAAO,CAAC,gBAAgB,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;AAC5D,GAAG;AACH,CAAC;AACD;SACc,GAAG;;;;"}