{"version":3,"file":"parser.js","sources":["../../../../../../node_modules/redis-parser/lib/parser.js"],"sourcesContent":["'use strict'\n\nvar StringDecoder = require('string_decoder').StringDecoder\nvar decoder = new StringDecoder()\nvar ReplyError = require('./replyError')\nvar ParserError = require('./parserError')\nvar bufferPool = bufferAlloc(32 * 1024)\nvar bufferOffset = 0\nvar interval = null\nvar counter = 0\nvar notDecreased = 0\nvar isModern = typeof Buffer.allocUnsafe === 'function'\n\n/**\n * For backwards compatibility\n * @param len\n * @returns {Buffer}\n */\n\nfunction bufferAlloc (len) {\n  return isModern ? Buffer.allocUnsafe(len) : new Buffer(len)\n}\n\n/**\n * Used for lengths and numbers only, faster perf on arrays / bulks\n * @param parser\n * @returns {*}\n */\nfunction parseSimpleNumbers (parser) {\n  var offset = parser.offset\n  var length = parser.buffer.length - 1\n  var number = 0\n  var sign = 1\n\n  if (parser.buffer[offset] === 45) {\n    sign = -1\n    offset++\n  }\n\n  while (offset < length) {\n    var c1 = parser.buffer[offset++]\n    if (c1 === 13) { // \\r\\n\n      parser.offset = offset + 1\n      return sign * number\n    }\n    number = (number * 10) + (c1 - 48)\n  }\n}\n\n/**\n * Used for integer numbers in case of the returnNumbers option\n *\n * The maximimum possible integer to use is: Math.floor(Number.MAX_SAFE_INTEGER / 10)\n * Staying in a SMI Math.floor((Math.pow(2, 32) / 10) - 1) is even more efficient though\n *\n * @param parser\n * @returns {*}\n */\nfunction parseStringNumbers (parser) {\n  var offset = parser.offset\n  var length = parser.buffer.length - 1\n  var number = 0\n  var res = ''\n\n  if (parser.buffer[offset] === 45) {\n    res += '-'\n    offset++\n  }\n\n  while (offset < length) {\n    var c1 = parser.buffer[offset++]\n    if (c1 === 13) { // \\r\\n\n      parser.offset = offset + 1\n      if (number !== 0) {\n        res += number\n      }\n      return res\n    } else if (number > 429496728) {\n      res += (number * 10) + (c1 - 48)\n      number = 0\n    } else if (c1 === 48 && number === 0) {\n      res += 0\n    } else {\n      number = (number * 10) + (c1 - 48)\n    }\n  }\n}\n\n/**\n * Returns a string or buffer of the provided offset start and\n * end ranges. Checks `optionReturnBuffers`.\n *\n * If returnBuffers is active, all return values are returned as buffers besides numbers and errors\n *\n * @param parser\n * @param start\n * @param end\n * @returns {*}\n */\nfunction convertBufferRange (parser, start, end) {\n  parser.offset = end + 2\n  if (parser.optionReturnBuffers === true) {\n    return parser.buffer.slice(start, end)\n  }\n\n  return parser.buffer.toString('utf-8', start, end)\n}\n\n/**\n * Parse a '+' redis simple string response but forward the offsets\n * onto convertBufferRange to generate a string.\n * @param parser\n * @returns {*}\n */\nfunction parseSimpleString (parser) {\n  var start = parser.offset\n  var offset = start\n  var buffer = parser.buffer\n  var length = buffer.length - 1\n\n  while (offset < length) {\n    if (buffer[offset++] === 13) { // \\r\\n\n      return convertBufferRange(parser, start, offset - 1)\n    }\n  }\n}\n\n/**\n * Returns the string length via parseSimpleNumbers\n * @param parser\n * @returns {*}\n */\nfunction parseLength (parser) {\n  var string = parseSimpleNumbers(parser)\n  if (string !== undefined) {\n    return string\n  }\n}\n\n/**\n * Parse a ':' redis integer response\n *\n * If stringNumbers is activated the parser always returns numbers as string\n * This is important for big numbers (number > Math.pow(2, 53)) as js numbers\n * are 64bit floating point numbers with reduced precision\n *\n * @param parser\n * @returns {*}\n */\nfunction parseInteger (parser) {\n  if (parser.optionStringNumbers) {\n    return parseStringNumbers(parser)\n  }\n  return parseSimpleNumbers(parser)\n}\n\n/**\n * Parse a '$' redis bulk string response\n * @param parser\n * @returns {*}\n */\nfunction parseBulkString (parser) {\n  var length = parseLength(parser)\n  if (length === undefined) {\n    return\n  }\n  if (length === -1) {\n    return null\n  }\n  var offsetEnd = parser.offset + length\n  if (offsetEnd + 2 > parser.buffer.length) {\n    parser.bigStrSize = offsetEnd + 2\n    parser.bigOffset = parser.offset\n    parser.totalChunkSize = parser.buffer.length\n    parser.bufferCache.push(parser.buffer)\n    return\n  }\n\n  return convertBufferRange(parser, parser.offset, offsetEnd)\n}\n\n/**\n * Parse a '-' redis error response\n * @param parser\n * @returns {Error}\n */\nfunction parseError (parser) {\n  var string = parseSimpleString(parser)\n  if (string !== undefined) {\n    if (parser.optionReturnBuffers === true) {\n      string = string.toString()\n    }\n    return new ReplyError(string)\n  }\n}\n\n/**\n * Parsing error handler, resets parser buffer\n * @param parser\n * @param error\n */\nfunction handleError (parser, error) {\n  parser.buffer = null\n  parser.returnFatalError(error)\n}\n\n/**\n * Parse a '*' redis array response\n * @param parser\n * @returns {*}\n */\nfunction parseArray (parser) {\n  var length = parseLength(parser)\n  if (length === undefined) {\n    return\n  }\n  if (length === -1) {\n    return null\n  }\n  var responses = new Array(length)\n  return parseArrayElements(parser, responses, 0)\n}\n\n/**\n * Push a partly parsed array to the stack\n *\n * @param parser\n * @param elem\n * @param i\n * @returns {undefined}\n */\nfunction pushArrayCache (parser, elem, pos) {\n  parser.arrayCache.push(elem)\n  parser.arrayPos.push(pos)\n}\n\n/**\n * Parse chunked redis array response\n * @param parser\n * @returns {*}\n */\nfunction parseArrayChunks (parser) {\n  var tmp = parser.arrayCache.pop()\n  var pos = parser.arrayPos.pop()\n  if (parser.arrayCache.length) {\n    var res = parseArrayChunks(parser)\n    if (!res) {\n      pushArrayCache(parser, tmp, pos)\n      return\n    }\n    tmp[pos++] = res\n  }\n  return parseArrayElements(parser, tmp, pos)\n}\n\n/**\n * Parse redis array response elements\n * @param parser\n * @param responses\n * @param i\n * @returns {*}\n */\nfunction parseArrayElements (parser, responses, i) {\n  var bufferLength = parser.buffer.length\n  while (i < responses.length) {\n    var offset = parser.offset\n    if (parser.offset >= bufferLength) {\n      pushArrayCache(parser, responses, i)\n      return\n    }\n    var response = parseType(parser, parser.buffer[parser.offset++])\n    if (response === undefined) {\n      if (!parser.arrayCache.length) {\n        parser.offset = offset\n      }\n      pushArrayCache(parser, responses, i)\n      return\n    }\n    responses[i] = response\n    i++\n  }\n\n  return responses\n}\n\n/**\n * Called the appropriate parser for the specified type.\n * @param parser\n * @param type\n * @returns {*}\n */\nfunction parseType (parser, type) {\n  switch (type) {\n    case 36: // $\n      return parseBulkString(parser)\n    case 58: // :\n      return parseInteger(parser)\n    case 43: // +\n      return parseSimpleString(parser)\n    case 42: // *\n      return parseArray(parser)\n    case 45: // -\n      return parseError(parser)\n    default:\n      return handleError(parser, new ParserError(\n        'Protocol error, got ' + JSON.stringify(String.fromCharCode(type)) + ' as reply type byte',\n        JSON.stringify(parser.buffer),\n        parser.offset\n      ))\n  }\n}\n\n// All allowed options including their typeof value\nvar optionTypes = {\n  returnError: 'function',\n  returnFatalError: 'function',\n  returnReply: 'function',\n  returnBuffers: 'boolean',\n  stringNumbers: 'boolean',\n  name: 'string'\n}\n\n/**\n * Javascript Redis Parser\n * @param options\n * @constructor\n */\nfunction JavascriptRedisParser (options) {\n  if (!(this instanceof JavascriptRedisParser)) {\n    return new JavascriptRedisParser(options)\n  }\n  if (!options || !options.returnError || !options.returnReply) {\n    throw new TypeError('Please provide all return functions while initiating the parser')\n  }\n  for (var key in options) {\n    // eslint-disable-next-line valid-typeof\n    if (optionTypes.hasOwnProperty(key) && typeof options[key] !== optionTypes[key]) {\n      throw new TypeError('The options argument contains the property \"' + key + '\" that is either unknown or of a wrong type')\n    }\n  }\n  if (options.name === 'hiredis') {\n    /* istanbul ignore next: hiredis is only supported for legacy usage */\n    try {\n      var Hiredis = require('./hiredis')\n      console.error(new TypeError('Using hiredis is discouraged. Please use the faster JS parser by removing the name option.').stack.replace('Error', 'Warning'))\n      return new Hiredis(options)\n    } catch (e) {\n      console.error(new TypeError('Hiredis is not installed. Please remove the `name` option. The (faster) JS parser is used instead.').stack.replace('Error', 'Warning'))\n    }\n  }\n  this.optionReturnBuffers = !!options.returnBuffers\n  this.optionStringNumbers = !!options.stringNumbers\n  this.returnError = options.returnError\n  this.returnFatalError = options.returnFatalError || options.returnError\n  this.returnReply = options.returnReply\n  this.name = 'javascript'\n  this.reset()\n}\n\n/**\n * Reset the parser values to the initial state\n *\n * @returns {undefined}\n */\nJavascriptRedisParser.prototype.reset = function () {\n  this.offset = 0\n  this.buffer = null\n  this.bigStrSize = 0\n  this.bigOffset = 0\n  this.totalChunkSize = 0\n  this.bufferCache = []\n  this.arrayCache = []\n  this.arrayPos = []\n}\n\n/**\n * Set the returnBuffers option\n *\n * @param returnBuffers\n * @returns {undefined}\n */\nJavascriptRedisParser.prototype.setReturnBuffers = function (returnBuffers) {\n  if (typeof returnBuffers !== 'boolean') {\n    throw new TypeError('The returnBuffers argument has to be a boolean')\n  }\n  this.optionReturnBuffers = returnBuffers\n}\n\n/**\n * Set the stringNumbers option\n *\n * @param stringNumbers\n * @returns {undefined}\n */\nJavascriptRedisParser.prototype.setStringNumbers = function (stringNumbers) {\n  if (typeof stringNumbers !== 'boolean') {\n    throw new TypeError('The stringNumbers argument has to be a boolean')\n  }\n  this.optionStringNumbers = stringNumbers\n}\n\n/**\n * Decrease the bufferPool size over time\n * @returns {undefined}\n */\nfunction decreaseBufferPool () {\n  if (bufferPool.length > 50 * 1024) {\n    // Balance between increasing and decreasing the bufferPool\n    if (counter === 1 || notDecreased > counter * 2) {\n      // Decrease the bufferPool by 10% by removing the first 10% of the current pool\n      var sliceLength = Math.floor(bufferPool.length / 10)\n      if (bufferOffset <= sliceLength) {\n        bufferOffset = 0\n      } else {\n        bufferOffset -= sliceLength\n      }\n      bufferPool = bufferPool.slice(sliceLength, bufferPool.length)\n    } else {\n      notDecreased++\n      counter--\n    }\n  } else {\n    clearInterval(interval)\n    counter = 0\n    notDecreased = 0\n    interval = null\n  }\n}\n\n/**\n * Check if the requested size fits in the current bufferPool.\n * If it does not, reset and increase the bufferPool accordingly.\n *\n * @param length\n * @returns {undefined}\n */\nfunction resizeBuffer (length) {\n  if (bufferPool.length < length + bufferOffset) {\n    var multiplier = length > 1024 * 1024 * 75 ? 2 : 3\n    if (bufferOffset > 1024 * 1024 * 111) {\n      bufferOffset = 1024 * 1024 * 50\n    }\n    bufferPool = bufferAlloc(length * multiplier + bufferOffset)\n    bufferOffset = 0\n    counter++\n    if (interval === null) {\n      interval = setInterval(decreaseBufferPool, 50)\n    }\n  }\n}\n\n/**\n * Concat a bulk string containing multiple chunks\n *\n * Notes:\n * 1) The first chunk might contain the whole bulk string including the \\r\n * 2) We are only safe to fully add up elements that are neither the first nor any of the last two elements\n *\n * @param parser\n * @returns {String}\n */\nfunction concatBulkString (parser) {\n  var list = parser.bufferCache\n  var chunks = list.length\n  var offset = parser.bigStrSize - parser.totalChunkSize\n  parser.offset = offset\n  if (offset <= 2) {\n    if (chunks === 2) {\n      return list[0].toString('utf8', parser.bigOffset, list[0].length + offset - 2)\n    }\n    chunks--\n    offset = list[list.length - 2].length + offset\n  }\n  var res = decoder.write(list[0].slice(parser.bigOffset))\n  for (var i = 1; i < chunks - 1; i++) {\n    res += decoder.write(list[i])\n  }\n  res += decoder.end(list[i].slice(0, offset - 2))\n  return res\n}\n\n/**\n * Concat the collected chunks from parser.bufferCache.\n *\n * Increases the bufferPool size beforehand if necessary.\n *\n * @param parser\n * @returns {Buffer}\n */\nfunction concatBulkBuffer (parser) {\n  var list = parser.bufferCache\n  var chunks = list.length\n  var length = parser.bigStrSize - parser.bigOffset - 2\n  var offset = parser.bigStrSize - parser.totalChunkSize\n  parser.offset = offset\n  if (offset <= 2) {\n    if (chunks === 2) {\n      return list[0].slice(parser.bigOffset, list[0].length + offset - 2)\n    }\n    chunks--\n    offset = list[list.length - 2].length + offset\n  }\n  resizeBuffer(length)\n  var start = bufferOffset\n  list[0].copy(bufferPool, start, parser.bigOffset, list[0].length)\n  bufferOffset += list[0].length - parser.bigOffset\n  for (var i = 1; i < chunks - 1; i++) {\n    list[i].copy(bufferPool, bufferOffset)\n    bufferOffset += list[i].length\n  }\n  list[i].copy(bufferPool, bufferOffset, 0, offset - 2)\n  bufferOffset += offset - 2\n  return bufferPool.slice(start, bufferOffset)\n}\n\n/**\n * Parse the redis buffer\n * @param buffer\n * @returns {undefined}\n */\nJavascriptRedisParser.prototype.execute = function execute (buffer) {\n  if (this.buffer === null) {\n    this.buffer = buffer\n    this.offset = 0\n  } else if (this.bigStrSize === 0) {\n    var oldLength = this.buffer.length\n    var remainingLength = oldLength - this.offset\n    var newBuffer = bufferAlloc(remainingLength + buffer.length)\n    this.buffer.copy(newBuffer, 0, this.offset, oldLength)\n    buffer.copy(newBuffer, remainingLength, 0, buffer.length)\n    this.buffer = newBuffer\n    this.offset = 0\n    if (this.arrayCache.length) {\n      var arr = parseArrayChunks(this)\n      if (!arr) {\n        return\n      }\n      this.returnReply(arr)\n    }\n  } else if (this.totalChunkSize + buffer.length >= this.bigStrSize) {\n    this.bufferCache.push(buffer)\n    var tmp = this.optionReturnBuffers ? concatBulkBuffer(this) : concatBulkString(this)\n    this.bigStrSize = 0\n    this.bufferCache = []\n    this.buffer = buffer\n    if (this.arrayCache.length) {\n      this.arrayCache[0][this.arrayPos[0]++] = tmp\n      tmp = parseArrayChunks(this)\n      if (!tmp) {\n        return\n      }\n    }\n    this.returnReply(tmp)\n  } else {\n    this.bufferCache.push(buffer)\n    this.totalChunkSize += buffer.length\n    return\n  }\n\n  while (this.offset < this.buffer.length) {\n    var offset = this.offset\n    var type = this.buffer[this.offset++]\n    var response = parseType(this, type)\n    if (response === undefined) {\n      if (!this.arrayCache.length) {\n        this.offset = offset\n      }\n      return\n    }\n\n    if (type === 45) {\n      this.returnError(response)\n    } else {\n      this.returnReply(response)\n    }\n  }\n\n  this.buffer = null\n}\n\nmodule.exports = JavascriptRedisParser\n"],"names":["require$$0","ReplyError","ParserError","require$$1"],"mappings":";;;;;;;;;;;AAEA,IAAI,aAAa,GAAGA,8BAAyB,CAAC,cAAa;AAC3D,IAAI,OAAO,GAAG,IAAI,aAAa,GAAE;AACO;AACE;AAC1C,IAAI,UAAU,GAAG,WAAW,CAAC,EAAE,GAAG,IAAI,EAAC;AACvC,IAAI,YAAY,GAAG,EAAC;AACpB,IAAI,QAAQ,GAAG,KAAI;AACnB,IAAI,OAAO,GAAG,EAAC;AACf,IAAI,YAAY,GAAG,EAAC;AACpB,IAAI,QAAQ,GAAG,OAAO,MAAM,CAAC,WAAW,KAAK,WAAU;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,EAAE,GAAG,EAAE;AAC3B,EAAE,OAAO,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC;AAC7D,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kBAAkB,EAAE,MAAM,EAAE;AACrC,EAAE,IAAI,MAAM,GAAG,MAAM,CAAC,OAAM;AAC5B,EAAE,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,EAAC;AACvC,EAAE,IAAI,MAAM,GAAG,EAAC;AAChB,EAAE,IAAI,IAAI,GAAG,EAAC;AACd;AACA,EAAE,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE;AACpC,IAAI,IAAI,GAAG,CAAC,EAAC;AACb,IAAI,MAAM,GAAE;AACZ,GAAG;AACH;AACA,EAAE,OAAO,MAAM,GAAG,MAAM,EAAE;AAC1B,IAAI,IAAI,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,EAAC;AACpC,IAAI,IAAI,EAAE,KAAK,EAAE,EAAE;AACnB,MAAM,MAAM,CAAC,MAAM,GAAG,MAAM,GAAG,EAAC;AAChC,MAAM,OAAO,IAAI,GAAG,MAAM;AAC1B,KAAK;AACL,IAAI,MAAM,GAAG,CAAC,MAAM,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,EAAC;AACtC,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kBAAkB,EAAE,MAAM,EAAE;AACrC,EAAE,IAAI,MAAM,GAAG,MAAM,CAAC,OAAM;AAC5B,EAAE,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,EAAC;AACvC,EAAE,IAAI,MAAM,GAAG,EAAC;AAChB,EAAE,IAAI,GAAG,GAAG,GAAE;AACd;AACA,EAAE,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE;AACpC,IAAI,GAAG,IAAI,IAAG;AACd,IAAI,MAAM,GAAE;AACZ,GAAG;AACH;AACA,EAAE,OAAO,MAAM,GAAG,MAAM,EAAE;AAC1B,IAAI,IAAI,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,EAAC;AACpC,IAAI,IAAI,EAAE,KAAK,EAAE,EAAE;AACnB,MAAM,MAAM,CAAC,MAAM,GAAG,MAAM,GAAG,EAAC;AAChC,MAAM,IAAI,MAAM,KAAK,CAAC,EAAE;AACxB,QAAQ,GAAG,IAAI,OAAM;AACrB,OAAO;AACP,MAAM,OAAO,GAAG;AAChB,KAAK,MAAM,IAAI,MAAM,GAAG,SAAS,EAAE;AACnC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,EAAC;AACtC,MAAM,MAAM,GAAG,EAAC;AAChB,KAAK,MAAM,IAAI,EAAE,KAAK,EAAE,IAAI,MAAM,KAAK,CAAC,EAAE;AAC1C,MAAM,GAAG,IAAI,EAAC;AACd,KAAK,MAAM;AACX,MAAM,MAAM,GAAG,CAAC,MAAM,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,EAAC;AACxC,KAAK;AACL,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kBAAkB,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE;AACjD,EAAE,MAAM,CAAC,MAAM,GAAG,GAAG,GAAG,EAAC;AACzB,EAAE,IAAI,MAAM,CAAC,mBAAmB,KAAK,IAAI,EAAE;AAC3C,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC;AAC1C,GAAG;AACH;AACA,EAAE,OAAO,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC;AACpD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB,EAAE,MAAM,EAAE;AACpC,EAAE,IAAI,KAAK,GAAG,MAAM,CAAC,OAAM;AAC3B,EAAE,IAAI,MAAM,GAAG,MAAK;AACpB,EAAE,IAAI,MAAM,GAAG,MAAM,CAAC,OAAM;AAC5B,EAAE,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,EAAC;AAChC;AACA,EAAE,OAAO,MAAM,GAAG,MAAM,EAAE;AAC1B,IAAI,IAAI,MAAM,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,EAAE;AACjC,MAAM,OAAO,kBAAkB,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,GAAG,CAAC,CAAC;AAC1D,KAAK;AACL,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,EAAE,MAAM,EAAE;AAC9B,EAAE,IAAI,MAAM,GAAG,kBAAkB,CAAC,MAAM,EAAC;AACzC,EAAE,IAAI,MAAM,KAAK,SAAS,EAAE;AAC5B,IAAI,OAAO,MAAM;AACjB,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,EAAE,MAAM,EAAE;AAC/B,EAAE,IAAI,MAAM,CAAC,mBAAmB,EAAE;AAClC,IAAI,OAAO,kBAAkB,CAAC,MAAM,CAAC;AACrC,GAAG;AACH,EAAE,OAAO,kBAAkB,CAAC,MAAM,CAAC;AACnC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,eAAe,EAAE,MAAM,EAAE;AAClC,EAAE,IAAI,MAAM,GAAG,WAAW,CAAC,MAAM,EAAC;AAClC,EAAE,IAAI,MAAM,KAAK,SAAS,EAAE;AAC5B,IAAI,MAAM;AACV,GAAG;AACH,EAAE,IAAI,MAAM,KAAK,CAAC,CAAC,EAAE;AACrB,IAAI,OAAO,IAAI;AACf,GAAG;AACH,EAAE,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,GAAG,OAAM;AACxC,EAAE,IAAI,SAAS,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;AAC5C,IAAI,MAAM,CAAC,UAAU,GAAG,SAAS,GAAG,EAAC;AACrC,IAAI,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,OAAM;AACpC,IAAI,MAAM,CAAC,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,OAAM;AAChD,IAAI,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAC;AAC1C,IAAI,MAAM;AACV,GAAG;AACH;AACA,EAAE,OAAO,kBAAkB,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC;AAC7D,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,EAAE,MAAM,EAAE;AAC7B,EAAE,IAAI,MAAM,GAAG,iBAAiB,CAAC,MAAM,EAAC;AACxC,EAAE,IAAI,MAAM,KAAK,SAAS,EAAE;AAC5B,IAAI,IAAI,MAAM,CAAC,mBAAmB,KAAK,IAAI,EAAE;AAC7C,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,GAAE;AAChC,KAAK;AACL,IAAI,OAAO,IAAIC,UAAU,CAAC,MAAM,CAAC;AACjC,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,EAAE,MAAM,EAAE,KAAK,EAAE;AACrC,EAAE,MAAM,CAAC,MAAM,GAAG,KAAI;AACtB,EAAE,MAAM,CAAC,gBAAgB,CAAC,KAAK,EAAC;AAChC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,EAAE,MAAM,EAAE;AAC7B,EAAE,IAAI,MAAM,GAAG,WAAW,CAAC,MAAM,EAAC;AAClC,EAAE,IAAI,MAAM,KAAK,SAAS,EAAE;AAC5B,IAAI,MAAM;AACV,GAAG;AACH,EAAE,IAAI,MAAM,KAAK,CAAC,CAAC,EAAE;AACrB,IAAI,OAAO,IAAI;AACf,GAAG;AACH,EAAE,IAAI,SAAS,GAAG,IAAI,KAAK,CAAC,MAAM,EAAC;AACnC,EAAE,OAAO,kBAAkB,CAAC,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC;AACjD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,cAAc,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE;AAC5C,EAAE,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAC;AAC9B,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAC;AAC3B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB,EAAE,MAAM,EAAE;AACnC,EAAE,IAAI,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,GAAE;AACnC,EAAE,IAAI,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAE;AACjC,EAAE,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE;AAChC,IAAI,IAAI,GAAG,GAAG,gBAAgB,CAAC,MAAM,EAAC;AACtC,IAAI,IAAI,CAAC,GAAG,EAAE;AACd,MAAM,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,EAAC;AACtC,MAAM,MAAM;AACZ,KAAK;AACL,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAG;AACpB,GAAG;AACH,EAAE,OAAO,kBAAkB,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC;AAC7C,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kBAAkB,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,EAAE;AACnD,EAAE,IAAI,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,OAAM;AACzC,EAAE,OAAO,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE;AAC/B,IAAI,IAAI,MAAM,GAAG,MAAM,CAAC,OAAM;AAC9B,IAAI,IAAI,MAAM,CAAC,MAAM,IAAI,YAAY,EAAE;AACvC,MAAM,cAAc,CAAC,MAAM,EAAE,SAAS,EAAE,CAAC,EAAC;AAC1C,MAAM,MAAM;AACZ,KAAK;AACL,IAAI,IAAI,QAAQ,GAAG,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAC;AACpE,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;AAChC,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE;AACrC,QAAQ,MAAM,CAAC,MAAM,GAAG,OAAM;AAC9B,OAAO;AACP,MAAM,cAAc,CAAC,MAAM,EAAE,SAAS,EAAE,CAAC,EAAC;AAC1C,MAAM,MAAM;AACZ,KAAK;AACL,IAAI,SAAS,CAAC,CAAC,CAAC,GAAG,SAAQ;AAC3B,IAAI,CAAC,GAAE;AACP,GAAG;AACH;AACA,EAAE,OAAO,SAAS;AAClB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE;AAClC,EAAE,QAAQ,IAAI;AACd,IAAI,KAAK,EAAE;AACX,MAAM,OAAO,eAAe,CAAC,MAAM,CAAC;AACpC,IAAI,KAAK,EAAE;AACX,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC;AACjC,IAAI,KAAK,EAAE;AACX,MAAM,OAAO,iBAAiB,CAAC,MAAM,CAAC;AACtC,IAAI,KAAK,EAAE;AACX,MAAM,OAAO,UAAU,CAAC,MAAM,CAAC;AAC/B,IAAI,KAAK,EAAE;AACX,MAAM,OAAO,UAAU,CAAC,MAAM,CAAC;AAC/B,IAAI;AACJ,MAAM,OAAO,WAAW,CAAC,MAAM,EAAE,IAAIC,WAAW;AAChD,QAAQ,sBAAsB,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,GAAG,qBAAqB;AAClG,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC;AACrC,QAAQ,MAAM,CAAC,MAAM;AACrB,OAAO,CAAC;AACR,GAAG;AACH,CAAC;AACD;AACA;AACA,IAAI,WAAW,GAAG;AAClB,EAAE,WAAW,EAAE,UAAU;AACzB,EAAE,gBAAgB,EAAE,UAAU;AAC9B,EAAE,WAAW,EAAE,UAAU;AACzB,EAAE,aAAa,EAAE,SAAS;AAC1B,EAAE,aAAa,EAAE,SAAS;AAC1B,EAAE,IAAI,EAAE,QAAQ;AAChB,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,qBAAqB,EAAE,OAAO,EAAE;AACzC,EAAE,IAAI,EAAE,IAAI,YAAY,qBAAqB,CAAC,EAAE;AAChD,IAAI,OAAO,IAAI,qBAAqB,CAAC,OAAO,CAAC;AAC7C,GAAG;AACH,EAAE,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;AAChE,IAAI,MAAM,IAAI,SAAS,CAAC,iEAAiE,CAAC;AAC1F,GAAG;AACH,EAAE,KAAK,IAAI,GAAG,IAAI,OAAO,EAAE;AAC3B;AACA,IAAI,IAAI,WAAW,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,OAAO,OAAO,CAAC,GAAG,CAAC,KAAK,WAAW,CAAC,GAAG,CAAC,EAAE;AACrF,MAAM,MAAM,IAAI,SAAS,CAAC,8CAA8C,GAAG,GAAG,GAAG,6CAA6C,CAAC;AAC/H,KAAK;AACL,GAAG;AACH,EAAE,IAAI,OAAO,CAAC,IAAI,KAAK,SAAS,EAAE;AAClC;AACA,IAAI,IAAI;AACR,MAAM,IAAI,OAAO,GAAGC,QAAoB;AACxC,MAAM,OAAO,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC,4FAA4F,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,EAAC;AAClK,MAAM,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC;AACjC,KAAK,CAAC,OAAO,CAAC,EAAE;AAChB,MAAM,OAAO,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC,oGAAoG,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,EAAC;AAC1K,KAAK;AACL,GAAG;AACH,EAAE,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC,OAAO,CAAC,cAAa;AACpD,EAAE,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC,OAAO,CAAC,cAAa;AACpD,EAAE,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,YAAW;AACxC,EAAE,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC,gBAAgB,IAAI,OAAO,CAAC,YAAW;AACzE,EAAE,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,YAAW;AACxC,EAAE,IAAI,CAAC,IAAI,GAAG,aAAY;AAC1B,EAAE,IAAI,CAAC,KAAK,GAAE;AACd,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,CAAC,SAAS,CAAC,KAAK,GAAG,YAAY;AACpD,EAAE,IAAI,CAAC,MAAM,GAAG,EAAC;AACjB,EAAE,IAAI,CAAC,MAAM,GAAG,KAAI;AACpB,EAAE,IAAI,CAAC,UAAU,GAAG,EAAC;AACrB,EAAE,IAAI,CAAC,SAAS,GAAG,EAAC;AACpB,EAAE,IAAI,CAAC,cAAc,GAAG,EAAC;AACzB,EAAE,IAAI,CAAC,WAAW,GAAG,GAAE;AACvB,EAAE,IAAI,CAAC,UAAU,GAAG,GAAE;AACtB,EAAE,IAAI,CAAC,QAAQ,GAAG,GAAE;AACpB,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAU,aAAa,EAAE;AAC5E,EAAE,IAAI,OAAO,aAAa,KAAK,SAAS,EAAE;AAC1C,IAAI,MAAM,IAAI,SAAS,CAAC,gDAAgD,CAAC;AACzE,GAAG;AACH,EAAE,IAAI,CAAC,mBAAmB,GAAG,cAAa;AAC1C,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAU,aAAa,EAAE;AAC5E,EAAE,IAAI,OAAO,aAAa,KAAK,SAAS,EAAE;AAC1C,IAAI,MAAM,IAAI,SAAS,CAAC,gDAAgD,CAAC;AACzE,GAAG;AACH,EAAE,IAAI,CAAC,mBAAmB,GAAG,cAAa;AAC1C,EAAC;AACD;AACA;AACA;AACA;AACA;AACA,SAAS,kBAAkB,IAAI;AAC/B,EAAE,IAAI,UAAU,CAAC,MAAM,GAAG,EAAE,GAAG,IAAI,EAAE;AACrC;AACA,IAAI,IAAI,OAAO,KAAK,CAAC,IAAI,YAAY,GAAG,OAAO,GAAG,CAAC,EAAE;AACrD;AACA,MAAM,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,GAAG,EAAE,EAAC;AAC1D,MAAM,IAAI,YAAY,IAAI,WAAW,EAAE;AACvC,QAAQ,YAAY,GAAG,EAAC;AACxB,OAAO,MAAM;AACb,QAAQ,YAAY,IAAI,YAAW;AACnC,OAAO;AACP,MAAM,UAAU,GAAG,UAAU,CAAC,KAAK,CAAC,WAAW,EAAE,UAAU,CAAC,MAAM,EAAC;AACnE,KAAK,MAAM;AACX,MAAM,YAAY,GAAE;AACpB,MAAM,OAAO,GAAE;AACf,KAAK;AACL,GAAG,MAAM;AACT,IAAI,aAAa,CAAC,QAAQ,EAAC;AAC3B,IAAI,OAAO,GAAG,EAAC;AACf,IAAI,YAAY,GAAG,EAAC;AACpB,IAAI,QAAQ,GAAG,KAAI;AACnB,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,EAAE,MAAM,EAAE;AAC/B,EAAE,IAAI,UAAU,CAAC,MAAM,GAAG,MAAM,GAAG,YAAY,EAAE;AACjD,IAAI,IAAI,UAAU,GAAG,MAAM,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,GAAG,EAAC;AACtD,IAAI,IAAI,YAAY,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,EAAE;AAC1C,MAAM,YAAY,GAAG,IAAI,GAAG,IAAI,GAAG,GAAE;AACrC,KAAK;AACL,IAAI,UAAU,GAAG,WAAW,CAAC,MAAM,GAAG,UAAU,GAAG,YAAY,EAAC;AAChE,IAAI,YAAY,GAAG,EAAC;AACpB,IAAI,OAAO,GAAE;AACb,IAAI,IAAI,QAAQ,KAAK,IAAI,EAAE;AAC3B,MAAM,QAAQ,GAAG,WAAW,CAAC,kBAAkB,EAAE,EAAE,EAAC;AACpD,KAAK;AACL,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB,EAAE,MAAM,EAAE;AACnC,EAAE,IAAI,IAAI,GAAG,MAAM,CAAC,YAAW;AAC/B,EAAE,IAAI,MAAM,GAAG,IAAI,CAAC,OAAM;AAC1B,EAAE,IAAI,MAAM,GAAG,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,eAAc;AACxD,EAAE,MAAM,CAAC,MAAM,GAAG,OAAM;AACxB,EAAE,IAAI,MAAM,IAAI,CAAC,EAAE;AACnB,IAAI,IAAI,MAAM,KAAK,CAAC,EAAE;AACtB,MAAM,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC;AACpF,KAAK;AACL,IAAI,MAAM,GAAE;AACZ,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,OAAM;AAClD,GAAG;AACH,EAAE,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,EAAC;AAC1D,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACvC,IAAI,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC;AACjC,GAAG;AACH,EAAE,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC,EAAC;AAClD,EAAE,OAAO,GAAG;AACZ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB,EAAE,MAAM,EAAE;AACnC,EAAE,IAAI,IAAI,GAAG,MAAM,CAAC,YAAW;AAC/B,EAAE,IAAI,MAAM,GAAG,IAAI,CAAC,OAAM;AAC1B,EAAE,IAAI,MAAM,GAAG,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,SAAS,GAAG,EAAC;AACvD,EAAE,IAAI,MAAM,GAAG,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,eAAc;AACxD,EAAE,MAAM,CAAC,MAAM,GAAG,OAAM;AACxB,EAAE,IAAI,MAAM,IAAI,CAAC,EAAE;AACnB,IAAI,IAAI,MAAM,KAAK,CAAC,EAAE;AACtB,MAAM,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC;AACzE,KAAK;AACL,IAAI,MAAM,GAAE;AACZ,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,OAAM;AAClD,GAAG;AACH,EAAE,YAAY,CAAC,MAAM,EAAC;AACtB,EAAE,IAAI,KAAK,GAAG,aAAY;AAC1B,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAC;AACnE,EAAE,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,UAAS;AACnD,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACvC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,YAAY,EAAC;AAC1C,IAAI,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,OAAM;AAClC,GAAG;AACH,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,YAAY,EAAE,CAAC,EAAE,MAAM,GAAG,CAAC,EAAC;AACvD,EAAE,YAAY,IAAI,MAAM,GAAG,EAAC;AAC5B,EAAE,OAAO,UAAU,CAAC,KAAK,CAAC,KAAK,EAAE,YAAY,CAAC;AAC9C,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,EAAE,MAAM,EAAE;AACpE,EAAE,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;AAC5B,IAAI,IAAI,CAAC,MAAM,GAAG,OAAM;AACxB,IAAI,IAAI,CAAC,MAAM,GAAG,EAAC;AACnB,GAAG,MAAM,IAAI,IAAI,CAAC,UAAU,KAAK,CAAC,EAAE;AACpC,IAAI,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,OAAM;AACtC,IAAI,IAAI,eAAe,GAAG,SAAS,GAAG,IAAI,CAAC,OAAM;AACjD,IAAI,IAAI,SAAS,GAAG,WAAW,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,EAAC;AAChE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,SAAS,EAAC;AAC1D,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,eAAe,EAAE,CAAC,EAAE,MAAM,CAAC,MAAM,EAAC;AAC7D,IAAI,IAAI,CAAC,MAAM,GAAG,UAAS;AAC3B,IAAI,IAAI,CAAC,MAAM,GAAG,EAAC;AACnB,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;AAChC,MAAM,IAAI,GAAG,GAAG,gBAAgB,CAAC,IAAI,EAAC;AACtC,MAAM,IAAI,CAAC,GAAG,EAAE;AAChB,QAAQ,MAAM;AACd,OAAO;AACP,MAAM,IAAI,CAAC,WAAW,CAAC,GAAG,EAAC;AAC3B,KAAK;AACL,GAAG,MAAM,IAAI,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,EAAE;AACrE,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAC;AACjC,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,mBAAmB,GAAG,gBAAgB,CAAC,IAAI,CAAC,GAAG,gBAAgB,CAAC,IAAI,EAAC;AACxF,IAAI,IAAI,CAAC,UAAU,GAAG,EAAC;AACvB,IAAI,IAAI,CAAC,WAAW,GAAG,GAAE;AACzB,IAAI,IAAI,CAAC,MAAM,GAAG,OAAM;AACxB,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;AAChC,MAAM,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAG;AAClD,MAAM,GAAG,GAAG,gBAAgB,CAAC,IAAI,EAAC;AAClC,MAAM,IAAI,CAAC,GAAG,EAAE;AAChB,QAAQ,MAAM;AACd,OAAO;AACP,KAAK;AACL,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,EAAC;AACzB,GAAG,MAAM;AACT,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAC;AACjC,IAAI,IAAI,CAAC,cAAc,IAAI,MAAM,CAAC,OAAM;AACxC,IAAI,MAAM;AACV,GAAG;AACH;AACA,EAAE,OAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;AAC3C,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,OAAM;AAC5B,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,EAAC;AACzC,IAAI,IAAI,QAAQ,GAAG,SAAS,CAAC,IAAI,EAAE,IAAI,EAAC;AACxC,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;AAChC,MAAM,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;AACnC,QAAQ,IAAI,CAAC,MAAM,GAAG,OAAM;AAC5B,OAAO;AACP,MAAM,MAAM;AACZ,KAAK;AACL;AACA,IAAI,IAAI,IAAI,KAAK,EAAE,EAAE;AACrB,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAC;AAChC,KAAK,MAAM;AACX,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAC;AAChC,KAAK;AACL,GAAG;AACH;AACA,EAAE,IAAI,CAAC,MAAM,GAAG,KAAI;AACpB,EAAC;AACD;UACc,GAAG;;;;"}