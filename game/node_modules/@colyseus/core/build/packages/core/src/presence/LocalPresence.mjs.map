{"version":3,"file":"LocalPresence.mjs","sources":["../../../../../src/presence/LocalPresence.ts"],"sourcesContent":["import { EventEmitter } from 'events';\nimport { spliceOne } from '../Utils';\nimport { Presence } from './Presence';\n\ntype Callback = (...args: any[]) => void;\n\nexport class LocalPresence implements Presence {\n    public channels = new EventEmitter();\n\n    public data: {[roomName: string]: string[]} = {};\n    public hash: {[roomName: string]: {[key: string]: string}} = {};\n\n    public keys: {[name: string]: string | number} = {};\n\n    protected subscriptions: {[id: string]: Callback[]} = {};\n    private timeouts: {[name: string]: NodeJS.Timer} = {};\n\n    public subscribe(topic: string, callback: (...args: any[]) => void) {\n        if (!this.subscriptions[topic]) { this.subscriptions[topic] = []; }\n        this.subscriptions[topic].push(callback);\n        this.channels.on(topic, callback);\n        return this;\n    }\n\n    public unsubscribe(topic: string, callback?: Callback) {\n        const topicCallbacks = this.subscriptions[topic];\n        if (!topicCallbacks) { return; }\n\n        if (callback)  {\n            const idx = topicCallbacks.indexOf(callback);\n            if (idx !== -1) {\n                topicCallbacks.splice(idx, 1);\n                this.channels.removeListener(topic, callback);\n            }\n\n            if (topicCallbacks.length === 0) {\n                delete this.subscriptions[topic];\n            }\n\n        } else {\n          topicCallbacks.forEach((cb) =>\n            this.channels.removeListener(topic, cb));\n\n          delete this.subscriptions[topic];\n        }\n\n        return this;\n    }\n\n    public publish(topic: string, data: any) {\n        this.channels.emit(topic, data);\n        return this;\n    }\n\n    public async exists(roomId: string): Promise<boolean> {\n        return this.channels.listenerCount(roomId) > 0;\n    }\n\n    public setex(key: string, value: string, seconds: number) {\n        // ensure previous timeout is clear before setting another one.\n        if (this.timeouts[key]) {\n            clearTimeout(this.timeouts[key]);\n        }\n\n        this.keys[key] = value;\n        this.timeouts[key] = setTimeout(() => {\n            delete this.keys[key];\n            delete this.timeouts[key];\n        }, seconds * 1000);\n    }\n\n    public get(key: string) {\n        return this.keys[key];\n    }\n\n    public del(key: string) {\n        delete this.keys[key];\n        delete this.data[key];\n        delete this.hash[key];\n    }\n\n    public sadd(key: string, value: any) {\n        if (!this.data[key]) {\n            this.data[key] = [];\n        }\n\n        if (this.data[key].indexOf(value) === -1) {\n            this.data[key].push(value);\n        }\n    }\n\n    public async smembers(key: string): Promise<string[]> {\n        return this.data[key] || [];\n    }\n\n    public async sismember(key: string, field: string) {\n        return this.data[key] && this.data[key].includes(field) ? 1 : 0;\n    }\n\n    public srem(key: string, value: any) {\n        if (this.data[key]) {\n            spliceOne(this.data[key], this.data[key].indexOf(value));\n        }\n    }\n\n    public scard(key: string) {\n        return (this.data[key] || []).length;\n    }\n\n    public async sinter(...keys: string[]) {\n      const intersection: {[value: string]: number} = {};\n\n      for (let i = 0, l = keys.length; i < l; i++) {\n        (await this.smembers(keys[i])).forEach((member) => {\n          if (!intersection[member]) {\n            intersection[member] = 0;\n          }\n\n          intersection[member]++;\n        });\n      }\n\n      return Object.keys(intersection).reduce((prev, curr) => {\n        if (intersection[curr] > 1) {\n          prev.push(curr);\n        }\n        return prev;\n      }, []);\n    }\n\n    public hset(key: string, field: string, value: string) {\n        if (!this.hash[key]) { this.hash[key] = {}; }\n        this.hash[key][field] = value;\n    }\n\n    public hincrby(key: string, field: string, value: number) {\n        if (!this.hash[key]) { this.hash[key] = {}; }\n        const previousValue = Number(this.hash[key][field] || '0');\n        this.hash[key][field] = (previousValue + value).toString();\n    }\n\n    public async hget(key: string, field: string) {\n        return this.hash[key] && this.hash[key][field];\n    }\n\n    public async hgetall(key: string) {\n        return this.hash[key] || {};\n    }\n\n    public hdel(key: string, field: any) {\n        if (this.hash[key]) {\n            delete this.hash[key][field];\n        }\n    }\n\n    public async hlen(key: string) {\n        return this.hash[key] && Object.keys(this.hash[key]).length || 0;\n    }\n\n    public async incr(key: string) {\n        if (!this.keys[key]) {\n            this.keys[key] = 0;\n        }\n        (this.keys[key] as number)++;\n        return this.keys[key];\n    }\n\n    public async decr(key: string) {\n        if (!this.keys[key]) {\n            this.keys[key] = 0;\n        }\n        (this.keys[key] as number)--;\n        return this.keys[key];\n    }\n\n    public shutdown() {\n      // noop\n    }\n\n}\n"],"names":[],"mappings":";;;MAMa,aAAa;IACf,QAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;IAE9B,IAAI,GAAmC,EAAE,CAAC;IAC1C,IAAI,GAAkD,EAAE,CAAC;IAEzD,IAAI,GAAsC,EAAE,CAAC;IAE1C,aAAa,GAA+B,EAAE,CAAC;IACjD,QAAQ,GAAmC,EAAE,CAAC;IAE/C,SAAS,CAAC,KAAa,EAAE,QAAkC;QAC9D,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;YAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;SAAE;QACnE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC;KACf;IAEM,WAAW,CAAC,KAAa,EAAE,QAAmB;QACjD,MAAM,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACjD,IAAI,CAAC,cAAc,EAAE;YAAE,OAAO;SAAE;QAEhC,IAAI,QAAQ,EAAG;YACX,MAAM,GAAG,GAAG,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC7C,IAAI,GAAG,KAAK,CAAC,CAAC,EAAE;gBACZ,cAAc,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBAC9B,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;aACjD;YAED,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC7B,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;aACpC;SAEJ;aAAM;YACL,cAAc,CAAC,OAAO,CAAC,CAAC,EAAE,KACxB,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;YAE3C,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SAClC;QAED,OAAO,IAAI,CAAC;KACf;IAEM,OAAO,CAAC,KAAa,EAAE,IAAS;QACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC;KACf;IAEM,MAAM,MAAM,CAAC,MAAc;QAC9B,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;KAClD;IAEM,KAAK,CAAC,GAAW,EAAE,KAAa,EAAE,OAAe;;QAEpD,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACpB,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;SACpC;QAED,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC;YAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;SAC7B,EAAE,OAAO,GAAG,IAAI,CAAC,CAAC;KACtB;IAEM,GAAG,CAAC,GAAW;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACzB;IAEM,GAAG,CAAC,GAAW;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACzB;IAEM,IAAI,CAAC,GAAW,EAAE,KAAU;QAC/B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YACjB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;SACvB;QAED,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;YACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC9B;KACJ;IAEM,MAAM,QAAQ,CAAC,GAAW;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;KAC/B;IAEM,MAAM,SAAS,CAAC,GAAW,EAAE,KAAa;QAC7C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KACnE;IAEM,IAAI,CAAC,GAAW,EAAE,KAAU;QAC/B,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YAChB,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;SAC5D;KACJ;IAEM,KAAK,CAAC,GAAW;QACpB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC;KACxC;IAEM,MAAM,MAAM,CAAC,GAAG,IAAc;QACnC,MAAM,YAAY,GAA8B,EAAE,CAAC;QAEnD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC3C,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,MAAM;gBAC5C,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE;oBACzB,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;iBAC1B;gBAED,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC;aACxB,CAAC,CAAC;SACJ;QAED,OAAO,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI;YACjD,IAAI,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;gBAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACjB;YACD,OAAO,IAAI,CAAC;SACb,EAAE,EAAE,CAAC,CAAC;KACR;IAEM,IAAI,CAAC,GAAW,EAAE,KAAa,EAAE,KAAa;QACjD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;SAAE;QAC7C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;KACjC;IAEM,OAAO,CAAC,GAAW,EAAE,KAAa,EAAE,KAAa;QACpD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;SAAE;QAC7C,MAAM,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;QAC3D,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,GAAG,KAAK,EAAE,QAAQ,EAAE,CAAC;KAC9D;IAEM,MAAM,IAAI,CAAC,GAAW,EAAE,KAAa;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;KAClD;IAEM,MAAM,OAAO,CAAC,GAAW;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;KAC/B;IAEM,IAAI,CAAC,GAAW,EAAE,KAAU;QAC/B,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;SAChC;KACJ;IAEM,MAAM,IAAI,CAAC,GAAW;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC;KACpE;IAEM,MAAM,IAAI,CAAC,GAAW;QACzB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YACjB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACtB;QACA,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,EAAE,CAAC;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACzB;IAEM,MAAM,IAAI,CAAC,GAAW;QACzB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YACjB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACtB;QACA,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,EAAE,CAAC;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACzB;IAEM,QAAQ;;KAEd;;;;;"}