{"version":3,"file":"SchemaSerializer.mjs","sources":["../../../../../src/serializer/SchemaSerializer.ts"],"sourcesContent":["/* tslint:disable:no-string-literal */\n\nimport { Client } from '..';\nimport { Serializer } from './Serializer';\n\nimport { dumpChanges, hasFilter, Reflection, Schema } from '@colyseus/schema';\nimport { debugPatch } from '../Debug';\nimport { Protocol } from '../Protocol';\nimport { ClientState } from '../Transport';\n\nexport class SchemaSerializer<T> implements Serializer<T> {\n  public id = 'schema';\n\n  private state: T & Schema;\n  private useFilters: boolean = false;\n\n  private handshakeCache: number[];\n\n  public reset(newState: T & Schema) {\n    this.state = newState;\n    this.useFilters = hasFilter(newState.constructor as typeof Schema);\n  }\n\n  public getFullState(client?: Client) {\n    const fullEncodedState = this.state.encodeAll(this.useFilters);\n\n    if (client && this.useFilters) {\n      return this.state.applyFilters(client, true);\n\n    } else {\n      return fullEncodedState;\n    }\n  }\n\n  public applyPatches(clients: Client[]) {\n    const hasChanges = this.state['$changes'].changes.size > 0;\n\n    if (hasChanges) {\n      let numClients = clients.length;\n\n      // dump changes for patch debugging\n      if (debugPatch.enabled) {\n        (debugPatch as any).dumpChanges = dumpChanges(this.state);\n      }\n\n      // get patch bytes\n      const patches = this.state.encode(false, [], this.useFilters);\n\n      if (!this.useFilters) {\n        // encode changes once, for all clients\n        patches.unshift(Protocol.ROOM_STATE_PATCH);\n\n        while (numClients--) {\n          const client = clients[numClients];\n\n          //\n          // FIXME: avoid this check.\n          //\n          if (client.state === ClientState.JOINED) {\n            client.raw(patches);\n          }\n        }\n\n      } else {\n\n        // encode state multiple times, for each client\n        while (numClients--) {\n          const client = clients[numClients];\n\n          //\n          // FIXME: avoid this check.\n          //\n          if (client.state === ClientState.JOINED) {\n            const filteredPatches = this.state.applyFilters(client);\n            client.raw([Protocol.ROOM_STATE_PATCH, ...filteredPatches]);\n          }\n        }\n\n        this.state.discardAllChanges();\n      }\n\n      // debug patches\n      if (debugPatch.enabled) {\n        debugPatch(\n          '%d bytes sent to %d clients, %j',\n          patches.length,\n          clients.length,\n          (debugPatch as any).dumpChanges,\n        );\n      }\n    }\n\n    return hasChanges;\n  }\n\n  public handshake() {\n    /**\n     * Cache handshake to avoid encoding it for each client joining\n     */\n    if (!this.handshakeCache) {\n      this.handshakeCache = (this.state && Reflection.encode(this.state));\n    }\n\n    return this.handshakeCache;\n  }\n\n}\n"],"names":[],"mappings":";;;;;AAAA;MAUa,gBAAgB;IACpB,EAAE,GAAG,QAAQ,CAAC;IAEb,KAAK,CAAa;IAClB,UAAU,GAAY,KAAK,CAAC;IAE5B,cAAc,CAAW;IAE1B,KAAK,CAAC,QAAoB;QAC/B,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,QAAQ,CAAC,WAA4B,CAAC,CAAC;KACpE;IAEM,YAAY,CAAC,MAAe;QACjC,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAE/D,IAAI,MAAM,IAAI,IAAI,CAAC,UAAU,EAAE;YAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;SAE9C;aAAM;YACL,OAAO,gBAAgB,CAAC;SACzB;KACF;IAEM,YAAY,CAAC,OAAiB;QACnC,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC;QAE3D,IAAI,UAAU,EAAE;YACd,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC;;YAGhC,IAAI,UAAU,CAAC,OAAO,EAAE;gBACrB,UAAkB,CAAC,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC3D;;YAGD,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YAE9D,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;;gBAEpB,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;gBAE3C,OAAO,UAAU,EAAE,EAAE;oBACnB,MAAM,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;;;oBAKnC,IAAI,MAAM,CAAC,KAAK,KAAK,WAAW,CAAC,MAAM,EAAE;wBACvC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;qBACrB;iBACF;aAEF;iBAAM;;gBAGL,OAAO,UAAU,EAAE,EAAE;oBACnB,MAAM,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;;;oBAKnC,IAAI,MAAM,CAAC,KAAK,KAAK,WAAW,CAAC,MAAM,EAAE;wBACvC,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;wBACxD,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,gBAAgB,EAAE,GAAG,eAAe,CAAC,CAAC,CAAC;qBAC7D;iBACF;gBAED,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC;aAChC;;YAGD,IAAI,UAAU,CAAC,OAAO,EAAE;gBACtB,UAAU,CACR,iCAAiC,EACjC,OAAO,CAAC,MAAM,EACd,OAAO,CAAC,MAAM,EACb,UAAkB,CAAC,WAAW,CAChC,CAAC;aACH;SACF;QAED,OAAO,UAAU,CAAC;KACnB;IAEM,SAAS;;;;QAId,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACxB,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,KAAK,IAAI,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;SACrE;QAED,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;"}