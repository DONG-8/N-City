{"version":3,"file":"WebSocketTransport.mjs.js","sources":["../../../../../../transport/ws-transport/build/WebSocketTransport.mjs"],"sourcesContent":["import http from 'http';\nimport WebSocket from 'ws';\nimport { Transport, debugAndPrintError, debugConnection, matchMaker, Protocol } from '@colyseus/core';\nimport { WebSocketClient } from './WebSocketClient.mjs';\n\nfunction noop() { }\nfunction heartbeat() { this.pingCount = 0; }\nclass WebSocketTransport extends Transport {\n    wss;\n    pingInterval;\n    pingIntervalMS;\n    pingMaxRetries;\n    constructor(options = {}) {\n        super();\n        // disable per-message deflate by default\n        if (options.perMessageDeflate === undefined) {\n            options.perMessageDeflate = false;\n        }\n        this.pingIntervalMS = (options.pingInterval !== undefined)\n            ? options.pingInterval\n            : 3000;\n        this.pingMaxRetries = (options.pingMaxRetries !== undefined)\n            ? options.pingMaxRetries\n            : 2;\n        // create server by default\n        if (!options.server && !options.noServer) {\n            options.server = http.createServer();\n        }\n        this.wss = new WebSocket.Server(options);\n        this.wss.on('connection', this.onConnection);\n        // this is required to allow the ECONNRESET error to trigger on the `server` instance.\n        this.wss.on('error', (err) => debugAndPrintError(err));\n        this.server = options.server;\n        if (this.pingIntervalMS > 0 && this.pingMaxRetries > 0) {\n            this.server.on('listening', () => this.autoTerminateUnresponsiveClients(this.pingIntervalMS, this.pingMaxRetries));\n            this.server.on('close', () => clearInterval(this.pingInterval));\n        }\n    }\n    listen(port, hostname, backlog, listeningListener) {\n        this.server.listen(port, hostname, backlog, listeningListener);\n        return this;\n    }\n    shutdown() {\n        this.wss.close();\n        this.server.close();\n    }\n    simulateLatency(milliseconds) {\n        const previousSend = WebSocket.prototype.send;\n        WebSocket.prototype.send = function (...args) {\n            setTimeout(() => previousSend.apply(this, args), milliseconds);\n        };\n    }\n    autoTerminateUnresponsiveClients(pingInterval, pingMaxRetries) {\n        // interval to detect broken connections\n        this.pingInterval = setInterval(() => {\n            this.wss.clients.forEach((client) => {\n                //\n                // if client hasn't responded after the interval, terminate its connection.\n                //\n                if (client.pingCount >= pingMaxRetries) {\n                    // debugConnection(`terminating unresponsive client ${client.sessionId}`);\n                    debugConnection(`terminating unresponsive client`);\n                    return client.terminate();\n                }\n                client.pingCount++;\n                client.ping(noop);\n            });\n        }, pingInterval);\n    }\n    async onConnection(rawClient, req) {\n        // prevent server crashes if a single client had unexpected error\n        rawClient.on('error', (err) => debugAndPrintError(err.message + '\\n' + err.stack));\n        rawClient.on('pong', heartbeat);\n        // compatibility with ws / uws\n        const upgradeReq = req || rawClient.upgradeReq;\n        const parsedURL = new URL(upgradeReq.url);\n        const sessionId = parsedURL.searchParams.get(\"sessionId\");\n        const processAndRoomId = parsedURL.pathname.match(/\\/[a-zA-Z0-9_\\-]+\\/([a-zA-Z0-9_\\-]+)$/);\n        const roomId = processAndRoomId && processAndRoomId[1];\n        const room = matchMaker.getRoomById(roomId);\n        // set client id\n        rawClient.pingCount = 0;\n        const client = new WebSocketClient(sessionId, rawClient);\n        //\n        // TODO: DRY code below with all transports\n        //\n        try {\n            if (!room || !room.hasReservedSeat(sessionId, parsedURL.searchParams.get(\"reconnectionToken\"))) {\n                throw new Error('seat reservation expired.');\n            }\n            await room._onJoin(client, upgradeReq);\n        }\n        catch (e) {\n            debugAndPrintError(e);\n            // send error code to client then terminate\n            client.error(e.code, e.message, () => rawClient.close(Protocol.WS_CLOSE_WITH_ERROR));\n        }\n    }\n}\n\nexport { WebSocketTransport };\n//# sourceMappingURL=WebSocketTransport.mjs.map\n"],"names":["Transport","http","WebSocket","debugAndPrintError","debugConnection","matchMaker","WebSocketClient","Protocol"],"mappings":"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"}